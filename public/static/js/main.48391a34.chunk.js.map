{"version":3,"sources":["reducers/auth/AuthContext.js","types/types.js","reducers/auth/authReducer.js","helpers/fetch.js","reducers/CompanyContext.js","reducers/CompanyReducer.js","reducers/sections/sectionsContext.js","reducers/sections/SectionsReducer.js","components/company/EditGroup.jsx","helpers/uploadFiles.js","hooks/useForm.js","actions/company.action.js","components/_ui/SectionTitle/SectionTitle.jsx","components/company/UpdateCompany.jsx","components/company/AddCompany.jsx","components/company/CompanyScreen.jsx","components/DashboardScreen/DashboardScreen.jsx","components/_ui/DashboardNav/DashboardNav.jsx","actions/posts.action.js","components/_ui/Posts/PostElement/PostElement.jsx","components/posts/PostsScreen/PostsScreen.jsx","actions/post-content/text.action.js","actions/post-content/image.action.js","components/_ui/TitlesArea/TitlesArea.jsx","components/_ui/Loader/Loader.jsx","components/posts/content/AddImage.jsx","components/_ui/TextEditor/TextEditor.jsx","components/posts/content/AddText.jsx","components/_ui/WhatToAdd/WhatToAdd.jsx","components/_ui/Posts/PostState/PostState.jsx","components/_ui/ImageType/ImageType.jsx","helpers/convertSlug.js","components/_ui/DateInput/DateInput.jsx","components/_ui/Posts/PostCategories/PostCategories.jsx","components/posts/AddPosts/AddPostScreen.jsx","components/posts/Post/Post.jsx","components/posts/EditPosts/EditPostScreen.jsx","actions/sections.action.js","components/sections/EditGroupSection.jsx","components/_ui/TextEditor/TextEditorSections.jsx","components/sections/SectionScreen.jsx","components/sections/AddSection.jsx","actions/auth.action.js","components/auth/LoginScreen/LoginScreen.jsx","components/auth/SignupScreen/SignupScreen.jsx","components/_ui/NavBar/NavBar.jsx","components/_ui/SectionCard/SectionCard.jsx","components/sections/AllSections.jsx","routers/AppRouter.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","require","types","login","signup","logout","hasToken","getCompany","addCompany","companyUpdate","companyDelete","getPosts","getThisPost","addPost","postUpdate","postCategoriesUpdate","addSection","getSections","sectionUpdate","deleteSection","updateThis","AuthReducer","state","action","type","payload","logged","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","CompanyContext","CompanyReducer","addCompnany","deleteProperty","maquinasCategoriesUpdate","maquinasCategories","SectionContext","SectionsReducer","EditGroup","nameValue","deleteField","inputType","editLabel","editAction","editValue","submitEdit","imageEdit","useState","show","setShow","handleClose","handleShow","className","src","alt","onClick","Modal","onHide","Header","Title","Body","onSubmit","name","onChange","placeholder","Footer","fileUpload","file","a","formData","FormData","append","then","json","secure_url","catch","err","console","log","useForm","initialState","values","setValues","loading","setLoading","resetForm","handleInputChange","target","value","handleFileChange","files","fetchCompany","resp","ok","companyFetched","company","companyCreated","updateCompany","id","updatedCompany","Swal","fire","errorMsg","error","deleteCompany","SectionTitle","title","instructions","image","user","useContext","UpdateCompany","auxValue","setAuxValue","myCompany","getMyCompany","useCallback","useEffect","handleDelete","_id","clearInput","document","getElementById","property","handleSubmit","e","preventDefault","saveChanges","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","address","phone","mainEmail","mainLogo","secondaryLogo","twitter","facebook","instagram","linkedin","categories","map","ft","idx","categoriesCopy","splice","deleteFeature","includes","AddCompany","htmlFor","CompanyScreen","isMounted","useRef","current","DashboardScreen","DashboardNav","dispatch","currentNav","setCurrentNav","handleLogout","removeItem","to","email","getUserPosts","userPosts","posts","thePost","post","postCreated","updatePost","updatedPost","deletePost","dayjs","locale","PostElement","askIfDelete","postDate","format","createdAt","updatedAt","status","PostsScreen","history","useHistory","setPosts","allMyPosts","handleAdd","Date","author","newPost","push","handleDeletePost","length","elm","addText","postID","textCreated","msg","deleteText","addImage","imageCreated","deleteImage","TitlesArea","selectedPost","saveTitles","subtitle","Loader","AddImage","saveElement","saveImage","theImage","TextEditor","setQuill","setValue","quillRef","ref","modules","toolbar","container","header","color","background","align","list","indent","script","clipboard","matchVisual","formats","theme","AddText","quill","saveText","theText","parsedText","__html","WhatToAdd","auxContent","setAuxContent","select","postId","defaultValue","PostState","postState","savePostState","ImageType","setSelectedPost","isGallery","isSlider","convertSlug","cadena","specialChars","i","replace","RegExp","toLowerCase","DateInput","saveDate","PostCategories","saveCategory","deleteCategory","cat","AddPostScreen","params","useParams","setPostId","slug","slugArray","content","findCurrentPost","newSlug","currentPost","category","categoryCopy","filter","prevState","setToDefault","selectedIndex","checkIfSaved","goBack","handleUpdatePost","deleteThis","element","contentCopy","dangerouslySetInnerHTML","SwiperCore","use","Autoplay","Pagination","Post","setPost","items","setItems","getPost","forEach","thumbnail","getThumbnails","w","h","str","splitStr","split","txt","spaceBetween","autoplay","delay","slidesPerView","picture","thumbnailContent","item","EditPostScreen","slider","video","gallery","getAllSections","sections","section","updateSection","EditGroupSection","React","memo","TextEditorSections","handleQuill","setParsed","font","SectionScreen","dispatchSections","idSection","uniqueImage","features","formInputs","thisSection","parsed","find","sect","input","handleGalleryChange","sectionGroup","sectionUpdated","sectionName","galleryCopy","deletePicture","featCopy","inp","inputCopy","deleteFormInput","AddSection","newSection","sectionType","required","autoComplete","startLogin","password","loggedUser","setItem","startSignup","signedupUser","LoginScreen","handleLogin","SignupScreen","password2","handleSignup","NavBar","SectionCard","AllSections","setSections","fetchSections","st","AppRouter","useReducer","dispatchCompany","Error","Provider","exact","path","component","props","dialogClassName","centered","init","parse","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.48391a34.chunk.js","sourcesContent":["const { createContext } = require('react')\n\nexport const AuthContext = createContext()\n","export const types = {\n\tlogin: '[auth] login',\n\tsignup: '[auth] signup',\n\tlogout: '[auth] logout',\n\thasToken: '[auth] hastoken',\n\n\tgetCompany: '[company] getCompany',\n\taddCompany: '[company] addCompany',\n\tcompanyUpdate: '[company] companyUpdate',\n\tcompanyDelete: '[company] companyDelete',\n\n\tgetPosts: '[post] getPosts',\n\tgetThisPost: '[post] getThisPost',\n\taddPost: '[post] addPost',\n\tpostUpdate: '[post] postUpdate',\n\tpostCategoriesUpdate: '[post] postCategoriesUpdate',\n\n\taddSection: '[Section] addSection',\n\tgetSections: '[Section] getSections',\n\tsectionUpdate: '[Section] sectionUpdate',\n\tdeleteSection: '[Section] deleteSection',\n\tupdateThis: '[Section] updateThis',\n}\n","import { types } from '../../types/types'\n\nexport const AuthReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.login:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.signup:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.hasToken:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.logout:\n\t\t\treturn {\n\t\t\t\tlogged: false,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tif (method === 'GET') {\n\t\treturn fetch(url)\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tconst token = localStorage.getItem('bratic-token') || ''\n\tif (method === 'GET') {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n","const { createContext } = require('react')\n\nexport const CompanyContext = createContext()\n","import { types } from '../types/types'\n\nexport const CompanyReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getCompany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.addCompnany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.companyUpdate:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.deleteProperty:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.maquinasCategoriesUpdate:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaquinasCategories: action.payload,\n\t\t\t}\n\t\tcase types.companyDelete:\n\t\t\treturn {}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const { createContext } = require('react')\n\nexport const SectionContext = createContext()\n","import { types } from '../../types/types'\n\nexport const SectionsReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getSections:\n\t\t\treturn action.payload\n\n\t\tcase types.addSection:\n\t\t\treturn [...state, action.payload]\n\n\t\tcase types.deleteSection:\n\t\t\treturn action.payload\n\n\t\tcase types.updateThis:\n\t\t\treturn { ...action.payload }\n\n\t\tcase types.sectionUpdate:\n\t\t\treturn action.payload\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroup = ({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{ editLabel }: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ editValue } alt={ nameValue } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel }: <strong>{ editValue }</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini danger' onClick={ () => deleteField(nameValue) }>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ editLabel }: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<Modal className='edit-modal my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{ editValue }</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={ submitEdit }>\n\t\t\t\t\t\t<input name={ nameValue } type={ inputType } onChange={ editAction } placeholder={ editValue } />\n\t\t\t\t\t\t<button className='my-btn mini' type='submit' onClick={ handleClose }>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn mini danger' onClick={ handleClose }>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","export const fileUpload = async (file) => {\n\tconst cloudUrl = 'https://api.cloudinary.com/v1_1/bratic-app/upload'\n\tconst formData = new FormData()\n\tformData.append('upload_preset', 'bratic-app')\n\tformData.append('file', file)\n\tformData.append('folder', process.env.REACT_APP_CLOUDINARY_FOLDER)\n\tlet url\n\n\tawait fetch(cloudUrl, { method: 'POST', body: formData })\n\t\t.then((data) => data.json())\n\t\t.then((data) => (url = data.secure_url))\n\t\t.catch((err) => console.log(err))\n\treturn url\n}\n","import { useState } from 'react'\nimport { fileUpload } from '../helpers/uploadFiles'\n\nconst useForm = (initialState = {}) => {\n\tconst [values, setValues] = useState(initialState)\n\tconst [loading, setLoading] = useState(false)\n\n\tconst resetForm = () => {\n\t\tsetValues(initialState)\n\t}\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t}\n\n\tconst handleFileChange = async ({ target }) => {\n\t\tsetLoading(true)\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tawait setValues({\n\t\t\t...values,\n\t\t\t[target.name]: url,\n\t\t})\n\t\tsetLoading(false)\n\t}\n\n\treturn { values, setValues, handleInputChange, handleFileChange, resetForm, loading }\n}\n\nexport default useForm\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../helpers/fetch'\n\nexport const fetchCompany = async () => {\n\tconst resp = await fetchConToken(`companies/`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst companyFetched = body.company\n\t\treturn companyFetched\n\t}\n}\nexport const addCompany = async (company) => {\n\tconst resp = await fetchConToken(`companies/`, company, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst companyCreated = body.company\n\t\treturn companyCreated\n\t}\n}\nexport const updateCompany = async (id, company) => {\n\tconst resp = await fetchConToken(`companies/${id}`, company, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedCompany = body.company\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\n\t\treturn updatedCompany\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deleteCompany = async (id) => {\n\tawait fetchConToken(`companies/${id}`, {}, 'DELETE')\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\n\nconst SectionTitle = ({ title, instructions, image }) => {\n    const { user } = useContext(AuthContext)\n    return (\n        <>\n            <p className=\"dashboard-user\">Conectad@ como <span>{ user.name }</span></p>\n            <div className=\"section-title\">\n                <h1>{ title }</h1>\n                <p>{ instructions }</p>\n                <img src={ image } alt=\"\" />\n            </div>\n        </>\n    )\n}\n\nexport default SectionTitle\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { EditGroup } from './EditGroup'\nimport useForm from './../../hooks/useForm'\nimport { deleteCompany, fetchCompany, updateCompany } from './../../actions/company.action'\nimport Swal from 'sweetalert2'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\nimport { FaTimesCircle } from \"react-icons/fa\";\n\nexport const UpdateCompany = () => {\n\tconst [auxValue, setAuxValue] = useState()\n\tconst { values: myCompany, setValues, handleInputChange, handleFileChange } = useForm()\n\n\t// const [myCompany, setValues] = useState()\n\n\tconst getMyCompany = useCallback(async () => {\n\t\tlet company = await fetchCompany()\n\t\tsetValues(company[0])\n\t}, [setValues])\n\n\tuseEffect(() => {\n\t\tgetMyCompany()\n\t}, [getMyCompany])\n\n\tconst handleDelete = async () => {\n\t\tawait deleteCompany(myCompany?._id)\n\n\t}\n\tconst clearInput = () => {\n\t\tconst theinput = document.getElementById('to-reset-category')\n\t\ttheinput.value = ''\n\t}\n\tconst askIfDelete = () => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, no habrá datos de empresa',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Empresa!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDelete()\n\t\t\t\tSwal.fire('¡Empresa borrada!', 'Esta empresa se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!myCompany?.categories.includes(auxValue)) {\n\t\t\tsetValues(company => ({\n\t\t\t\t...company,\n\t\t\t\tcategories: [...myCompany?.categories, auxValue],\n\t\t\t}))\n\t\t\tclearInput()\n\t\t}\n\t\tclearInput()\n\t}\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst deleteFeature = (idx) => {\n\t\tconst categoriesCopy = [...myCompany?.categories]\n\t\tcategoriesCopy.splice(idx, 1)\n\t\tsetValues(company => ({\n\t\t\t...company,\n\t\t\tcategories: [categoriesCopy],\n\t\t}))\n\t}\n\n\n\tconst deleteField = async (property) => {\n\t\tsetValues(company => ({\n\t\t\t...company,\n\t\t\t[property]: '',\n\t\t}))\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t}\n\n\tconst saveChanges = async () => {\n\t\tawait updateCompany(myCompany._id, myCompany)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695927/web/company_ppk0jk.svg'\n\t\t\t\ttitle=\"Datos de empresa\"\n\t\t\t\tinstructions=\"Aquí puedes editar los datos de tu empresa :)\"\n\t\t\t/>\n\n\t\t\t<button className='my-btn mini' onClick={ saveChanges }>\n\t\t\t\tGuardar Cambios\n\t\t\t</button>\n\t\t\t<button className='my-btn danger mini' onClick={ askIfDelete }>\n\t\t\t\tBorrar esta empresa\n\t\t\t</button>\n\n\t\t\t<div className='editing'>\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'name' } inputType={ 'text' } editLabel={ 'Nombre de empresa' } editAction={ handleInputChange } editValue={ myCompany?.name } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'address' } inputType={ 'text' } editLabel={ 'Dirección' } editAction={ handleInputChange } editValue={ myCompany?.address } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'phone' } inputType={ 'text' } editLabel={ 'Teléfono principal' } editAction={ handleInputChange } editValue={ myCompany?.phone } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'mainEmail' } inputType={ 'email' } editLabel={ 'Email principal' } editAction={ handleInputChange } editValue={ myCompany?.mainEmail } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\tnameValue={ 'mainLogo' }\n\t\t\t\t\timageEdit={ true }\n\t\t\t\t\tinputType={ 'file' }\n\t\t\t\t\teditLabel={ 'Logo Principal' }\n\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\teditValue={ myCompany?.mainLogo }\n\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t/>\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\tnameValue={ 'secondaryLogo' }\n\t\t\t\t\timageEdit={ true }\n\t\t\t\t\tinputType={ 'file' }\n\t\t\t\t\teditLabel={ 'Logo BN' }\n\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\teditValue={ myCompany?.secondaryLogo }\n\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t/>\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'twitter' } inputType={ 'text' } editLabel={ 'Twitter Url' } editAction={ handleInputChange } editValue={ myCompany?.twitter } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'facebook' } inputType={ 'text' } editLabel={ 'Facebook url' } editAction={ handleInputChange } editValue={ myCompany?.facebook } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'instagram' } inputType={ 'text' } editLabel={ 'Instagram Url' } editAction={ handleInputChange } editValue={ myCompany?.instagram } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'linkedin' } inputType={ 'text' } editLabel={ 'Linkedin Url' } editAction={ handleInputChange } editValue={ myCompany?.linkedin } submitEdit={ handleSubmit } />\n\t\t\t\t<div className='edit-group categories'>\n\t\t\t\t\t<p className='maq-cat-title'>Categorías de posts:</p>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ myCompany?.categories?.map((ft, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ ft + idx }>\n\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-category' onChange={ handleFeatureChange } placeholder={ 'Añadir Categoría' } name='features' />\n\t\t\t\t\t\t<button className='my-btn mini third' onClick={ handleAddFeature }>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { addCompany } from './../../actions/company.action'\nimport useForm from '../../hooks/useForm'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst AddCompany = () => {\n\tconst { values, handleInputChange, handleFileChange } = useForm({})\n\n\tconst handleSubmit = async (e) => {\n\t\tawait addCompany(values)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695927/web/company_ppk0jk.svg'\n\t\t\t\ttitle=\"Añadir Empresa\"\n\t\t\t\tinstructions=\"Añade los datos de tu empresa :)\"\n\t\t\t/>\n\t\t\t<form className='add-form' onSubmit={ handleSubmit }>\n\t\t\t\t<input type='text' name='name' placeholder='Nombre de la empresa' onChange={ handleInputChange } />\n\t\t\t\t<input type='email' name='mainEmail' placeholder='Correo Principal' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='phone' placeholder='Teléfono principal' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='address' placeholder='Dirección' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='linkedin' placeholder='URL Linkedin' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='facebook' placeholder='URL Facebook' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='instagram' placeholder='URL Instagram' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='twitter' placeholder='URL Twitter' onChange={ handleInputChange } />\n\t\t\t\t<div className='input-images'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='mainLogo'>Logo principal</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='mainLogo' id='mainLogo' placeholder='Logo Principal' onChange={ handleFileChange } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='secondaryLogo'>Logo en BN</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='secondaryLogo' id='secondaryLogo' placeholder='Logo Secundario' onChange={ handleFileChange } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tCrear empresa\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n","import React, { useEffect, useRef, useContext } from 'react'\nimport { UpdateCompany } from './UpdateCompany'\nimport AddCompany from './AddCompany'\nimport { CompanyContext } from '../../reducers/CompanyContext'\n\nconst CompanyScreen = () => {\n\tconst isMounted = useRef(true)\n\tconst { company } = useContext(CompanyContext)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\treturn <>{ company._id ? <UpdateCompany /> : <AddCompany /> }</>\n}\n\nexport default CompanyScreen\n","import React from 'react'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst DashboardScreen = () => {\n\treturn (\n\t\t<section id=\"dashboard-screen\">\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621696920/web/dashboard2_zwjqif.svg'\n\t\t\t\ttitle=\"Dashboard\"\n\t\t\t\tinstructions=\"Éste es el dashboard de gestión de contenido de tu web :)\"\n\t\t\t/>\n\t\t</section>\n\t)\n}\n\nexport default DashboardScreen\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { types } from '../../../types/types'\nimport { AuthContext } from '../../../reducers/auth/AuthContext';\n\nimport { AiOutlineBank, AiOutlineCloseCircle, AiOutlineComment, AiOutlineLayout, AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const DashboardNav = ({ handleShow }) => {\n\tconst { dispatch, user } = useContext(AuthContext)\n\tconst [currentNav, setCurrentNav] = useState()\n\n\tconst handleLogout = async () => {\n\t\tawait dispatch({ type: types.logout })\n\t\tlocalStorage.removeItem('bratic-token')\n\t\tlocalStorage.removeItem('bratic-user')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<nav className='dash-nav '>\n\n\t\t\t\t<Link to='/bratic' onClick={ () => setCurrentNav('') }>\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t\t</figure>\n\t\t\t\t</Link>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/empresa' onClick={ () => setCurrentNav('empresa') }><AiOutlineBank className={ currentNav === 'empresa' ? 'active' : null } /><span>Empresa</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/blog' onClick={ () => setCurrentNav('blog') }><AiOutlineComment className={ currentNav === 'blog' ? 'active' : null } /><span>Blog</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/seccion' onClick={ () => setCurrentNav('secciones') }><AiOutlineLayout className={ currentNav === 'secciones' ? 'active' : null } /><span>Secciones</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t\t<AiOutlinePlusCircle onClick={ handleShow } />\n\t\t\t\t\t) }\n\t\t\t\t\t<AiOutlineCloseCircle onClick={ handleLogout } />\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getUserPosts = async (user) => {\n\tconst resp = await fetchSinToken(`posts/${user}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst userPosts = body.posts\n\t\treturn userPosts\n\t}\n}\nexport const getThisPost = async (id) => {\n\tconst resp = await fetchSinToken(`posts/post/id/${id}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst thePost = body.post\n\t\treturn thePost\n\t}\n}\nexport const getThisPostBySlug = async (slug) => {\n\tconst resp = await fetchSinToken(`posts/post/${slug}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst thePost = body.post\n\t\treturn thePost\n\t}\n}\n\nexport const addPost = async (post) => {\n\tconst resp = await fetchConToken(`posts/`, post, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst postCreated = body.post\n\t\treturn postCreated\n\t}\n}\n\nexport const updatePost = async (id, post) => {\n\tconst resp = await fetchConToken(`posts/${id}`, post, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedPost = body.post\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\treturn updatedPost\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deletePost = async (id) => {\n\tawait fetchConToken(`posts/${id}`, {}, 'DELETE')\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\ndayjs.locale('es')\n\nconst PostElement = ({ askIfDelete, post }) => {\n\n    return (\n        <>\n            <article className='each-post-prev'>\n                <div className='info'>\n                    <h5>{ post.title }</h5>\n                    { post?.postDate ? <p>Fecha de publicación: <strong>{ dayjs(post?.postDate).format('DD/MM/YYYY') }</strong></p> : <p>Fecha de publicación: <strong>{ dayjs(post?.createdAt).format('DD/MM/YYYY') }</strong></p> }\n                    <p>Fecha de la última edición: <strong>{ dayjs(post?.updatedAt).format('DD/MM/YYYY') }</strong></p>\n                    <p className=\"status\">Estado de la publicación: <strong>{ post.status }</strong></p>\n                </div>\n                <div className='btn-group'>\n                    <button className='my-btn mini third' onClick={ () => askIfDelete(post._id) }>\n                        Borrar Entrada\n\t\t\t\t\t</button>\n                    <Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post._id}` }>\n                        Editar Entrada\n\t\t\t\t\t</Link>\n                    <Link className='my-btn mini ' to={ `/bratic/blog/${post._id}` }>\n                        Ver Muestra\n\t\t\t\t\t</Link>\n                </div>\n            </article>\n        </>\n    )\n}\n\nexport default PostElement\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nimport { addPost, deletePost, getUserPosts } from '../../../actions/posts.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport PostElement from '../../_ui/Posts/PostElement/PostElement';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\n\nconst PostsScreen = () => {\n\tlet history = useHistory();\n\tconst isMounted = useRef(true)\n\tconst [posts, setPosts] = useState()\n\tconst { user } = useContext(AuthContext)\n\n\n\tconst allMyPosts = async () => {\n\t\tconst posts = await getUserPosts(user.id)\n\t\tsetPosts(posts)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tallMyPosts()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst handleAdd = async () => {\n\t\tconst newPost = await addPost({ title: 'Entrada Sin Título', postDate: new Date(), author: user.id })\n\t\thistory.push(`/bratic/blog/nueva-entrada/${newPost._id}`)\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\tawait allMyPosts()\n\t}\n\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\t// Swal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"posts-screen\">\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog_vadvsn.svg'\n\t\t\t\ttitle=\"Entradas del Blog\"\n\t\t\t\tinstructions={ `Estás viendo las entradas del blog que ${user.name} (tú, señor@) ha creado` }\n\t\t\t/>\n\n\t\t\t<button className=\"my-btn primary mini\" onClick={ handleAdd }>Añadir entrada del blog</button>\n\n\t\t\t{posts?.length > 0 ? (\n\t\t\t\t<section className='all-posts'>\n\t\t\t\t\t{posts?.map((elm) => (\n\t\t\t\t\t\t<PostElement askIfDelete={ askIfDelete } post={ elm } key={ elm._id } />\n\t\t\t\t\t)) }\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<article className='empty-posts'>No tienes entradas del blog</article>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default PostsScreen\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addText = async (text, postID) => {\n\tconst resp = await fetchConToken(`texts/${postID}`, text, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst textCreated = body.text\n\t\treturn textCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteText = async (id) => {\n\tconst resp = await fetchConToken(`texts/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Texto borrado', 'success')\n\t}\n}\n\nexport const findTextAndUpdate = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findTextAndUpdateReturn = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addImage = async (image, postID) => {\n\tconst resp = await fetchConToken(`images/${postID}`, image, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst imageCreated = body.image\n\t\treturn imageCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteImage = async (id) => {\n\tconst resp = await fetchConToken(`images/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Imagen Borrada', 'success')\n\t}\n}\n\nexport const findImageAndUpdate = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findImageAndUpdateReturn = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import React from 'react'\n\nconst TitlesArea = ({ selectedPost, saveTitles, handleInputChange }) => {\n    return (\n        <article className=\"title-area\">\n            <form className='form-title' onSubmit={ saveTitles }>\n                <label htmlFor='title'>Título de la Entrada</label>\n                <input id='title' type='text' name='title' onChange={ handleInputChange } placeholder={ selectedPost.title } />\n                <label htmlFor='subtitle'>Subtítulo de la Entrada</label>\n                <input id='subtitle' type='text' name='subtitle' placeholder={ selectedPost.subtitle } onChange={ handleInputChange } />\n                <button className='my-btn mini third' type='submit'> Guardar títulos </button>\n            </form>\n        </article>\n    )\n}\n\nexport default TitlesArea\n","import React from 'react'\n\nconst Loader = ({ loading }) => {\n    return (\n        <section id=\"loading\" className={ loading ? `show` : `hide` }>\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { addImage } from '../../../actions/post-content/image.action'\nimport useForm from '../../../hooks/useForm'\nimport Loader from '../../_ui/Loader/Loader'\n\nconst AddImage = ({ saveElement, postID }) => {\n\tconst { values, handleFileChange, loading } = useForm()\n\tconst saveImage = async () => {\n\t\tconst theImage = await addImage({ image: values.image }, postID)\n\t\tsaveElement('image', theImage)\n\t}\n\n\treturn (\n\t\t<section className=\"add-image\">\n\t\t\t<div className='file-group'>\n\t\t\t\t<input type='file' className='file-input' name='image' id='image' onChange={ handleFileChange } />\n\t\t\t</div>\n\t\t\t{loading ? (\n\t\t\t\t<Loader loading={ true } />\n\t\t\t) : (\n\t\t\t\tvalues?.image && (\n\t\t\t\t\t<div className=\"muestra\">\n\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t<img className='unique-image' src={ values.image } alt='' />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t<button className='my-btn mini third' onClick={ () => saveImage() }> Añadir Imagen a la Entrada</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\t)\n\t\t\t}\n\t\t</section>\n\t)\n}\n\nexport default AddImage\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditor = ({ setQuill }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ color: [] }, { background: [] }],\n\t\t\t\t[{ align: [] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t[{ script: 'sub' }, { script: 'super' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditor.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nTextEditor.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditor\n","import React, { useEffect, useRef, useState } from 'react'\nimport { addText } from '../../../actions/post-content/text.action'\nimport useForm from '../../../hooks/useForm'\nimport TextEditor from '../../_ui/TextEditor/TextEditor'\n\nconst AddText = ({ saveElement, postID }) => {\n\tconst isMounted = useRef(true)\n\tconst [quill, setQuill] = useState()\n\tconst { values, setValues } = useForm()\n\n\tconst saveText = async () => {\n\t\tconst theText = await addText(values, postID)\n\t\tsaveElement('text', theText)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tsetValues({\n\t\t\t\ttext: quill,\n\t\t\t\tparsedText: { __html: quill },\n\t\t\t})\n\t\t}\n\t}, [quill, setValues])\n\n\treturn (\n\t\t<section className=\"add-text\">\n\t\t\t<TextEditor setQuill={ setQuill } />\n\t\t\t<button className='my-btn mini' onClick={ () => saveText() }>\n\t\t\t\tAñadir Texto a la entrada\n\t\t\t</button>\n\t\t</section>\n\t)\n}\n\nexport default AddText\n","import React from 'react'\nimport AddImage from '../../posts/content/AddImage'\nimport AddText from '../../posts/content/AddText'\n\nconst WhatToAdd = ({ auxContent, setAuxContent, select, postId, saveElement }) => {\n\n    const addThis = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setAuxContent('text')\n                break\n            case 'image':\n                setAuxContent('image')\n                break\n            default:\n                setAuxContent('default')\n                break\n        }\n    }\n\n\n    return (\n        <>\n            <label>Tienes que añadir obligatoriamente, por lo menos, una imagen</label>\n            <select ref={ select } onChange={ addThis } name='content' placeholder='Añadir...'>\n                <option value='default' defaultValue> Añadir Elemento a la entrada... </option>\n                <option value='text'>Texto</option>\n                <option value='image'>Imagen</option>\n            </select>\n\n\n            <article className='add-post'>\n                { auxContent === 'text' && <AddText saveElement={ saveElement } postID={ postId } /> }\n                { auxContent === 'image' && <AddImage saveElement={ saveElement } postID={ postId } /> }\n            </article>\n        </>\n    )\n}\n\nexport default WhatToAdd\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../../../../reducers/auth/AuthContext'\n\nconst PostState = ({ postState, savePostState }) => {\n    const { user } = useContext(AuthContext)\n\n\n    const selectThis = ({ target }) => {\n        savePostState(target.value)\n    }\n\n    return (\n        <>\n            <label className=\"post-state-instructions\">Cambia el estado de la publicación para que se vea en la web. Por defecto, se crean en modo \"borrador\"</label>\n            <select onChange={ selectThis }>\n                <option value='default' defaultValue> { postState ? postState : 'Cambiar Estado de la publicación...' } </option>\n                { postState !== 'borrador' && <option value=\"borrador\">Borrador</option> }\n                { postState !== 'publicado' && <option value=\"publicado\">Publicada</option> }\n                { postState !== 'privada' && <option value=\"privada\">Privada</option> }\n                { user.email === 'admin@yai.com' && (\n                    <option value=\"borrada\">Borrada</option>\n                ) }\n            </select>\n        </>\n    )\n}\n\nexport default PostState\n","import React from 'react'\n\nconst ImageType = ({ setSelectedPost }) => {\n    const handleImagesType = ({ target }) => {\n\n        switch (target.value) {\n            case 'galeria':\n                setSelectedPost(selectedPost => ({ ...selectedPost, isGallery: true, isSlider: false }))\n                break;\n            case 'slider':\n                setSelectedPost(selectedPost => ({ ...selectedPost, isGallery: false, isSlider: true }))\n                break;\n            default:\n                setSelectedPost(selectedPost => ({ ...selectedPost, isGallery: false, isSlider: false }))\n                break;\n        }\n\n    }\n\n    return (\n        <>\n            <label>Has añadido más de una imagen, ¿Cómo quieres que aparezcan en la entrada?</label>\n            <select name='images-view' onChange={ handleImagesType } placeholder='Galería/Slider'>\n                <option value='default' defaultValue> Galería/Slider </option>\n                <option value='slider'>Slider</option>\n                <option value='galeria'>Galería</option>\n            </select>\n        </>\n    )\n}\n\nexport default ImageType\n","export const convertSlug = (cadena) => {\n\t// Definimos los caracteres que queremos eliminar\n\tlet specialChars = `!@#$^&%*()+=[]/{}|:<>?¿¡\"'“”,.`\n\t// Los eliminamos todos\n\tfor (let i = 0; i < specialChars.length; i++) {\n\t\tcadena = cadena.replace(new RegExp('\\\\' + specialChars[i], 'gi'), '')\n\t}\n\t// Lo queremos devolver limpio en minusculas\n\tcadena = cadena.toLowerCase()\n\t// Quitamos acentos y \"ñ\". Fijate en que va sin comillas el primer parametro\n\tcadena = cadena.replace(/ /gi, '-')\n\tcadena = cadena.replace(/á/gi, 'a')\n\tcadena = cadena.replace(/é/gi, 'e')\n\tcadena = cadena.replace(/í/gi, 'i')\n\tcadena = cadena.replace(/ó/gi, 'o')\n\tcadena = cadena.replace(/ú/gi, 'u')\n\tcadena = cadena.replace(/ñ/gi, 'n')\n\treturn cadena\n}\n","import React from 'react'\n\nconst DateInput = ({ selectedPost, saveDate, handleInputChange }) => {\n    return (\n        <article className=\"title-area\">\n            <form className='form-title' onSubmit={ saveDate }>\n                <label htmlFor='postDate'>¿Quieres modificar la fecha de publicación? Por defecto saldrá la fecha de creación de la entrada.</label>\n                <input id='postDate' type='date' name='postDate' onChange={ handleInputChange } />\n                <button className='my-btn mini third' type='submit'> Guardar nueva fecha </button>\n            </form>\n        </article>\n    )\n}\n\nexport default DateInput\n","import React, { useContext } from 'react'\nimport { CompanyContext } from '../../../../reducers/CompanyContext'\n\nconst PostCategories = ({ saveCategory, deleteCategory }) => {\n    const { company } = useContext(CompanyContext)\n\n    const addCategory = ({ target }) => {\n        let cat = target.value\n        saveCategory(cat)\n    }\n\n\n    return (\n        <>\n            <label>Categoría/s de la Publicación</label>\n            <select name='category' onChange={ addCategory }>\n                <option value='default' defaultValue> Añadir Categoría... </option>\n                { company?.categories?.length && company?.categories?.map(cat => (\n                    <option key={ cat } value={ cat }>{ cat }</option>\n                )) }\n            </select>\n\n        </>\n    )\n}\n\nexport default PostCategories\n\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useForm from '../../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../../actions/posts.action'\nimport { deleteText } from '../../../actions/post-content/text.action';\nimport { deleteImage } from '../../../actions/post-content/image.action';\nimport TitlesArea from '../../_ui/TitlesArea/TitlesArea';\nimport WhatToAdd from '../../_ui/WhatToAdd/WhatToAdd';\nimport PostState from '../../_ui/Posts/PostState/PostState';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\nimport Swal from 'sweetalert2';\nimport ImageType from '../../_ui/ImageType/ImageType';\nimport { convertSlug } from '../../../helpers/convertSlug';\n\n//Componentes\n\nimport DateInput from '../../_ui/DateInput/DateInput';\nimport PostCategories from '../../_ui/Posts/PostCategories/PostCategories';\nimport { FaTimesCircle } from 'react-icons/fa';\n\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\ndayjs.locale('es')\n\nconst AddPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', slug: '', postDate: '', slugArray: [], subtitle: '', content: { image: [], text: [] } })\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n    }, [params.postID])\n\n    useEffect(() => {\n        let newSlug = convertSlug(selectedPost.title)\n        setSelectedPost(selectedPost => ({ ...selectedPost, slug: newSlug, slugArray: selectedPost.title === 'Entrada Sin Título' ? [...selectedPost.slugArray] : [...selectedPost.slugArray, newSlug] }))\n    }, [selectedPost.title])\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveCategory = (category) => {\n        if (!selectedPost.categories.includes(category)) {\n            setSelectedPost(prevState => ({ ...prevState, categories: [...prevState.categories, category] }))\n        }\n    }\n\n    const deleteCategory = (category) => {\n        const categoryCopy = [...selectedPost.categories].filter(cat => cat !== category)\n        setSelectedPost(prevState => ({ ...prevState, categories: categoryCopy }))\n    }\n\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n    const saveDate = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, postDate: values.postDate })\n    }\n\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const checkIfSaved = () => {\n        Swal.fire({\n            title: '¿Seguro?',\n            text: 'No has guardado, si sales sin guardar, se perderán los cambios',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '¡Si, salir!',\n            cancelButtonText: '¡Uy, no!',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                handleExit()\n            }\n        })\n\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog-single_zvpet3.svg'\n                title=\"Nueva entrada\"\n                instructions=\"Estás añadiendo una entrada nueva al blog :)\"\n            />\n\n            <article className=\"post-btn-group\">\n                <button className=\"my-btn mini\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => checkIfSaved() }>Salir</button>\n                <button className=\"my-btn mini danger\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n            </article>\n\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <DateInput selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveDate={ saveDate } />\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <PostCategories saveCategory={ saveCategory } deleteCategory={ deleteCategory } />\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                    { selectedPost.content.image.length > 1 && <ImageType setSelectedPost={ setSelectedPost } /> }\n                </div>\n\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                            {\n                                selectedPost.postDate ? <p>Publicada el: { dayjs(selectedPost.postDate).format('DD/MM/YYYY') }</p> : <p>Publicada el: { dayjs(selectedPost.createdAt).format('DD/MM/YYYY') }</p>\n                            }\n                            { selectedPost.categories.length > 0 && (\n                                <>\n                                    <p>Categorías de la publicación</p>\n                                    <div className=\"features\">\n                                        {\n                                            selectedPost.categories.map(cat => <div className=\"each-feat\" key={ cat }>{ cat } <FaTimesCircle onClick={ () => deleteCategory(cat) } /> </div>)\n                                        }\n                                    </div>\n                                </>\n                            ) }\n                        </div>\n                    </div>\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('text', text._id) }>Borrar</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('image', image._id) }>Borrar</button>\n                            </div>\n                        ))\n                    }\n                </div>\n\n            </section>\n        </section>\n\n    )\n}\n\nexport default AddPostScreen\n","\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\n\nimport { deletePost, getThisPost } from '../../../actions/posts.action'\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle'\n//Swiper\nimport SwiperCore, { Autoplay, Pagination } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport Swal from 'sweetalert2'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\nimport { PhotoSwipeGallery } from 'react-photoswiper'\nSwiperCore.use([Autoplay, Pagination])\n\ndayjs.locale('es')\nconst Post = () => {\n\tconst isMounted = useRef(true)\n\tconst { postID } = useParams()\n\tlet history = useHistory();\n\n\tconst [post, setPost] = useState()\n\tconst [items, setItems] = useState([])\n\tconst getPost = async () => {\n\t\tconst thePost = await getThisPost(postID)\n\t\tsetPost(thePost)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tgetPost()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\tuseEffect(() => {\n\t\tif (post?.isGallery) {\n\t\t\tpost?.content?.image.forEach((elm) => {\n\t\t\t\tsetItems(items => [...items, {\n\t\t\t\t\tsrc: elm.image,\n\t\t\t\t\tthumbnail: getThumbnails(elm.image),\n\t\t\t\t\tw: 1200,\n\t\t\t\t\th: 900,\n\t\t\t\t}])\n\t\t\t})\n\t\t}\n\t}, [post])\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\tSwal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\thistory.push('/bratic/blog')\n\t}\n\tconst getThumbnails = (str) => {\n\t\tlet splitStr = str.split('upload/')\n\t\tlet newStr = 'upload/w_200/'\n\t\treturn `${splitStr[0]}${newStr}${splitStr[1]}`\n\t}\n\n\tconst getThumbnailContent = (item) => {\n\t\treturn (\n\t\t\t<img src={ item.thumbnail } alt='' />\n\t\t)\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621696886/web/dashboard_jrqf3g.svg'\n\t\t\t\ttitle=\"Muestra de la entrada\"\n\t\t\t\tinstructions=\"Así es como se verá la entrada en la web :)\"\n\t\t\t/>\n\t\t\t<section id=\"post-preview\">\n\t\t\t\t<h1>{ post?.title }</h1>\n\t\t\t\t<div className=\"date-cat\">\n\t\t\t\t\t{ post?.categories.length > 0 && (\n\t\t\t\t\t\t<div className=\"categories\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpost?.categories?.map(cat => (\n\t\t\t\t\t\t\t\t\t<small key={ cat }>{ cat }</small>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t{ post?.categories.length > 0 && <span className=\"separator\"> · </span> }\n\t\t\t\t\t{\n\t\t\t\t\t\tpost?.postDate ? <small>{ dayjs(post?.postDate).format('DD/MM/YYYY') }</small> : <small>{ dayjs(post?.createdAt).format('DD/MM/YYYY') }</small>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{ post?.content?.image.length > 0 && (\n\t\t\t\t\t<figure className=\"main-image\">\n\t\t\t\t\t\t<img key={ post?.content.image[0]._id } src={ post?.content.image[0].image } alt='' />\n\t\t\t\t\t</figure>\n\t\t\t\t) }\n\t\t\t\t{ }\n\t\t\t\t<div className=\"app-container\">\n\t\t\t\t\t{ post?.subtitle && <h2>{ post?.subtitle }</h2> }\n\t\t\t\t\t{ post?.content?.text?.length > 0 && (\n\t\t\t\t\t\tpost?.content?.text?.map((txt, idx) => (\n\t\t\t\t\t\t\t<div className='post-text' key={ txt._id } dangerouslySetInnerHTML={ txt.parsedText }></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t) }\n\t\t\t\t\t{ post?.isSlider && (\n\t\t\t\t\t\t<Swiper\n\t\t\t\t\t\t\tspaceBetween={ 16 }\n\t\t\t\t\t\t\tautoplay={ {\n\t\t\t\t\t\t\t\tdelay: 2500,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tslidesPerView={ 3 }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ post?.content?.image.map((picture, idx) => (\n\t\t\t\t\t\t\t\t<SwiperSlide key={ idx }>\n\t\t\t\t\t\t\t\t\t<img src={ picture.image } alt='' />\n\t\t\t\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</Swiper>\n\t\t\t\t\t) }\n\t\t\t\t\t{\n\t\t\t\t\t\tpost?.isGallery && (\n\t\t\t\t\t\t\titems?.length > 0 && (\n\t\t\t\t\t\t\t\t<PhotoSwipeGallery items={ items } thumbnailContent={ getThumbnailContent } />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post?._id) }>\n\t\t\t\t\t\tBorrar\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post?._id}` }>\n\t\t\t\t\t\tEditar\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='my-btn mini thirsd' to={ `/bratic/blog/` }>\n\t\t\t\t\t\tVolver al blog\n\t\t\t\t\t</Link>\n\n\t\t\t\t</div>\n\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default Post\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport useForm from '../../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../../actions/posts.action'\nimport { deleteText } from '../../../actions/post-content/text.action';\nimport { deleteImage } from '../../../actions/post-content/image.action';\n\n//Componentes\nimport PostState from '../../_ui/Posts/PostState/PostState';\nimport WhatToAdd from '../../_ui/WhatToAdd/WhatToAdd';\nimport TitlesArea from '../../_ui/TitlesArea/TitlesArea';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\nimport Swal from 'sweetalert2';\nimport ImageType from '../../_ui/ImageType/ImageType';\nimport { convertSlug } from '../../../helpers/convertSlug';\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\nimport DateInput from '../../_ui/DateInput/DateInput';\nimport PostCategories from '../../_ui/Posts/PostCategories/PostCategories';\nimport { FaTimesCircle } from 'react-icons/fa';\n\ndayjs.locale('es')\n\n\nconst EditPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', slugArray: [], content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n    //Edit Methods\n\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n\n    }, [params.postID])\n\n    useEffect(() => {\n        let newSlug = convertSlug(selectedPost.title)\n        let newSlugArray = [...selectedPost.slugArray]\n        if (!newSlugArray.includes(newSlug)) {\n\n            setSelectedPost(selectedPost => ({ ...selectedPost, slug: newSlug, slugArray: [...selectedPost.slugArray, newSlug] }))\n        } else {\n            setSelectedPost(selectedPost => ({ ...selectedPost, slug: newSlug }))\n\n        }\n    }, [selectedPost.title, selectedPost.slugArray])\n\n\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n    const saveCategory = (category) => {\n        if (!selectedPost.categories.includes(category)) {\n            setSelectedPost(prevState => ({ ...prevState, categories: [...prevState.categories, category] }))\n        }\n    }\n\n    const deleteCategory = (category) => {\n        const categoryCopy = [...selectedPost.categories].filter(cat => cat !== category)\n        setSelectedPost(prevState => ({ ...prevState, categories: categoryCopy }))\n    }\n\n\n\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n    const saveDate = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, postDate: values.postDate })\n    }\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n    const checkIfSaved = () => {\n        Swal.fire({\n            title: '¿Seguro?',\n            text: 'No has guardado, si sales sin guardar, se perderán los cambios',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '¡Si, salir!',\n            cancelButtonText: '¡Uy, no!',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                handleExit()\n            }\n        })\n\n    }\n\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog-single_zvpet3.svg'\n                title=\"Estás editando esta entrada:\"\n                instructions={ selectedPost.title }\n            />\n\n            <article className=\"post-btn-group\">\n                <button className=\"my-btn mini\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => checkIfSaved() }>Salir</button>\n                <button className=\"my-btn mini danger\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <DateInput selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveDate={ saveDate } />\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <PostCategories saveCategory={ saveCategory } deleteCategory={ deleteCategory } />\n\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                    { selectedPost.content.image.length > 1 && <ImageType setSelectedPost={ setSelectedPost } /> }\n                </div>\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                            {\n                                selectedPost.postDate ? <p>Publicada el: { dayjs(selectedPost.postDate).format('DD/MM/YYYY') }</p> : <p>Publicada el: { dayjs(selectedPost.createdAt).format('DD/MM/YYYY') }</p>\n                            }\n                            { selectedPost?.categories?.length > 0 && (\n                                <>\n                                    <p>Categorías de la publicación</p>\n                                    <div className=\"features\">\n                                        {\n                                            selectedPost?.categories?.map(cat => <div className=\"each-feat\" key={ cat }>{ cat } <FaTimesCircle onClick={ () => deleteCategory(cat) } /> </div>)\n                                        }\n                                    </div>\n                                </>\n                            ) }\n\n                        </div>\n                    </div>\n                    <hr />\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini danger\" onClick={ () => deleteThis('text', text._id) }>Borrar este texto</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini danger\" onClick={ () => deleteThis('image', image._id) }>Borrar esta imagen</button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </section>\n        </section>\n\n    )\n}\n\nexport default EditPostScreen\n","import { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getAllSections = async () => {\n\tconst resp = await fetchSinToken(`sections/`, 'GET')\n\tconst body = await resp.json()\n\treturn body.sections\n}\nexport const addSection = async (section) => {\n\tconst resp = await fetchConToken(`sections/`, section, 'POST')\n\tconst body = await resp.json()\n\treturn body.section\n}\nexport const updateSection = async (section, id) => {\n\tawait fetchConToken(`sections/${id}`, section, 'PUT')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\nexport const deleteSection = async (id) => {\n\tawait fetchConToken(`sections/${id}`, {}, 'DELETE')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroupSection = React.memo(({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{ editLabel }: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ editValue } alt={ nameValue } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel }: <strong>{ editValue }</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini danger' onClick={ () => deleteField(nameValue) }>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ editLabel }: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<Modal className='my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{ editValue }</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={ submitEdit }>\n\t\t\t\t\t\t<input name={ nameValue } type={ inputType } onChange={ editAction } placeholder={ editValue } />\n\t\t\t\t\t\t<button className='my-btn' type='submit' onClick={ handleClose }>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn' onClick={ handleClose }>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditorSections = ({ setQuill, handleQuill, setParsed }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst createHTLM = (text) => {\n\t\treturn { __html: text }\n\t}\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ font: [] }],\n\t\t\t\t[{ 'color': ['#dd4124', '#f38b2e'] }, { 'background': ['#dd4124', '#f38b2e'] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t\tsetParsed(createHTLM(value))\n\t}, [value, setQuill, setParsed])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditorSections.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t\t<form onSubmit={ handleQuill }>\n\t\t\t\t<button type='submit' className='my-btn mini secondary'>\n\t\t\t\t\tGuardar texto\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nTextEditorSections.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditorSections\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport useForm from '../../hooks/useForm'\n\nimport { deleteSection, updateSection } from '../../actions/sections.action'\n\nimport { types } from '../../types/types'\nimport { AuthContext } from '../../reducers/auth/AuthContext'\nimport { SectionContext } from '../../reducers/sections/sectionsContext'\n\nimport { fileUpload } from '../../helpers/uploadFiles'\n\nimport { EditGroupSection } from './EditGroupSection'\n\nimport Swal from 'sweetalert2'\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport TextEditorSections from '../_ui/TextEditor/TextEditorSections'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nexport const SectionScreen = () => {\n\tconst { user } = useContext(AuthContext)\n\tconst { dispatchSections, sections } = useContext(SectionContext)\n\tconst { id } = useParams()\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { title, text, parsedText, subtitle, _id: idSection, uniqueImage, gallery, features, formInputs } = values\n\tconst history = useHistory()\n\tlet thisSection = useRef()\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (sections.length > 0) {\n\t\t\tthisSection.current = sections.find((sect) => sect._id === id)\n\t\t\tsetValues(thisSection.current)\n\t\t}\n\t}, [id, sections, setValues])\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\t//Features\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t}\n\t\tclearInput('to-reset-features')\n\t}\n\n\t//Galeria\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\t//Form inputs\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t}\n\t\tclearInput('to-reset-inputs')\n\t}\n\n\t//Borrar propiedades\n\n\tconst handleDelete = async () => {\n\t\thistory.push('/bratic')\n\t\tconst sectionGroup = await deleteSection(id)\n\t\tdispatchSections({ type: types.deleteSection, payload: sectionGroup })\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t}\n\n\tconst saveChanges = async () => {\n\t\tconst sectionUpdated = await updateSection(values, idSection)\n\t\tif (!sectionUpdated) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.sectionUpdate, payload: sectionUpdated })\n\t\t\thistory.push('/bratic')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-screen'>\n\t\t\t\t<SectionTitle\n\t\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621687077/web/blog-login-image_n0ocyy.svg'\n\t\t\t\t\ttitle=\"Estás editando esta sección\"\n\t\t\t\t\tinstructions={ values?.sectionName }\n\t\t\t\t/>\n\n\t\t\t\t<button className='my-btn mini' onClick={ saveChanges }>\n\t\t\t\t\tGuardar Cambios\n\t\t\t\t</button>\n\n\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t<button className='my-btn mini danger' onClick={ handleDelete }>\n\t\t\t\t\t\tBorrar esta sección\n\t\t\t\t\t</button>\n\t\t\t\t) }\n\n\t\t\t\t{ (title || title === '') && (\n\t\t\t\t\t<EditGroupSection nameValue={ 'title' } deleteField={ deleteField } inputType='text' editLabel={ 'Título' } editAction={ handleInputChange } editValue={ values?.title } submitEdit={ handleSubmit } />\n\t\t\t\t) }\n\t\t\t\t{ subtitle && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\tnameValue={ 'subtitle' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='text'\n\t\t\t\t\t\teditLabel={ 'Subtítulo' }\n\t\t\t\t\t\teditAction={ handleInputChange }\n\t\t\t\t\t\teditValue={ values?.subtitle }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\timageEdit={ true }\n\t\t\t\t\t\tnameValue={ 'uniqueImage' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='file'\n\t\t\t\t\t\teditLabel={ 'Imagen principal' }\n\t\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\t\teditValue={ values?.uniqueImage }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ gallery?.length > 0 && (\n\t\t\t\t\t<div className='edit-gallery'>\n\t\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t{ features?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ formInputs?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ text && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<section className='edit-group text-editor-group'>\n\t\t\t\t\t\t\t<p>Texto:</p>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={ parsedText }></div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</section>\n\t\t</>\n\t)\n}\n","import React, { useContext, useState } from 'react'\nimport { fileUpload } from '../../helpers/uploadFiles'\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport useForm from '../../hooks/useForm'\nimport { addSection } from '../../actions/sections.action'\nimport { SectionContext } from '../../reducers/sections/sectionsContext'\nimport { types } from '../../types/types'\nimport Swal from 'sweetalert2'\nimport TextEditorSections from '../_ui/TextEditor/TextEditorSections';\n\nexport const AddSection = ({ handleClose }) => {\n\tconst { dispatchSections } = useContext(SectionContext)\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { uniqueImage, gallery, features, formInputs } = values\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t}\n\t\tclearInput('to-reset-section-inputs')\n\t}\n\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t}\n\t\tclearInput('to-reset-section-features')\n\t}\n\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tconst newSection = await addSection(values)\n\t\tif (!newSection) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.addSection, payload: newSection })\n\t\t}\n\t\thandleClose()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-form'>\n\t\t\t\t<div className='left-side'>\n\t\t\t\t\t<label>Tipo de sección* { values?.sectionType && <FaCheckCircle /> }</label>\n\t\t\t\t\t<select onChange={ handleInputChange } name='sectionType' required>\n\t\t\t\t\t\t<option value='section' defaultValue>\n\t\t\t\t\t\t\tSección\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value='nav'>Navegador</option>\n\t\t\t\t\t\t<option value='header'>Cabecera</option>\n\t\t\t\t\t\t<option value='footer'>Footer</option>\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<label>Nombre de la sección* { values?.sectionName && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } name='sectionName' autoComplete='off' placeholder='Nombre de la sección' required />\n\n\t\t\t\t\t<label>Título { values?.title && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='title' placeholder='Título' required />\n\n\t\t\t\t\t<label>Subtítulo </label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='subtitle' placeholder='Subtítulo' />\n\n\t\t\t\t\t<label>Imagen principal</label>\n\t\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t\t<figure className='unique-image'>\n\t\t\t\t\t\t\t<img src={ uniqueImage } alt='' />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<input className='file-input' type='file' onChange={ handleFileChange } name='uniqueImage' />\n\t\t\t\t\t<label htmlFor=''>Galería de imágenes</label>\n\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='right-side'>\n\t\t\t\t\t<label>Texto </label>\n\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\n\t\t\t\t\t<label htmlFor=''>Características</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label>Inputs del formulario</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<form className='section-form' onSubmit={ handleSubmit }>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tGuardar Datos\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n","import { fetchSinToken } from '../helpers/fetch'\nimport Swal from 'sweetalert2'\n\nexport const startLogin = async (email, password) => {\n\tconst resp = await fetchSinToken('auth/login', { email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst loggedUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\tlogged: true,\n\t\t\ttoken: body.token,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(loggedUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn loggedUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const startSignup = async (name, email, password) => {\n\tconst resp = await fetchSinToken('auth/signup', { name, email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst signedupUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\ttoken: body.token,\n\t\t\tlogged: true,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(signedupUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn signedupUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\n","import React, { useContext } from 'react'\nimport { startLogin } from '../../../actions/auth.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport useForm from '../../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../../types/types'\n\nconst LoginScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { email, password } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault()\n\t\tconst loggedUser = await startLogin(email, password)\n\n\t\tdispatch({ type: types.login, payload: loggedUser })\n\t}\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={ handleLogin }>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={ handleInputChange } placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Contraseña' name='password' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿No tienes cuenta? Crea una <Link to='/registro'>aquí</Link>{ ' ' }\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useContext } from 'react'\nimport Swal from 'sweetalert2'\nimport { startSignup } from '../../../actions/auth.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport useForm from '../../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../../types/types'\n\nconst SignupScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { name, email, password, password2 } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleSignup = async (e) => {\n\t\te.preventDefault()\n\t\tif (password === password2) {\n\t\t\tconst signedupUser = await startSignup(name, email, password)\n\n\t\t\tdispatch({ type: types.signup, payload: signedupUser })\n\t\t} else {\n\t\t\tSwal.fire('Error', 'Las contraseñas deben coincidir', 'error')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={ handleSignup }>\n\t\t\t\t\t<label>Nombre</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } placeholder='Tu nombre' name='name' />\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={ handleInputChange } placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Contraseña' name='password' />\n\t\t\t\t\t<label>Repite Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Repite Contraseña' name='password2' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tRegistro\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿Ya estás registrado? Entra <Link to='/'>aquí</Link>{ ' ' }\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default SignupScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const NavBar = () => {\n\treturn (\n\t\t<nav className='login-nav'>\n\t\t\t<figure>\n\t\t\t\t<img src={ process.env.REACT_APP_COMPANY_LOGO_BN } alt='' />\n\t\t\t</figure>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/'>Entrar</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/registro'>Registro</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SectionCard = ({ section }) => {\n    return (\n\n        <Link className=\"each-section\" to={ `/bratic/seccion/${section._id}` }>{ section.sectionName }</Link>\n\n    )\n}\n\nexport default SectionCard\n","import React, { useEffect, useState } from 'react'\n\nimport { getAllSections } from '../../actions/sections.action'\nimport SectionCard from '../_ui/SectionCard/SectionCard'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst AllSections = () => {\n    const [sections, setSections] = useState()\n\n    const fetchSections = async () => {\n        const fetchSections = await getAllSections()\n        setSections(fetchSections)\n    }\n    useEffect(() => {\n        fetchSections()\n\n    }, [])\n\n    return (\n        <section className=\"all-sections\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/sections_r2ejno.svg'\n                title=\"Secciones de tu web\"\n                instructions=\"Aquí verás todas las secciones que componen tu web. Pincha en cualquiera para editarla :). Si necesitas añadir una nueva sección, ponte en contacto con el webmaster.\"\n            />\n            {\n                sections?.length > 0 && (\n                    sections.map((st) => (\n                        <SectionCard key={ st._id } section={ st } />\n                    ))\n                )\n            }\n        </section>\n    )\n}\n\nexport default AllSections\n","import React, { useContext, useEffect, useReducer, useRef, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport { Modal } from 'react-bootstrap'\nimport { fetchSinToken } from '../helpers/fetch'\n\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { CompanyContext } from '../reducers/CompanyContext'\nimport { CompanyReducer } from '../reducers/CompanyReducer'\nimport { SectionContext } from '../reducers/sections/sectionsContext'\nimport { SectionsReducer } from '../reducers/sections/SectionsReducer'\nimport { types } from '../types/types'\n\nimport CompanyScreen from '../components/company/CompanyScreen'\nimport DashboardScreen from '../components/DashboardScreen/DashboardScreen'\nimport { DashboardNav } from '../components/_ui/DashboardNav/DashboardNav'\nimport PostsScreen from '../components/posts/PostsScreen/PostsScreen'\nimport AddPostScreen from '../components/posts/AddPosts/AddPostScreen'\nimport Post from '../components/posts/Post/Post'\nimport EditPostScreen from '../components/posts/EditPosts/EditPostScreen'\nimport { SectionScreen } from '../components/sections/SectionScreen'\nimport { AddSection } from '../components/sections/AddSection'\nimport LoginScreen from '../components/auth/LoginScreen/LoginScreen'\nimport SignupScreen from '../components/auth/SignupScreen/SignupScreen'\nimport { NavBar } from '../components/_ui/NavBar/NavBar'\nimport AllSections from '../components/sections/AllSections'\n\nconst AppRouter = () => {\n\tconst isMounted = useRef(true)\n\tconst { user } = useContext(AuthContext)\n\tconst [company, dispatchCompany] = useReducer(CompanyReducer, {})\n\tconst [sections, dispatchSections] = useReducer(SectionsReducer, {})\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tfetchSinToken(`sections`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchSections({ type: types.getSections, payload: data.sections }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t\tfetchSinToken(`companies`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchCompany({ type: types.getCompany, payload: data.company[0] }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t}\n\t}, [])\n\n\tconst [show, setShow] = useState(false)\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t{ user.token ? (\n\t\t\t\t\t<CompanyContext.Provider value={ { company, dispatchCompany } }>\n\t\t\t\t\t\t<SectionContext.Provider value={ { sections, dispatchSections } }>\n\n\t\t\t\t\t\t\t<div className='dashboard-container'>\n\t\t\t\t\t\t\t\t<DashboardNav handleShow={ handleShow } />\n\n\t\t\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic' component={ DashboardScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/empresa' component={ CompanyScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog' component={ PostsScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/nueva-entrada/:postID' component={ AddPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/:postID' component={ Post } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/editar-entrada/:postID' component={ EditPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/seccion' component={ AllSections } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/seccion/:id' component={ (props) => <SectionScreen { ...props } /> } />\n\t\t\t\t\t\t\t\t\t\t<Redirect to='/bratic' />\n\t\t\t\t\t\t\t\t\t</Switch>\n\n\t\t\t\t\t\t\t\t\t<Modal dialogClassName='modal-width' centered className='my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t\t\t\t<h4>Añadir Sección a la web</h4>\n\t\t\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t<AddSection handleClose={ handleClose } />\n\t\t\t\t\t\t\t\t\t\t</Modal.Body>\n\n\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t\t\tcerrar\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</SectionContext.Provider>\n\t\t\t\t\t</CompanyContext.Provider>\n\t\t\t\t) : (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t<main className='login-container'>\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ process.env.REACT_APP_LOGIN_IMAGE } alt=\"\" />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={ LoginScreen } />\n\t\t\t\t\t\t\t\t<Route path='/registro' component={ SignupScreen } />\n\t\t\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t<div className=\"copyright\">\n\t\t\t\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</section>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import { useEffect, useReducer, useRef } from 'react'\nimport { AuthContext } from './reducers/auth/AuthContext'\nimport { AuthReducer } from './reducers/auth/authReducer'\n// Import Swiper styles\nimport 'swiper/swiper.scss'\nimport 'swiper/components/pagination/pagination.scss'\n//Photoswipe\nimport 'react-photoswiper/lib/photoswipe.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss'\n\nimport AppRouter from './routers/AppRouter'\n\nconst init = () => {\n\treturn JSON.parse(localStorage.getItem('bratic-user')) || { logged: false }\n}\n\n\nconst App = () => {\n\tconst isMounted = useRef(true)\n\tconst [user, dispatch] = useReducer(AuthReducer, {}, init)\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tlocalStorage.setItem('bratic-user', JSON.stringify(user))\n\t\t}\n\t}, [user])\n\n\n\treturn (\n\t\t<>\n\t\t\t<AuthContext.Provider value={ { user, dispatch } }>\n\t\t\t\t<AppRouter />\n\t\t\t</AuthContext.Provider>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}