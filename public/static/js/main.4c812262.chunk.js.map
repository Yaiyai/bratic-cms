{"version":3,"sources":["reducers/auth/AuthContext.js","types/types.js","reducers/auth/authReducer.js","helpers/fetch.js","reducers/CompanyContext.js","reducers/CompanyReducer.js","reducers/sections/sectionsContext.js","reducers/sections/SectionsReducer.js","components/company/EditGroup.jsx","helpers/uploadFiles.js","hooks/useForm.js","actions/company.action.js","components/_ui/SectionTitle/SectionTitle.jsx","components/company/UpdateCompany.jsx","components/company/AddCompany.jsx","components/company/CompanyScreen.jsx","components/DashboardScreen/DashboardScreen.jsx","components/_ui/DashboardNav/DashboardNav.jsx","actions/posts.action.js","components/_ui/Posts/PostElement/PostElement.jsx","components/posts/PostsScreen/PostsScreen.jsx","actions/post-content/text.action.js","actions/post-content/image.action.js","components/_ui/TitlesArea/TitlesArea.jsx","components/_ui/Loader/Loader.jsx","components/posts/content/AddImage.jsx","components/_ui/TextEditor/TextEditor.jsx","components/posts/content/AddText.jsx","components/_ui/WhatToAdd/WhatToAdd.jsx","components/_ui/Posts/PostState/PostState.jsx","components/posts/AddPosts/AddPostScreen.jsx","components/posts/Post/Post.jsx","components/posts/EditPosts/EditPostScreen.jsx","actions/sections.action.js","components/sections/EditGroupSection.jsx","components/_ui/TextEditor/TextEditorSections.jsx","components/sections/SectionScreen.jsx","components/sections/AddSection.jsx","actions/auth.action.js","components/auth/LoginScreen/LoginScreen.jsx","components/auth/SignupScreen/SignupScreen.jsx","components/_ui/NavBar/NavBar.jsx","components/_ui/SectionCard/SectionCard.jsx","components/sections/AllSections.jsx","routers/AppRouter.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","require","types","login","signup","logout","hasToken","getCompany","addCompany","companyUpdate","companyDelete","getPosts","getThisPost","addPost","postUpdate","addSection","getSections","sectionUpdate","deleteSection","updateThis","AuthReducer","state","action","type","payload","logged","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","CompanyContext","CompanyReducer","addCompnany","deleteProperty","maquinasCategoriesUpdate","maquinasCategories","SectionContext","SectionsReducer","EditGroup","nameValue","deleteField","inputType","editLabel","editAction","editValue","submitEdit","imageEdit","useState","show","setShow","handleClose","handleShow","className","src","alt","onClick","Modal","onHide","Header","Title","Body","onSubmit","name","onChange","placeholder","Footer","fileUpload","file","a","formData","FormData","append","then","json","secure_url","catch","err","console","log","useForm","initialState","values","setValues","loading","setLoading","resetForm","handleInputChange","target","value","handleFileChange","files","company","resp","ok","companyCreated","updateCompany","id","updatedCompany","Swal","fire","errorMsg","error","deleteCompany","SectionTitle","title","instructions","image","user","useContext","UpdateCompany","dispatchCompany","phone","address","_id","mainEmail","mainLogo","secondaryLogo","linkedin","facebook","twitter","instagram","handleDelete","property","handleSubmit","e","preventDefault","saveChanges","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","AddCompany","htmlFor","CompanyScreen","isMounted","useRef","useEffect","current","DashboardScreen","DashboardNav","dispatch","currentNav","setCurrentNav","handleLogout","removeItem","to","email","getUserPosts","userPosts","posts","thePost","post","postCreated","updatePost","updatedPost","deletePost","PostElement","askIfDelete","date","setDate","updateDate","setUpdateDate","Date","createdAt","toLocaleString","updatedAt","status","PostsScreen","history","useHistory","setPosts","allMyPosts","handleAdd","author","newPost","push","handleDeletePost","length","map","elm","addText","postID","textCreated","msg","deleteText","addImage","imageCreated","deleteImage","TitlesArea","selectedPost","saveTitles","subtitle","Loader","AddImage","saveElement","saveImage","theImage","TextEditor","setQuill","setValue","quillRef","ref","modules","toolbar","container","header","color","background","align","list","indent","script","clipboard","matchVisual","formats","theme","AddText","quill","saveText","theText","parsedText","__html","WhatToAdd","auxContent","setAuxContent","select","postId","defaultValue","PostState","postState","savePostState","AddPostScreen","params","useParams","setPostId","content","slider","video","gallery","setSelectedPost","findCurrentPost","currentPost","setToDefault","selectedIndex","checkIfSaved","goBack","handleUpdatePost","deleteThis","prevState","filter","element","contentCopy","dangerouslySetInnerHTML","dayjs","locale","Post","setPost","getPost","format","txt","idx","EditPostScreen","getAllSections","sections","section","updateSection","EditGroupSection","React","memo","TextEditorSections","handleQuill","setParsed","font","SectionScreen","dispatchSections","idSection","uniqueImage","features","formInputs","thisSection","auxValue","setAuxValue","parsed","find","sect","clearInput","input","document","getElementById","handleGalleryChange","sectionGroup","sectionUpdated","sectionName","picture","galleryCopy","splice","deletePicture","includes","ft","featCopy","deleteFeature","inp","inputCopy","deleteFormInput","AddSection","newSection","sectionType","required","autoComplete","startLogin","password","loggedUser","setItem","startSignup","signedupUser","LoginScreen","handleLogin","SignupScreen","password2","handleSignup","NavBar","SectionCard","AllSections","setSections","fetchSections","st","AppRouter","useReducer","Error","Provider","exact","path","component","props","dialogClassName","centered","init","parse","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c812262.chunk.js","sourcesContent":["const { createContext } = require('react')\n\nexport const AuthContext = createContext()\n","export const types = {\n\tlogin: '[auth] login',\n\tsignup: '[auth] signup',\n\tlogout: '[auth] logout',\n\thasToken: '[auth] hastoken',\n\n\tgetCompany: '[company] getCompany',\n\taddCompany: '[company] addCompany',\n\tcompanyUpdate: '[company] companyUpdate',\n\tcompanyDelete: '[company] companyDelete',\n\n\tgetPosts: '[post] getPosts',\n\tgetThisPost: '[post] getThisPost',\n\taddPost: '[post] addPost',\n\tpostUpdate: '[post] postUpdate',\n\n\taddSection: '[Section] addSection',\n\tgetSections: '[Section] getSections',\n\tsectionUpdate: '[Section] sectionUpdate',\n\tdeleteSection: '[Section] deleteSection',\n\tupdateThis: '[Section] updateThis',\n}\n","import { types } from '../../types/types'\n\nexport const AuthReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.login:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.signup:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.hasToken:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.logout:\n\t\t\treturn {\n\t\t\t\tlogged: false,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tif (method === 'GET') {\n\t\treturn fetch(url)\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tconst token = localStorage.getItem('bratic-token') || ''\n\tif (method === 'GET') {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n","const { createContext } = require('react')\n\nexport const CompanyContext = createContext()\n","import { types } from '../types/types'\n\nexport const CompanyReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getCompany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.addCompnany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.companyUpdate:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.deleteProperty:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.maquinasCategoriesUpdate:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaquinasCategories: action.payload,\n\t\t\t}\n\t\tcase types.companyDelete:\n\t\t\treturn {}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const { createContext } = require('react')\n\nexport const SectionContext = createContext()\n","import { types } from '../../types/types'\n\nexport const SectionsReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getSections:\n\t\t\treturn action.payload\n\n\t\tcase types.addSection:\n\t\t\treturn [...state, action.payload]\n\n\t\tcase types.deleteSection:\n\t\t\treturn action.payload\n\n\t\tcase types.updateThis:\n\t\t\treturn { ...action.payload }\n\n\t\tcase types.sectionUpdate:\n\t\t\treturn action.payload\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroup = ({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{ editLabel }: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ editValue } alt={ nameValue } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel }: <strong>{ editValue }</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini danger' onClick={ () => deleteField(nameValue) }>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ editLabel }: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<Modal className='edit-modal my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{ editValue }</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={ submitEdit }>\n\t\t\t\t\t\t<input name={ nameValue } type={ inputType } onChange={ editAction } placeholder={ editValue } />\n\t\t\t\t\t\t<button className='my-btn mini' type='submit' onClick={ handleClose }>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn mini danger' onClick={ handleClose }>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","export const fileUpload = async (file) => {\n\tconst cloudUrl = 'https://api.cloudinary.com/v1_1/bratic-app/upload'\n\tconst formData = new FormData()\n\tformData.append('upload_preset', 'bratic-app')\n\tformData.append('file', file)\n\tformData.append('folder', process.env.REACT_APP_CLOUDINARY_FOLDER)\n\tlet url\n\n\tawait fetch(cloudUrl, { method: 'POST', body: formData })\n\t\t.then((data) => data.json())\n\t\t.then((data) => (url = data.secure_url))\n\t\t.catch((err) => console.log(err))\n\treturn url\n}\n","import { useState } from 'react'\nimport { fileUpload } from '../helpers/uploadFiles'\n\nconst useForm = (initialState = {}) => {\n\tconst [values, setValues] = useState(initialState)\n\tconst [loading, setLoading] = useState(false)\n\n\tconst resetForm = () => {\n\t\tsetValues(initialState)\n\t}\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t}\n\n\tconst handleFileChange = async ({ target }) => {\n\t\tsetLoading(true)\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tawait setValues({\n\t\t\t...values,\n\t\t\t[target.name]: url,\n\t\t})\n\t\tsetLoading(false)\n\t}\n\n\treturn { values, setValues, handleInputChange, handleFileChange, resetForm, loading }\n}\n\nexport default useForm\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../helpers/fetch'\n\nexport const addCompany = async (company) => {\n\tconst resp = await fetchConToken(`companies/`, company, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst companyCreated = body.company\n\t\treturn companyCreated\n\t}\n}\nexport const updateCompany = async (id, company) => {\n\tconst resp = await fetchConToken(`companies/${id}`, company, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedCompany = body.company\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\n\t\treturn updatedCompany\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deleteCompany = async (id) => {\n\tawait fetchConToken(`companies/${id}`, {}, 'DELETE')\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\n\nconst SectionTitle = ({ title, instructions, image }) => {\n    const { user } = useContext(AuthContext)\n    return (\n        <>\n            <p className=\"dashboard-user\">Conectad@ como <span>{ user.name }</span></p>\n            <div className=\"section-title\">\n                <h1>{ title }</h1>\n                <p>{ instructions }</p>\n                <img src={ image } alt=\"\" />\n            </div>\n        </>\n    )\n}\n\nexport default SectionTitle\n","import React, { useContext } from 'react'\nimport { EditGroup } from './EditGroup'\nimport useForm from './../../hooks/useForm'\nimport { deleteCompany, updateCompany } from './../../actions/company.action'\nimport { types } from '../../types/types'\nimport { CompanyContext } from '../../reducers/CompanyContext'\nimport Swal from 'sweetalert2'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nexport const UpdateCompany = () => {\n\tconst { company, dispatchCompany } = useContext(CompanyContext)\n\n\tconst { name, phone, address, _id: id, mainEmail, mainLogo, secondaryLogo, linkedin, facebook, twitter, instagram } = company\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm(company)\n\n\tconst handleDelete = async () => {\n\t\tawait deleteCompany(id)\n\t\tdispatchCompany({ type: types.companyDelete })\n\t}\n\tconst askIfDelete = () => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, no habrá datos de empresa',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Empresa!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDelete()\n\t\t\t\tSwal.fire('¡Empresa borrada!', 'Esta empresa se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tconst payload = {\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t}\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t\tdispatchCompany({ type: types.updateCompany, payload })\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tdispatchCompany({ type: types.updateCompany, payload: values })\n\t}\n\n\tconst saveChanges = async () => {\n\t\tawait updateCompany(id, company)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695927/web/company_ppk0jk.svg'\n\t\t\t\ttitle=\"Datos de empresa\"\n\t\t\t\tinstructions=\"Aquí puedes editar los datos de tu empresa :)\"\n\t\t\t/>\n\n\t\t\t<button className='my-btn mini' onClick={ saveChanges }>\n\t\t\t\tGuardar Cambios\n\t\t\t</button>\n\t\t\t<button className='my-btn danger mini' onClick={ askIfDelete }>\n\t\t\t\tBorrar esta empresa\n\t\t\t</button>\n\n\t\t\t<div className='editing'>\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'name' } inputType={ 'text' } editLabel={ 'Nombre de empresa' } editAction={ handleInputChange } editValue={ name } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'address' } inputType={ 'text' } editLabel={ 'Dirección' } editAction={ handleInputChange } editValue={ address } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'phone' } inputType={ 'text' } editLabel={ 'Teléfono principal' } editAction={ handleInputChange } editValue={ phone } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'mainEmail' } inputType={ 'email' } editLabel={ 'Email principal' } editAction={ handleInputChange } editValue={ mainEmail } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\tnameValue={ 'mainLogo' }\n\t\t\t\t\timageEdit={ true }\n\t\t\t\t\tinputType={ 'file' }\n\t\t\t\t\teditLabel={ 'Logo Principal' }\n\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\teditValue={ mainLogo }\n\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t/>\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\tnameValue={ 'secondaryLogo' }\n\t\t\t\t\timageEdit={ true }\n\t\t\t\t\tinputType={ 'file' }\n\t\t\t\t\teditLabel={ 'Logo BN' }\n\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\teditValue={ secondaryLogo }\n\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t/>\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'twitter' } inputType={ 'text' } editLabel={ 'Twitter Url' } editAction={ handleInputChange } editValue={ twitter } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'facebook' } inputType={ 'text' } editLabel={ 'Facebook url' } editAction={ handleInputChange } editValue={ facebook } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'instagram' } inputType={ 'text' } editLabel={ 'Instagram Url' } editAction={ handleInputChange } editValue={ instagram } submitEdit={ handleSubmit } />\n\t\t\t\t<EditGroup deleteField={ deleteField } nameValue={ 'linkedin' } inputType={ 'text' } editLabel={ 'Linkedin Url' } editAction={ handleInputChange } editValue={ linkedin } submitEdit={ handleSubmit } />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { addCompany } from './../../actions/company.action'\nimport useForm from '../../hooks/useForm'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst AddCompany = () => {\n\tconst { values, handleInputChange, handleFileChange } = useForm({})\n\n\tconst handleSubmit = async (e) => {\n\t\tawait addCompany(values)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695927/web/company_ppk0jk.svg'\n\t\t\t\ttitle=\"Añadir Empresa\"\n\t\t\t\tinstructions=\"Añade los datos de tu empresa :)\"\n\t\t\t/>\n\t\t\t<form className='add-form' onSubmit={ handleSubmit }>\n\t\t\t\t<input type='text' name='name' placeholder='Nombre de la empresa' onChange={ handleInputChange } />\n\t\t\t\t<input type='email' name='mainEmail' placeholder='Correo Principal' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='phone' placeholder='Teléfono principal' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='address' placeholder='Dirección' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='linkedin' placeholder='URL Linkedin' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='facebook' placeholder='URL Facebook' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='instagram' placeholder='URL Instagram' onChange={ handleInputChange } />\n\t\t\t\t<input type='text' name='twitter' placeholder='URL Twitter' onChange={ handleInputChange } />\n\t\t\t\t<div className='input-images'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='mainLogo'>Logo principal</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='mainLogo' id='mainLogo' placeholder='Logo Principal' onChange={ handleFileChange } />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='secondaryLogo'>Logo en BN</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='secondaryLogo' id='secondaryLogo' placeholder='Logo Secundario' onChange={ handleFileChange } />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tCrear empresa\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n","import React, { useEffect, useRef, useContext } from 'react'\nimport { UpdateCompany } from './UpdateCompany'\nimport AddCompany from './AddCompany'\nimport { CompanyContext } from '../../reducers/CompanyContext'\n\nconst CompanyScreen = () => {\n\tconst isMounted = useRef(true)\n\tconst { company } = useContext(CompanyContext)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\treturn <>{ company._id ? <UpdateCompany /> : <AddCompany /> }</>\n}\n\nexport default CompanyScreen\n","import React from 'react'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst DashboardScreen = () => {\n\treturn (\n\t\t<section id=\"dashboard-screen\">\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621696920/web/dashboard2_zwjqif.svg'\n\t\t\t\ttitle=\"Dashboard\"\n\t\t\t\tinstructions=\"Éste es el dashboard de gestión de contenido de tu web :)\"\n\t\t\t/>\n\t\t</section>\n\t)\n}\n\nexport default DashboardScreen\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { types } from '../../../types/types'\nimport { AuthContext } from '../../../reducers/auth/AuthContext';\n\nimport { AiOutlineBank, AiOutlineCloseCircle, AiOutlineComment, AiOutlineLayout, AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const DashboardNav = ({ handleShow }) => {\n\tconst { dispatch, user } = useContext(AuthContext)\n\tconst [currentNav, setCurrentNav] = useState()\n\n\tconst handleLogout = async () => {\n\t\tawait dispatch({ type: types.logout })\n\t\tlocalStorage.removeItem('bratic-token')\n\t\tlocalStorage.removeItem('bratic-user')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<nav className='dash-nav '>\n\n\t\t\t\t<Link to='/bratic' onClick={ () => setCurrentNav('') }>\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t\t</figure>\n\t\t\t\t</Link>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/empresa' onClick={ () => setCurrentNav('empresa') }><AiOutlineBank className={ currentNav === 'empresa' ? 'active' : null } /><span>Empresa</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/blog' onClick={ () => setCurrentNav('blog') }><AiOutlineComment className={ currentNav === 'blog' ? 'active' : null } /><span>Blog</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/seccion' onClick={ () => setCurrentNav('secciones') }><AiOutlineLayout className={ currentNav === 'secciones' ? 'active' : null } /><span>Secciones</span></Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t\t<AiOutlinePlusCircle onClick={ handleShow } />\n\t\t\t\t\t) }\n\t\t\t\t\t<AiOutlineCloseCircle onClick={ handleLogout } />\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getUserPosts = async (user) => {\n\tconst resp = await fetchSinToken(`posts/${user}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst userPosts = body.posts\n\t\treturn userPosts\n\t}\n}\nexport const getThisPost = async (id) => {\n\tconst resp = await fetchSinToken(`posts/post/${id}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst thePost = body.post\n\t\treturn thePost\n\t}\n}\n\nexport const addPost = async (post) => {\n\tconst resp = await fetchConToken(`posts/`, post, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst postCreated = body.post\n\t\treturn postCreated\n\t}\n}\n\nexport const updatePost = async (id, post) => {\n\tconst resp = await fetchConToken(`posts/${id}`, post, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedPost = body.post\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\treturn updatedPost\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deletePost = async (id) => {\n\tawait fetchConToken(`posts/${id}`, {}, 'DELETE')\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst PostElement = ({ askIfDelete, post }) => {\n    const [date, setDate] = useState()\n    const [updateDate, setUpdateDate] = useState()\n\n    useEffect(() => {\n        setDate(new Date(post.createdAt).toLocaleString())\n        setUpdateDate(new Date(post.updatedAt).toLocaleString())\n    }, [date, setDate, post])\n\n    return (\n        <>\n            <article className='each-post-prev'>\n                <div className='info'>\n                    <h5>{ post.title }</h5>\n                    { date && <p>Fecha de la publicación: <strong>{ date }</strong></p> }\n                    { updateDate && <p>Fecha de la última edición: <strong>{ updateDate }</strong></p> }\n                    <p className=\"status\">Estado de la publicación: <strong>{ post.status }</strong></p>\n                </div>\n                <div className='btn-group'>\n                    <button className='my-btn mini third' onClick={ () => askIfDelete(post._id) }>\n                        Borrar Entrada\n\t\t\t\t\t</button>\n                    <Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post._id}` }>\n                        Editar Entrada\n\t\t\t\t\t</Link>\n                    <Link className='my-btn mini ' to={ `/bratic/blog/${post._id}` }>\n                        Ver Muestra\n\t\t\t\t\t</Link>\n                </div>\n            </article>\n        </>\n    )\n}\n\nexport default PostElement\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nimport { addPost, deletePost, getUserPosts } from '../../../actions/posts.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport PostElement from '../../_ui/Posts/PostElement/PostElement';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\n\nconst PostsScreen = () => {\n\tlet history = useHistory();\n\tconst isMounted = useRef(true)\n\tconst [posts, setPosts] = useState()\n\tconst { user } = useContext(AuthContext)\n\n\n\tconst allMyPosts = async () => {\n\t\tconst posts = await getUserPosts(user.id)\n\t\tsetPosts(posts)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tallMyPosts()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst handleAdd = async () => {\n\t\tconst newPost = await addPost({ title: 'Entrada Sin Título', author: user.id })\n\t\thistory.push(`/bratic/blog/nueva-entrada/${newPost._id}`)\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\tawait allMyPosts()\n\t}\n\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\t// Swal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"posts-screen\">\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog_vadvsn.svg'\n\t\t\t\ttitle=\"Entradas del Blog\"\n\t\t\t\tinstructions={ `Estás viendo las entradas del blog que ${user.name} (tú, señor@) ha creado` }\n\t\t\t/>\n\n\t\t\t<button className=\"my-btn primary mini\" onClick={ handleAdd }>Añadir entrada del blog</button>\n\n\t\t\t{posts?.length > 0 ? (\n\t\t\t\t<section className='all-posts'>\n\t\t\t\t\t{posts?.map((elm) => (\n\t\t\t\t\t\t<PostElement askIfDelete={ askIfDelete } post={ elm } key={ elm._id } />\n\t\t\t\t\t)) }\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<article className='empty-posts'>No tienes entradas del blog</article>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default PostsScreen\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addText = async (text, postID) => {\n\tconst resp = await fetchConToken(`texts/${postID}`, text, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst textCreated = body.text\n\t\treturn textCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteText = async (id) => {\n\tconst resp = await fetchConToken(`texts/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Texto borrado', 'success')\n\t}\n}\n\nexport const findTextAndUpdate = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findTextAndUpdateReturn = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addImage = async (image, postID) => {\n\tconst resp = await fetchConToken(`images/${postID}`, image, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst imageCreated = body.image\n\t\treturn imageCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteImage = async (id) => {\n\tconst resp = await fetchConToken(`images/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Imagen Borrada', 'success')\n\t}\n}\n\nexport const findImageAndUpdate = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findImageAndUpdateReturn = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import React from 'react'\n\nconst TitlesArea = ({ selectedPost, saveTitles, handleInputChange }) => {\n    return (\n        <article className=\"title-area\">\n            <form className='form-title' onSubmit={ saveTitles }>\n                <label htmlFor='title'>Título de la Entrada</label>\n                <input id='title' type='text' name='title' onChange={ handleInputChange } placeholder={ selectedPost.title } />\n                <label htmlFor='subtitle'>Subtítulo de la Entrada</label>\n                <input id='subtitle' type='text' name='subtitle' placeholder={ selectedPost.subtitle } onChange={ handleInputChange } />\n                <button className='my-btn mini third' type='submit'> Guardar títulos </button>\n            </form>\n        </article>\n    )\n}\n\nexport default TitlesArea\n","import React from 'react'\n\nconst Loader = ({ loading }) => {\n    return (\n        <section id=\"loading\" className={ loading ? `show` : `hide` }>\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { addImage } from '../../../actions/post-content/image.action'\nimport useForm from '../../../hooks/useForm'\nimport Loader from '../../_ui/Loader/Loader'\n\nconst AddImage = ({ saveElement, postID }) => {\n\tconst { values, handleFileChange, loading } = useForm()\n\tconst saveImage = async () => {\n\t\tconst theImage = await addImage({ image: values.image }, postID)\n\t\tsaveElement('image', theImage)\n\t}\n\n\treturn (\n\t\t<section className=\"add-image\">\n\t\t\t<div className='file-group'>\n\t\t\t\t<input type='file' className='file-input' name='image' id='image' onChange={ handleFileChange } />\n\t\t\t</div>\n\t\t\t{loading ? (\n\t\t\t\t<Loader loading={ true } />\n\t\t\t) : (\n\t\t\t\tvalues?.image && (\n\t\t\t\t\t<div className=\"muestra\">\n\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t<img className='unique-image' src={ values.image } alt='' />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t<button className='my-btn mini third' onClick={ () => saveImage() }> Añadir Imagen a la Entrada</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t\t)\n\t\t\t}\n\t\t</section>\n\t)\n}\n\nexport default AddImage\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditor = ({ setQuill }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ color: [] }, { background: [] }],\n\t\t\t\t[{ align: [] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t[{ script: 'sub' }, { script: 'super' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditor.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nTextEditor.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditor\n","import React, { useEffect, useRef, useState } from 'react'\nimport { addText } from '../../../actions/post-content/text.action'\nimport useForm from '../../../hooks/useForm'\nimport TextEditor from '../../_ui/TextEditor/TextEditor'\n\nconst AddText = ({ saveElement, postID }) => {\n\tconst isMounted = useRef(true)\n\tconst [quill, setQuill] = useState()\n\tconst { values, setValues } = useForm()\n\n\tconst saveText = async () => {\n\t\tconst theText = await addText(values, postID)\n\t\tsaveElement('text', theText)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tsetValues({\n\t\t\t\ttext: quill,\n\t\t\t\tparsedText: { __html: quill },\n\t\t\t})\n\t\t}\n\t}, [quill, setValues])\n\n\treturn (\n\t\t<section className=\"add-text\">\n\t\t\t<TextEditor setQuill={ setQuill } />\n\t\t\t<button className='my-btn mini' onClick={ () => saveText() }>\n\t\t\t\tAñadir Texto a la entrada\n\t\t\t</button>\n\t\t</section>\n\t)\n}\n\nexport default AddText\n","import React from 'react'\nimport AddImage from '../../posts/content/AddImage'\nimport AddText from '../../posts/content/AddText'\n\nconst WhatToAdd = ({ auxContent, setAuxContent, select, postId, saveElement }) => {\n\n    const addThis = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setAuxContent('text')\n                break\n            case 'image':\n                setAuxContent('image')\n                break\n            default:\n                setAuxContent('default')\n                break\n        }\n    }\n\n\n    return (\n        <>\n            <label>Tienes que añadir obligatoriamente, por lo menos, una imagen</label>\n            <select ref={ select } onChange={ addThis } name='content' placeholder='Añadir...'>\n                <option value='default' defaultValue> Añadir Elemento a la entrada... </option>\n                <option value='text'>Texto</option>\n                <option value='image'>Imagen</option>\n            </select>\n\n\n            <article className='add-post'>\n                { auxContent === 'text' && <AddText saveElement={ saveElement } postID={ postId } /> }\n                { auxContent === 'image' && <AddImage saveElement={ saveElement } postID={ postId } /> }\n            </article>\n        </>\n    )\n}\n\nexport default WhatToAdd\n","import React from 'react'\n\nconst PostState = ({ postState, savePostState }) => {\n\n\n    const selectThis = ({ target }) => {\n        savePostState(target.value)\n    }\n\n    return (\n        <>\n            <label className=\"post-state-instructions\">Cambia el estado de la publicación para que se vea en la web. Por defecto, se crean en modo \"borrador\"</label>\n            <select onChange={ selectThis }>\n                <option value='default' defaultValue> { postState ? postState : 'Cambiar Estado de la publicación...' } </option>\n                { postState !== 'borrador' && <option value=\"borrador\">Borrador</option> }\n                { postState !== 'publicado' && <option value=\"publicado\">Publicada</option> }\n            </select>\n        </>\n    )\n}\n\nexport default PostState\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useForm from '../../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../../actions/posts.action'\nimport { deleteText } from '../../../actions/post-content/text.action';\nimport { deleteImage } from '../../../actions/post-content/image.action';\nimport TitlesArea from '../../_ui/TitlesArea/TitlesArea';\nimport WhatToAdd from '../../_ui/WhatToAdd/WhatToAdd';\nimport PostState from '../../_ui/Posts/PostState/PostState';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\nimport Swal from 'sweetalert2';\n\n//Componentes\n\n\nconst AddPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n    }, [params.postID])\n\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const checkIfSaved = () => {\n        Swal.fire({\n            title: '¿Seguro?',\n            text: 'No has guardado, si sales sin guardar, se perderán los cambios',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '¡Si, salir!',\n            cancelButtonText: '¡Uy, no!',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                handleExit()\n            }\n        })\n\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog-single_zvpet3.svg'\n                title=\"Nueva entrada\"\n                instructions=\"Estás añadiendo una entrada nueva al blog :)\"\n            />\n\n            <article className=\"post-btn-group\">\n                <button className=\"my-btn mini\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => checkIfSaved() }>Salir</button>\n                <button className=\"my-btn mini danger\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n            </article>\n\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                </div>\n\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                        </div>\n                    </div>\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('text', text._id) }>Borrar</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('image', image._id) }>Borrar</button>\n                            </div>\n                        ))\n                    }\n                </div>\n\n            </section>\n        </section>\n\n    )\n}\n\nexport default AddPostScreen\n","\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\n\nimport { deletePost, getThisPost } from '../../../actions/posts.action'\n//Swiper\nimport Swal from 'sweetalert2'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle'\n\ndayjs.locale('es')\nconst Post = () => {\n\tconst isMounted = useRef(true)\n\tconst { postID } = useParams()\n\tlet history = useHistory();\n\n\tconst [post, setPost] = useState()\n\n\tconst getPost = async () => {\n\t\tconst thePost = await getThisPost(postID)\n\t\tsetPost(thePost)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tgetPost()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\tSwal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\thistory.push('/bratic/blog')\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle\n\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621696886/web/dashboard_jrqf3g.svg'\n\t\t\t\ttitle=\"Muestra de la entrada\"\n\t\t\t\tinstructions=\"Así es como se verá la entrada en la web :)\"\n\t\t\t/>\n\t\t\t<section id=\"post-preview\">\n\t\t\t\t<h1>{ post?.title }</h1>\n\t\t\t\t{ post?.createdAt && <small>Publicada el { dayjs(post?.createdAt).format('DD/MM/YYYY') }</small> }\n\t\t\t\t{ post?.content?.image.length > 0 && (\n\t\t\t\t\t<figure className=\"main-image\">\n\t\t\t\t\t\t<img key={ post?.content.image[0]._id } src={ post?.content.image[0].image } alt='' />\n\t\t\t\t\t</figure>\n\t\t\t\t) }\n\t\t\t\t<div className=\"app-container\">\n\t\t\t\t\t{ post?.subtitle && <h2>{ post?.subtitle }</h2> }\n\t\t\t\t\t{ post?.content?.text?.length > 0 && (\n\t\t\t\t\t\tpost?.content?.text?.map((txt, idx) => (\n\t\t\t\t\t\t\t<div className='post-text' key={ txt._id } dangerouslySetInnerHTML={ txt.parsedText }></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t) }\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"btn-group\">\n\t\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post?._id) }>\n\t\t\t\t\t\tBorrar\n\t\t\t\t</button>\n\t\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post?._id}` }>\n\t\t\t\t\t\tEditar\n\t\t\t\t</Link>\n\t\t\t\t\t<Link className='my-btn mini thirsd' to={ `/bratic/blog/` }>\n\t\t\t\t\t\tVolver al blog\n\t\t\t\t</Link>\n\n\t\t\t\t</div>\n\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default Post\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport useForm from '../../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../../actions/posts.action'\nimport { deleteText } from '../../../actions/post-content/text.action';\nimport { deleteImage } from '../../../actions/post-content/image.action';\n\n//Componentes\nimport PostState from '../../_ui/Posts/PostState/PostState';\nimport WhatToAdd from '../../_ui/WhatToAdd/WhatToAdd';\nimport TitlesArea from '../../_ui/TitlesArea/TitlesArea';\nimport SectionTitle from '../../_ui/SectionTitle/SectionTitle';\nimport Swal from 'sweetalert2';\n\n\nconst EditPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n    //Edit Methods\n\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n\n    }, [params.postID])\n\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n    const checkIfSaved = () => {\n        Swal.fire({\n            title: '¿Seguro?',\n            text: 'No has guardado, si sales sin guardar, se perderán los cambios',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '¡Si, salir!',\n            cancelButtonText: '¡Uy, no!',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                handleExit()\n            }\n        })\n\n    }\n\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/blog-single_zvpet3.svg'\n                title=\"Estás editando esta entrada:\"\n                instructions={ selectedPost.title }\n            />\n\n            <article className=\"post-btn-group\">\n                <button className=\"my-btn mini\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => checkIfSaved() }>Salir</button>\n                <button className=\"my-btn mini danger\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                </div>\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                        </div>\n                    </div>\n                    <hr />\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini danger\" onClick={ () => deleteThis('text', text._id) }>Borrar este texto</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini danger\" onClick={ () => deleteThis('image', image._id) }>Borrar esta imagen</button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </section>\n        </section>\n\n    )\n}\n\nexport default EditPostScreen\n","import { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getAllSections = async () => {\n\tconst resp = await fetchSinToken(`sections/`, 'GET')\n\tconst body = await resp.json()\n\treturn body.sections\n}\nexport const addSection = async (section) => {\n\tconst resp = await fetchConToken(`sections/`, section, 'POST')\n\tconst body = await resp.json()\n\treturn body.section\n}\nexport const updateSection = async (section, id) => {\n\tawait fetchConToken(`sections/${id}`, section, 'PUT')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\nexport const deleteSection = async (id) => {\n\tawait fetchConToken(`sections/${id}`, {}, 'DELETE')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroupSection = React.memo(({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{ editLabel }: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ editValue } alt={ nameValue } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel }: <strong>{ editValue }</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini danger' onClick={ () => deleteField(nameValue) }>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ editLabel }: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={ handleShow }>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<Modal className='my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{ editValue }</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={ submitEdit }>\n\t\t\t\t\t\t<input name={ nameValue } type={ inputType } onChange={ editAction } placeholder={ editValue } />\n\t\t\t\t\t\t<button className='my-btn' type='submit' onClick={ handleClose }>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn' onClick={ handleClose }>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditorSections = ({ setQuill, handleQuill, setParsed }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst createHTLM = (text) => {\n\t\treturn { __html: text }\n\t}\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ font: [] }],\n\t\t\t\t[{ 'color': ['#dd4124', '#f38b2e'] }, { 'background': ['#dd4124', '#f38b2e'] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t\tsetParsed(createHTLM(value))\n\t}, [value, setQuill, setParsed])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditorSections.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t\t<form onSubmit={ handleQuill }>\n\t\t\t\t<button type='submit' className='my-btn mini secondary'>\n\t\t\t\t\tGuardar texto\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nTextEditorSections.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditorSections\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport useForm from '../../hooks/useForm'\n\nimport { deleteSection, updateSection } from '../../actions/sections.action'\n\nimport { types } from '../../types/types'\nimport { AuthContext } from '../../reducers/auth/AuthContext'\nimport { SectionContext } from '../../reducers/sections/sectionsContext'\n\nimport { fileUpload } from '../../helpers/uploadFiles'\n\nimport { EditGroupSection } from './EditGroupSection'\n\nimport Swal from 'sweetalert2'\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport TextEditorSections from '../_ui/TextEditor/TextEditorSections'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nexport const SectionScreen = () => {\n\tconst { user } = useContext(AuthContext)\n\tconst { dispatchSections, sections } = useContext(SectionContext)\n\tconst { id } = useParams()\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { title, text, parsedText, subtitle, _id: idSection, uniqueImage, gallery, features, formInputs } = values\n\tconst history = useHistory()\n\tlet thisSection = useRef()\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (sections.length > 0) {\n\t\t\tthisSection.current = sections.find((sect) => sect._id === id)\n\t\t\tsetValues(thisSection.current)\n\t\t}\n\t}, [id, sections, setValues])\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\t//Features\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t}\n\t\tclearInput('to-reset-features')\n\t}\n\n\t//Galeria\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\t//Form inputs\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t}\n\t\tclearInput('to-reset-inputs')\n\t}\n\n\t//Borrar propiedades\n\n\tconst handleDelete = async () => {\n\t\thistory.push('/bratic')\n\t\tconst sectionGroup = await deleteSection(id)\n\t\tdispatchSections({ type: types.deleteSection, payload: sectionGroup })\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t}\n\n\tconst saveChanges = async () => {\n\t\tconst sectionUpdated = await updateSection(values, idSection)\n\t\tif (!sectionUpdated) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.sectionUpdate, payload: sectionUpdated })\n\t\t\thistory.push('/bratic')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-screen'>\n\t\t\t\t<SectionTitle\n\t\t\t\t\timage='https://res.cloudinary.com/bratic-app/image/upload/v1621687077/web/blog-login-image_n0ocyy.svg'\n\t\t\t\t\ttitle=\"Estás editando esta sección\"\n\t\t\t\t\tinstructions={ values?.sectionName }\n\t\t\t\t/>\n\n\t\t\t\t<button className='my-btn mini' onClick={ saveChanges }>\n\t\t\t\t\tGuardar Cambios\n\t\t\t\t</button>\n\n\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t<button className='my-btn mini danger' onClick={ handleDelete }>\n\t\t\t\t\t\tBorrar esta sección\n\t\t\t\t\t</button>\n\t\t\t\t) }\n\n\t\t\t\t{ (title || title === '') && (\n\t\t\t\t\t<EditGroupSection nameValue={ 'title' } deleteField={ deleteField } inputType='text' editLabel={ 'Título' } editAction={ handleInputChange } editValue={ values?.title } submitEdit={ handleSubmit } />\n\t\t\t\t) }\n\t\t\t\t{ subtitle && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\tnameValue={ 'subtitle' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='text'\n\t\t\t\t\t\teditLabel={ 'Subtítulo' }\n\t\t\t\t\t\teditAction={ handleInputChange }\n\t\t\t\t\t\teditValue={ values?.subtitle }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\timageEdit={ true }\n\t\t\t\t\t\tnameValue={ 'uniqueImage' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='file'\n\t\t\t\t\t\teditLabel={ 'Imagen principal' }\n\t\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\t\teditValue={ values?.uniqueImage }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ gallery?.length > 0 && (\n\t\t\t\t\t<div className='edit-gallery'>\n\t\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t{ features?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ formInputs?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ text && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<section className='edit-group text-editor-group'>\n\t\t\t\t\t\t\t<p>Texto:</p>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={ parsedText }></div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</section>\n\t\t</>\n\t)\n}\n","import React, { useContext, useState } from 'react'\nimport { fileUpload } from '../../helpers/uploadFiles'\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport useForm from '../../hooks/useForm'\nimport { addSection } from '../../actions/sections.action'\nimport { SectionContext } from '../../reducers/sections/sectionsContext'\nimport { types } from '../../types/types'\nimport Swal from 'sweetalert2'\nimport TextEditorSections from '../_ui/TextEditor/TextEditorSections';\n\nexport const AddSection = ({ handleClose }) => {\n\tconst { dispatchSections } = useContext(SectionContext)\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { uniqueImage, gallery, features, formInputs } = values\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t}\n\t\tclearInput('to-reset-section-inputs')\n\t}\n\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t}\n\t\tclearInput('to-reset-section-features')\n\t}\n\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tconst newSection = await addSection(values)\n\t\tif (!newSection) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.addSection, payload: newSection })\n\t\t}\n\t\thandleClose()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-form'>\n\t\t\t\t<div className='left-side'>\n\t\t\t\t\t<label>Tipo de sección* { values?.sectionType && <FaCheckCircle /> }</label>\n\t\t\t\t\t<select onChange={ handleInputChange } name='sectionType' required>\n\t\t\t\t\t\t<option value='section' defaultValue>\n\t\t\t\t\t\t\tSección\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value='nav'>Navegador</option>\n\t\t\t\t\t\t<option value='header'>Cabecera</option>\n\t\t\t\t\t\t<option value='footer'>Footer</option>\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<label>Nombre de la sección* { values?.sectionName && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } name='sectionName' autoComplete='off' placeholder='Nombre de la sección' required />\n\n\t\t\t\t\t<label>Título { values?.title && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='title' placeholder='Título' required />\n\n\t\t\t\t\t<label>Subtítulo </label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='subtitle' placeholder='Subtítulo' />\n\n\t\t\t\t\t<label>Imagen principal</label>\n\t\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t\t<figure className='unique-image'>\n\t\t\t\t\t\t\t<img src={ uniqueImage } alt='' />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<input className='file-input' type='file' onChange={ handleFileChange } name='uniqueImage' />\n\t\t\t\t\t<label htmlFor=''>Galería de imágenes</label>\n\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='right-side'>\n\t\t\t\t\t<label>Texto </label>\n\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\n\t\t\t\t\t<label htmlFor=''>Características</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label>Inputs del formulario</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<form className='section-form' onSubmit={ handleSubmit }>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tGuardar Datos\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n","import { fetchSinToken } from '../helpers/fetch'\nimport Swal from 'sweetalert2'\n\nexport const startLogin = async (email, password) => {\n\tconst resp = await fetchSinToken('auth/login', { email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst loggedUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\tlogged: true,\n\t\t\ttoken: body.token,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(loggedUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn loggedUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const startSignup = async (name, email, password) => {\n\tconst resp = await fetchSinToken('auth/signup', { name, email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst signedupUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\ttoken: body.token,\n\t\t\tlogged: true,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(signedupUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn signedupUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\n","import React, { useContext } from 'react'\nimport { startLogin } from '../../../actions/auth.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport useForm from '../../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../../types/types'\n\nconst LoginScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { email, password } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault()\n\t\tconst loggedUser = await startLogin(email, password)\n\n\t\tdispatch({ type: types.login, payload: loggedUser })\n\t}\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={ handleLogin }>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={ handleInputChange } placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Contraseña' name='password' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿No tienes cuenta? Crea una <Link to='/registro'>aquí</Link>{ ' ' }\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useContext } from 'react'\nimport Swal from 'sweetalert2'\nimport { startSignup } from '../../../actions/auth.action'\nimport { AuthContext } from '../../../reducers/auth/AuthContext'\nimport useForm from '../../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../../types/types'\n\nconst SignupScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { name, email, password, password2 } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleSignup = async (e) => {\n\t\te.preventDefault()\n\t\tif (password === password2) {\n\t\t\tconst signedupUser = await startSignup(name, email, password)\n\n\t\t\tdispatch({ type: types.signup, payload: signedupUser })\n\t\t} else {\n\t\t\tSwal.fire('Error', 'Las contraseñas deben coincidir', 'error')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={ handleSignup }>\n\t\t\t\t\t<label>Nombre</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } placeholder='Tu nombre' name='name' />\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={ handleInputChange } placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Contraseña' name='password' />\n\t\t\t\t\t<label>Repite Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={ handleInputChange } placeholder='Repite Contraseña' name='password2' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tRegistro\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿Ya estás registrado? Entra <Link to='/'>aquí</Link>{ ' ' }\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default SignupScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const NavBar = () => {\n\treturn (\n\t\t<nav className='login-nav'>\n\t\t\t<figure>\n\t\t\t\t<img src={ process.env.REACT_APP_COMPANY_LOGO_BN } alt='' />\n\t\t\t</figure>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/'>Entrar</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/registro'>Registro</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SectionCard = ({ section }) => {\n    return (\n\n        <Link className=\"each-section\" to={ `/bratic/seccion/${section._id}` }>{ section.sectionName }</Link>\n\n    )\n}\n\nexport default SectionCard\n","import React, { useEffect, useState } from 'react'\n\nimport { getAllSections } from '../../actions/sections.action'\nimport SectionCard from '../_ui/SectionCard/SectionCard'\nimport SectionTitle from '../_ui/SectionTitle/SectionTitle'\n\nconst AllSections = () => {\n    const [sections, setSections] = useState()\n\n    const fetchSections = async () => {\n        const fetchSections = await getAllSections()\n        setSections(fetchSections)\n    }\n    useEffect(() => {\n        fetchSections()\n\n    }, [])\n\n    return (\n        <section className=\"all-sections\">\n            <SectionTitle\n                image='https://res.cloudinary.com/bratic-app/image/upload/v1621695842/web/sections_r2ejno.svg'\n                title=\"Secciones de tu web\"\n                instructions=\"Aquí verás todas las secciones que componen tu web. Pincha en cualquiera para editarla :). Si necesitas añadir una nueva sección, ponte en contacto con el webmaster.\"\n            />\n            {\n                sections?.length > 0 && (\n                    sections.map((st) => (\n                        <SectionCard key={ st._id } section={ st } />\n                    ))\n                )\n            }\n        </section>\n    )\n}\n\nexport default AllSections\n","import React, { useContext, useEffect, useReducer, useRef, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport { Modal } from 'react-bootstrap'\nimport { fetchSinToken } from '../helpers/fetch'\n\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { CompanyContext } from '../reducers/CompanyContext'\nimport { CompanyReducer } from '../reducers/CompanyReducer'\nimport { SectionContext } from '../reducers/sections/sectionsContext'\nimport { SectionsReducer } from '../reducers/sections/SectionsReducer'\nimport { types } from '../types/types'\n\nimport CompanyScreen from '../components/company/CompanyScreen'\nimport DashboardScreen from '../components/DashboardScreen/DashboardScreen'\nimport { DashboardNav } from '../components/_ui/DashboardNav/DashboardNav'\nimport PostsScreen from '../components/posts/PostsScreen/PostsScreen'\nimport AddPostScreen from '../components/posts/AddPosts/AddPostScreen'\nimport Post from '../components/posts/Post/Post'\nimport EditPostScreen from '../components/posts/EditPosts/EditPostScreen'\nimport { SectionScreen } from '../components/sections/SectionScreen'\nimport { AddSection } from '../components/sections/AddSection'\nimport LoginScreen from '../components/auth/LoginScreen/LoginScreen'\nimport SignupScreen from '../components/auth/SignupScreen/SignupScreen'\nimport { NavBar } from '../components/_ui/NavBar/NavBar'\nimport AllSections from '../components/sections/AllSections'\n\nconst AppRouter = () => {\n\tconst isMounted = useRef(true)\n\tconst { user } = useContext(AuthContext)\n\tconst [company, dispatchCompany] = useReducer(CompanyReducer, {})\n\tconst [sections, dispatchSections] = useReducer(SectionsReducer, {})\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tfetchSinToken(`sections`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchSections({ type: types.getSections, payload: data.sections }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t\tfetchSinToken(`companies`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchCompany({ type: types.getCompany, payload: data.company[0] }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t}\n\t}, [])\n\n\tconst [show, setShow] = useState(false)\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t{ user.token ? (\n\t\t\t\t\t<CompanyContext.Provider value={ { company, dispatchCompany } }>\n\t\t\t\t\t\t<SectionContext.Provider value={ { sections, dispatchSections } }>\n\n\t\t\t\t\t\t\t<div className='dashboard-container'>\n\t\t\t\t\t\t\t\t<DashboardNav handleShow={ handleShow } />\n\n\t\t\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic' component={ DashboardScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/empresa' component={ CompanyScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog' component={ PostsScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/nueva-entrada/:postID' component={ AddPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/:postID' component={ Post } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/editar-entrada/:postID' component={ EditPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/seccion' component={ AllSections } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/seccion/:id' component={ (props) => <SectionScreen { ...props } /> } />\n\t\t\t\t\t\t\t\t\t\t<Redirect to='/bratic' />\n\t\t\t\t\t\t\t\t\t</Switch>\n\n\t\t\t\t\t\t\t\t\t<Modal dialogClassName='modal-width' centered className='my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t\t\t\t<h4>Añadir Sección a la web</h4>\n\t\t\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t<AddSection handleClose={ handleClose } />\n\t\t\t\t\t\t\t\t\t\t</Modal.Body>\n\n\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t\t\tcerrar\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</SectionContext.Provider>\n\t\t\t\t\t</CompanyContext.Provider>\n\t\t\t\t) : (\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t<main className='login-container'>\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={ process.env.REACT_APP_LOGIN_IMAGE } alt=\"\" />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={ LoginScreen } />\n\t\t\t\t\t\t\t\t<Route path='/registro' component={ SignupScreen } />\n\t\t\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t<div className=\"copyright\">\n\t\t\t\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</section>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import { useEffect, useReducer, useRef } from 'react'\nimport { AuthContext } from './reducers/auth/AuthContext'\nimport { AuthReducer } from './reducers/auth/authReducer'\n// Import Swiper styles\nimport 'swiper/swiper.scss'\nimport 'swiper/components/pagination/pagination.scss'\n//Photoswipe\nimport 'react-photoswiper/lib/photoswipe.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss'\n\nimport AppRouter from './routers/AppRouter'\n\nconst init = () => {\n\treturn JSON.parse(localStorage.getItem('bratic-user')) || { logged: false }\n}\n\n\nconst App = () => {\n\tconst isMounted = useRef(true)\n\tconst [user, dispatch] = useReducer(AuthReducer, {}, init)\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tlocalStorage.setItem('bratic-user', JSON.stringify(user))\n\t\t}\n\t}, [user])\n\n\n\treturn (\n\t\t<>\n\t\t\t<AuthContext.Provider value={ { user, dispatch } }>\n\t\t\t\t<AppRouter />\n\t\t\t</AuthContext.Provider>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}