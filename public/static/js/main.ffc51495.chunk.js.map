{"version":3,"sources":["reducers/auth/AuthContext.js","types/types.js","reducers/auth/authReducer.js","helpers/fetch.js","actions/auth.action.js","helpers/uploadFiles.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/SignupScreen.jsx","components/company/EditGroup.jsx","actions/company.action.js","reducers/CompanyContext.js","components/company/UpdateCompany.jsx","components/company/AddCompany.jsx","components/CompanyScreen.jsx","components/DashboardScreen.jsx","reducers/CompanyReducer.js","reducers/sections/sectionsContext.js","ui/DashboardNav.jsx","ui/Navbar.jsx","actions/posts.action.js","components/posts/content/_ui/PostElement.jsx","components/PostsScreen.jsx","components/posts/Post.jsx","components/posts/content/_ui/PostState.jsx","actions/post-content/image.action.js","ui/Loader.jsx","components/posts/content/AddImage.jsx","actions/post-content/text.action.js","ui/TextEditor.jsx","components/posts/content/AddText.jsx","components/posts/content/_ui/WhatToAdd.jsx","components/posts/content/_ui/TitlesArea.jsx","components/posts/AddPostScreen.jsx","components/posts/EditPostScreen.jsx","actions/sections.action.js","components/sections/EditGroupSection.jsx","ui/TextEditorSections.jsx","components/SectionScreen.jsx","components/sections/AddSection.jsx","reducers/sections/SectionsReducer.js","routers/AppRouter.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","require","types","login","signup","logout","hasToken","getCompany","addCompany","companyUpdate","companyDelete","getPosts","getThisPost","addPost","postUpdate","addSection","getSections","sectionUpdate","deleteSection","updateThis","AuthReducer","state","action","type","payload","logged","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","startLogin","email","password","a","resp","json","ok","loggedUser","id","name","setItem","errorMsg","msg","Swal","fire","startSignup","signedupUser","fileUpload","file","formData","FormData","append","then","secure_url","catch","err","console","log","useForm","initialState","useState","values","setValues","loading","setLoading","resetForm","handleInputChange","target","value","handleFileChange","files","LoginScreen","dispatch","useContext","handleLogin","e","preventDefault","className","onSubmit","onChange","placeholder","to","SignupScreen","password2","handleSignup","EditGroup","nameValue","deleteField","inputType","editLabel","editAction","editValue","submitEdit","imageEdit","show","setShow","handleClose","handleShow","src","alt","onClick","Modal","onHide","Header","Title","Body","Footer","company","companyCreated","updateCompany","updatedCompany","error","deleteCompany","CompanyContext","UpdateCompany","dispatchCompany","phone","address","_id","mainEmail","mainLogo","secondaryLogo","linkedin","facebook","twitter","instagram","handleDelete","property","handleSubmit","saveChanges","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","AddCompany","htmlFor","CompanyScreen","isMounted","useRef","useEffect","current","DashboardScreen","user","CompanyReducer","addCompnany","deleteProperty","maquinasCategoriesUpdate","maquinasCategories","SectionContext","DashboardNav","sections","handleLogout","removeItem","data-toggle","length","map","st","sectionName","Navbar","getUserPosts","userPosts","posts","thePost","post","postCreated","updatePost","updatedPost","deletePost","PostElement","askIfDelete","date","setDate","updateDate","setUpdateDate","Date","createdAt","toLocaleString","updatedAt","status","PostsScreen","history","useHistory","setPosts","allMyPosts","handleAdd","author","newPost","push","handleDeletePost","elm","dayjs","locale","Post","postID","useParams","setPost","getPost","format","content","image","subtitle","txt","idx","dangerouslySetInnerHTML","parsedText","PostState","postState","savePostState","defaultValue","addImage","imageCreated","deleteImage","Loader","AddImage","saveElement","saveImage","theImage","addText","textCreated","deleteText","TextEditor","setQuill","setValue","quillRef","ref","modules","toolbar","container","header","color","background","align","list","indent","script","clipboard","matchVisual","formats","theme","AddText","quill","saveText","theText","__html","WhatToAdd","auxContent","setAuxContent","select","postId","TitlesArea","selectedPost","saveTitles","AddPostScreen","params","setPostId","slider","video","gallery","setSelectedPost","findCurrentPost","currentPost","setToDefault","selectedIndex","goBack","handleUpdatePost","deleteThis","prevState","filter","element","contentCopy","EditPostScreen","section","updateSection","EditGroupSection","React","memo","TextEditorSections","handleQuill","setParsed","font","SectionScreen","dispatchSections","idSection","uniqueImage","features","formInputs","thisSection","auxValue","setAuxValue","parsed","find","sect","clearInput","input","document","getElementById","handleGalleryChange","sectionGroup","sectionUpdated","picture","galleryCopy","splice","deletePicture","includes","ft","featCopy","deleteFeature","inp","inputCopy","deleteFormInput","AddSection","newSection","sectionType","required","autoComplete","SectionsReducer","AppRouter","useReducer","Error","Provider","exact","path","component","props","dialogClassName","centered","init","parse","App","ReactDOM","render"],"mappings":"qJAEaA,GAAcC,EAFDC,EAAQ,GAA1BD,iB,OCAKE,EAAQ,CACpBC,MAAO,eACPC,OAAQ,gBACRC,OAAQ,gBACRC,SAAU,kBAEVC,WAAY,uBACZC,WAAY,uBACZC,cAAe,0BACfC,cAAe,0BAEfC,SAAU,kBACVC,YAAa,qBACbC,QAAS,iBACTC,WAAY,oBAEZC,WAAY,uBACZC,YAAa,wBACbC,cAAe,0BACfC,cAAe,0BACfC,WAAY,wBClBAC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACd,KAAKrB,EAAMC,MAIX,KAAKD,EAAME,OAIX,KAAKF,EAAMI,SACV,OAAO,eACHgB,EAAOE,SAEZ,KAAKtB,EAAMG,OACV,MAAO,CACNoB,QAAQ,GAGV,QACC,OAAOJ,I,uECtBJK,EAAUC,uCAEHC,EAAgB,SAACC,GAAyC,IAA/BC,EAA8B,uDAAvB,GAAIC,EAAmB,uDAAV,MACrDC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAe,QAAXE,EACIE,MAAMD,GAENC,MAAMD,EAAK,CACjBD,SACAG,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAUP,MAKXQ,EAAgB,SAACT,GAAyC,IAA/BC,EAA8B,uDAAvB,GAAIC,EAAmB,uDAAV,MACrDC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,iBAAmB,GACtD,MAAe,QAAXV,EACIE,MAAMD,EAAK,CACjBD,SACAG,QAAS,CACR,UAAWK,KAINN,MAAMD,EAAK,CACjBD,SACAG,QAAS,CACR,eAAgB,mBAChB,UAAWK,GAEZJ,KAAMC,KAAKC,UAAUP,M,gBC/BXY,EAAU,uCAAG,WAAOC,EAAOC,GAAd,qBAAAC,EAAA,sEACNjB,EAAc,aAAc,CAAEe,QAAOC,YAAY,QAD3C,cACnBE,EADmB,gBAENA,EAAKC,OAFC,YAEnBZ,EAFmB,QAIhBa,GAJgB,wBAKlBC,EAAa,CAClBC,GAAIf,EAAKe,GACTC,KAAMhB,EAAKgB,KACXR,MAAOR,EAAKQ,MACZlB,QAAQ,EACRc,MAAOJ,EAAKI,OAEbC,aAAaY,QAAQ,cAAehB,KAAKC,UAAUY,IACnDT,aAAaY,QAAQ,eAAgBjB,EAAKI,OAblB,kBAejBU,GAfiB,QAiBlBI,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,QAASH,EAAU,SAlBL,4CAAH,wDAsBVI,EAAW,uCAAG,WAAON,EAAMR,EAAOC,GAApB,qBAAAC,EAAA,sEACPjB,EAAc,cAAe,CAAEuB,OAAMR,QAAOC,YAAY,QADjD,cACpBE,EADoB,gBAEPA,EAAKC,OAFE,YAEpBZ,EAFoB,QAIjBa,GAJiB,wBAKnBU,EAAe,CACpBR,GAAIf,EAAKe,GACTC,KAAMhB,EAAKgB,KACXR,MAAOR,EAAKQ,MACZJ,MAAOJ,EAAKI,MACZd,QAAQ,GAETe,aAAaY,QAAQ,cAAehB,KAAKC,UAAUqB,IACnDlB,aAAaY,QAAQ,eAAgBjB,EAAKI,OAbjB,kBAelBmB,GAfkB,QAiBnBL,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,QAASH,EAAU,SAlBJ,4CAAH,0D,QCzBXM,EAAU,uCAAG,WAAOC,GAAP,iBAAAf,EAAA,4DACR,qDACXgB,EAAW,IAAIC,UACZC,OAAO,gBAAiB,cACjCF,EAASE,OAAO,OAAQH,GACxBC,EAASE,OAAO,SAAUpC,OALD,SAQnBM,MAPW,oDAOK,CAAEF,OAAQ,OAAQI,KAAM0B,IAC5CG,MAAK,SAAClC,GAAD,OAAUA,EAAKiB,UACpBiB,MAAK,SAAClC,GAAD,OAAWE,EAAMF,EAAKmC,cAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAXJ,gCAYlBnC,GAZkB,2CAAH,sDCgCRsC,EA7BC,WAAwB,IAAvBC,EAAsB,uDAAP,GAC/B,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,WACjBH,EAAUH,IAGLO,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5BL,EAAU,2BACND,GADK,kBAEPM,EAAO5B,KAAO4B,EAAOC,UAIlBC,EAAgB,uCAAG,iCAAApC,EAAA,6DAASkC,EAAT,EAASA,OACjCH,GAAW,GACLhB,EAAOmB,EAAOG,MAAM,GAFF,SAGNvB,EAAWC,GAHL,cAGlB5B,EAHkB,gBAIlB0C,EAAU,2BACZD,GADW,kBAEbM,EAAO5B,KAAOnB,KANQ,OAQxB4C,GAAW,GARa,2CAAH,sDAWtB,MAAO,CAAEH,SAAQC,YAAWI,oBAAmBG,mBAAkBJ,YAAWF,Y,OCS9DQ,EA/BK,WACnB,MAAsCb,EAAQ,IAAtCG,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,kBACRnC,EAAoB8B,EAApB9B,MAAOC,EAAa6B,EAAb7B,SACPwC,EAAaC,qBAAWtF,GAAxBqF,SAEFE,EAAW,uCAAG,WAAOC,GAAP,eAAA1C,EAAA,6DACnB0C,EAAEC,iBADiB,SAEM9C,EAAWC,EAAOC,GAFxB,OAEbK,EAFa,OAInBmC,EAAS,CAAE7D,KAAMrB,EAAMC,MAAOqB,QAASyB,IAJpB,2CAAH,sDAMjB,OACC,mCACC,0BAASwC,UAAU,QAAnB,UACC,uBAAMC,SAAUJ,EAAhB,UACC,0CACA,uBAAO/D,KAAK,QAAQoE,SAAUb,EAAmBc,YAAY,WAAWzC,KAAK,UAC7E,kDACA,uBAAO5B,KAAK,WAAWoE,SAAUb,EAAmBc,YAAY,gBAAazC,KAAK,aAClF,wBAAQ5B,KAAK,SAASkE,UAAU,cAAhC,uBAID,oEAC6B,cAAC,IAAD,CAAMI,GAAG,YAAT,qBAAiC,aCiBnDC,EAxCM,WACpB,MAAsCxB,EAAQ,IAAtCG,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,kBACR3B,EAAqCsB,EAArCtB,KAAMR,EAA+B8B,EAA/B9B,MAAOC,EAAwB6B,EAAxB7B,SAAUmD,EAActB,EAAdsB,UACvBX,EAAaC,qBAAWtF,GAAxBqF,SAEFY,EAAY,uCAAG,WAAOT,GAAP,eAAA1C,EAAA,yDACpB0C,EAAEC,iBACE5C,IAAamD,EAFG,gCAGQtC,EAAYN,EAAMR,EAAOC,GAHjC,OAGbc,EAHa,OAKnB0B,EAAS,CAAE7D,KAAMrB,EAAME,OAAQoB,QAASkC,IALrB,sBAOnBH,IAAKC,KAAK,QAAS,qCAAmC,SAPnC,2CAAH,sDAWlB,OACC,mCACC,0BAASiC,UAAU,QAAnB,UACC,uBAAMC,SAAUM,EAAhB,UACC,2CACA,uBAAOzE,KAAK,OAAOoE,SAAUb,EAAmBc,YAAY,YAAYzC,KAAK,SAC7E,0CACA,uBAAO5B,KAAK,QAAQoE,SAAUb,EAAmBc,YAAY,WAAWzC,KAAK,UAC7E,kDACA,uBAAO5B,KAAK,WAAWoE,SAAUb,EAAmBc,YAAY,gBAAazC,KAAK,aAClF,yDACA,uBAAO5B,KAAK,WAAWoE,SAAUb,EAAmBc,YAAY,uBAAoBzC,KAAK,cACzF,wBAAQ5B,KAAK,SAASkE,UAAU,cAAhC,yBAID,uEAC6B,cAAC,IAAD,CAAMI,GAAG,IAAT,qBAAyB,a,QCtC7CI,EAAY,SAAC,GAA4G,IAA1GC,EAAyG,EAAzGA,UAAWC,EAA8F,EAA9FA,YAAaC,EAAiF,EAAjFA,UAAWC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,WAAoC,IAAxBC,iBAAwB,SACpI,EAAwBjC,oBAAS,GAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAC5BE,EAAa,kBAAMF,GAAQ,IAEjC,OACC,qCACEJ,EACA,sBAAKd,UAAU,aAAf,UACEgB,EACA,gCACC,8BAAIJ,EAAJ,QAEA,iCACC,qBAAKS,IAAKP,EAAWQ,IAAKb,SAI5B,8BACEG,EADF,KACc,iCAASE,OAGxB,gCACC,wBAAQd,UAAU,wBAAwBuB,QAAS,kBAAMb,EAAYD,IAArE,oBAGA,wBAAQT,UAAU,cAAcuB,QAASH,EAAzC,0BAMF,sBAAKpB,UAAU,aAAf,UACC,8BACEY,EADF,KACc,iDAEd,wBAAQZ,UAAU,cAAcuB,QAASH,EAAzC,0BAMF,eAACI,EAAA,EAAD,CAAOxB,UAAU,uBAAuBiB,KAAMA,EAAMQ,OAAQN,EAA5D,UACC,cAACK,EAAA,EAAME,OAAP,UACC,cAACF,EAAA,EAAMG,MAAP,UAAcb,MAEf,cAACU,EAAA,EAAMI,KAAP,UACC,uBAAM5B,UAAU,YAAYC,SAAUc,EAAtC,UACC,uBAAOrD,KAAM+C,EAAW3E,KAAM6E,EAAWT,SAAUW,EAAYV,YAAaW,IAC5E,wBAAQd,UAAU,SAASlE,KAAK,SAASyF,QAASJ,EAAlD,0BAKF,cAACK,EAAA,EAAMK,OAAP,UACC,wBAAQ7B,UAAU,SAASuB,QAASJ,EAApC,6BCxDQpG,EAAU,uCAAG,WAAO+G,GAAP,mBAAA1E,EAAA,sEACNP,EAAc,aAAciF,EAAS,QAD/B,cACnBzE,EADmB,gBAENA,EAAKC,OAFC,YAEnBZ,EAFmB,QAGhBa,GAHgB,uBAIlBwE,EAAiBrF,EAAKoF,QAJJ,kBAKjBC,GALiB,2CAAH,sDAQVC,EAAa,uCAAG,WAAOvE,EAAIqE,GAAX,qBAAA1E,EAAA,sEACTP,EAAc,aAAD,OAAcY,GAAMqE,EAAS,OADjC,cACtBzE,EADsB,gBAETA,EAAKC,OAFI,YAEtBZ,EAFsB,QAGnBa,GAHmB,wBAIrB0E,EAAiBvF,EAAKoF,QAC5BhE,IAAKC,KAAK,cAAY,iCAAkC,WAL7B,kBAOpBkE,GAPoB,QASrBrE,EAAWlB,EAAKwF,MACtBpE,IAAKC,KAAK,QAASH,EAAU,SAVF,4CAAH,wDAcbuE,EAAa,uCAAG,WAAO1E,GAAP,SAAAL,EAAA,sEACtBP,EAAc,aAAD,OAAcY,GAAM,GAAI,UADf,2CAAH,sDCvBb2E,GAAiB7H,EAFJC,EAAQ,GAA1BD,iBCQK8H,EAAgB,WAC5B,MAAqCzC,qBAAWwC,GAAxCN,EAAR,EAAQA,QAASQ,EAAjB,EAAiBA,gBAET5E,EAA8GoE,EAA9GpE,KAAM6E,EAAwGT,EAAxGS,MAAOC,EAAiGV,EAAjGU,QAAc/E,EAAmFqE,EAAxFW,IAASC,EAA+EZ,EAA/EY,UAAWC,EAAoEb,EAApEa,SAAUC,EAA0Dd,EAA1Dc,cAAeC,EAA2Cf,EAA3Ce,SAAUC,EAAiChB,EAAjCgB,SAAUC,EAAuBjB,EAAvBiB,QAASC,EAAclB,EAAdkB,UACxG,EAAmEnE,EAAQiD,GAAnE9C,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWI,EAA3B,EAA2BA,kBAAmBG,EAA9C,EAA8CA,iBAExCyD,EAAY,uCAAG,sBAAA7F,EAAA,sEACd+E,EAAc1E,GADA,OAEpB6E,EAAgB,CAAExG,KAAMrB,EAAMQ,gBAFV,2CAAH,qDAsBZyF,EAAW,uCAAG,WAAOwC,GAAP,eAAA9F,EAAA,sDACbrB,EADa,2BAEfiD,GAFe,kBAGjBkE,EAAW,KAEbjE,EAAU,2BACND,GADK,kBAEPkE,EAAW,MAEbZ,EAAgB,CAAExG,KAAMrB,EAAMuH,cAAejG,YAT1B,2CAAH,sDAYXoH,EAAe,SAACrD,GACrBA,EAAEC,iBACFuC,EAAgB,CAAExG,KAAMrB,EAAMuH,cAAejG,QAASiD,KAGjDoE,EAAW,uCAAG,sBAAAhG,EAAA,sEACb4E,EAAcvE,EAAIqE,GADL,2CAAH,qDAIjB,OACC,qCACC,kDACA,wBAAQ9B,UAAU,cAAcuB,QAAS6B,EAAzC,6BAGA,wBAAQpD,UAAU,wBAAwBuB,QA7CxB,WACnBzD,IAAKC,KAAK,CACTsF,MAAO,cACPC,KAAM,+CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,sBACnBC,iBAAkB,gBAChBrF,MAAK,SAACsF,GACJA,EAAOC,cACVb,IACAnF,IAAKC,KAAK,uBAAqB,2CAAyC,gBAgCzE,iCAIA,sBAAKiC,UAAU,UAAf,UACC,cAAC,EAAD,CAAWU,YAAaA,EAAaD,UAAW,OAAQE,UAAW,OAAQC,UAAW,oBAAqBC,WAAYxB,EAAmByB,UAAWpD,EAAMqD,WAAYoC,IACvK,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,UAAWE,UAAW,OAAQC,UAAW,eAAaC,WAAYxB,EAAmByB,UAAW0B,EAASzB,WAAYoC,IACrK,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,QAASE,UAAW,OAAQC,UAAW,wBAAsBC,WAAYxB,EAAmByB,UAAWyB,EAAOxB,WAAYoC,IAC1K,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,YAAaE,UAAW,QAASC,UAAW,kBAAmBC,WAAYxB,EAAmByB,UAAW4B,EAAW3B,WAAYoC,IAChL,cAAC,EAAD,CACCzC,YAAaA,EACbD,UAAW,WACXO,WAAW,EACXL,UAAW,OACXC,UAAW,iBACXC,WAAYrB,EACZsB,UAAW6B,EACX5B,WAAYoC,IAEb,cAAC,EAAD,CACCzC,YAAaA,EACbD,UAAW,gBACXO,WAAW,EACXL,UAAW,OACXC,UAAW,UACXC,WAAYrB,EACZsB,UAAW8B,EACX7B,WAAYoC,IAEb,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,UAAWE,UAAW,OAAQC,UAAW,cAAeC,WAAYxB,EAAmByB,UAAWiC,EAAShC,WAAYoC,IACvK,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,WAAYE,UAAW,OAAQC,UAAW,eAAgBC,WAAYxB,EAAmByB,UAAWgC,EAAU/B,WAAYoC,IAC1K,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,YAAaE,UAAW,OAAQC,UAAW,gBAAiBC,WAAYxB,EAAmByB,UAAWkC,EAAWjC,WAAYoC,IAC7K,cAAC,EAAD,CAAWzC,YAAaA,EAAaD,UAAW,WAAYE,UAAW,OAAQC,UAAW,eAAgBC,WAAYxB,EAAmByB,UAAW+B,EAAU9B,WAAYoC,WCtD/JY,EArCI,WAClB,MAAwDlF,EAAQ,IAAxDG,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,kBAAmBG,EAAnC,EAAmCA,iBAE7B2D,EAAY,uCAAG,WAAOrD,GAAP,SAAA1C,EAAA,6DACpB0C,EAAEC,iBADkB,SAEdhF,EAAWiE,GAFG,2CAAH,sDAKlB,OACC,mCACC,uBAAMgB,UAAU,WAAWC,SAAUkD,EAArC,UACC,uBAAOrH,KAAK,OAAO4B,KAAK,OAAOyC,YAAY,uBAAuBD,SAAUb,IAC5E,uBAAOvD,KAAK,QAAQ4B,KAAK,YAAYyC,YAAY,mBAAmBD,SAAUb,IAC9E,uBAAOvD,KAAK,OAAO4B,KAAK,QAAQyC,YAAY,wBAAqBD,SAAUb,IAC3E,uBAAOvD,KAAK,OAAO4B,KAAK,UAAUyC,YAAY,eAAYD,SAAUb,IACpE,uBAAOvD,KAAK,OAAO4B,KAAK,WAAWyC,YAAY,eAAeD,SAAUb,IACxE,uBAAOvD,KAAK,OAAO4B,KAAK,WAAWyC,YAAY,eAAeD,SAAUb,IACxE,uBAAOvD,KAAK,OAAO4B,KAAK,YAAYyC,YAAY,gBAAgBD,SAAUb,IAC1E,uBAAOvD,KAAK,OAAO4B,KAAK,UAAUyC,YAAY,cAAcD,SAAUb,IACtE,sBAAKW,UAAU,eAAf,UACC,gCACC,uBAAOgE,QAAQ,WAAf,4BACA,uBAAOlI,KAAK,OAAOkE,UAAU,aAAatC,KAAK,WAAWD,GAAG,WAAW0C,YAAY,iBAAiBD,SAAUV,OAEhH,gCACC,uBAAOwE,QAAQ,gBAAf,wBACA,uBAAOlI,KAAK,OAAOkE,UAAU,aAAatC,KAAK,gBAAgBD,GAAG,gBAAgB0C,YAAY,kBAAkBD,SAAUV,UAG5H,wBAAQQ,UAAU,cAAclE,KAAK,SAArC,iCCfWmI,EAbO,WACrB,IAAMC,EAAYC,kBAAO,GACjBrC,EAAYlC,qBAAWwC,GAAvBN,QAQR,OANAsC,qBAAU,WACT,OAAO,WACNF,EAAUG,SAAU,KAEnB,IAEI,mCAAGvC,EAAQW,IAAM,cAAC,EAAD,IAAoB,cAAC,EAAD,OCH9B6B,EATS,WACvB,IAAQC,EAAS3E,qBAAWtF,GAApBiK,KACR,OACC,yBAAS9G,GAAG,mBAAZ,SACC,iDAAkB8G,EAAK7G,KAAvB,UCLU8G,EAAiB,WAAyB,IAAxB5I,EAAuB,uDAAf,GAAIC,EAAW,uCACrD,OAAQA,EAAOC,MACd,KAAKrB,EAAMK,WAIX,KAAKL,EAAMgK,YAIX,KAAKhK,EAAMO,cAIX,KAAKP,EAAMiK,eACV,OAAO,eACH7I,EAAOE,SAEZ,KAAKtB,EAAMkK,yBACV,OAAO,2BACH/I,GADJ,IAECgJ,mBAAoB/I,EAAOE,UAE7B,KAAKtB,EAAMQ,cACV,MAAO,GACR,QACC,OAAOW,I,QC1BGiJ,GAAiBtK,EAFJC,EAAQ,GAA1BD,iB,QCQKuK,EAAe,SAAC,GAAoB,IAAlB1D,EAAiB,EAAjBA,WAC9B,EAA2BxB,qBAAWtF,GAA9BqF,EAAR,EAAQA,SAAU4E,EAAlB,EAAkBA,KAClB,EAAwBxF,oBAAS,GAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KACQ6D,EAAanF,qBAAWiF,GAAxBE,SAGFC,EAAY,uCAAG,sBAAA5H,EAAA,sEACduC,EAAS,CAAE7D,KAAMrB,EAAMG,SADT,OAEpBmC,aAAakI,WAAW,gBACxBlI,aAAakI,WAAW,eAHJ,2CAAH,qDAMlB,OACC,mCAEEhE,EACC,qBAAKjB,UAAU,gBAAf,SACC,qCACC,qBAAKA,UAAU,YAAf,SACC,cAAC,IAAD,CAAoBA,UAAU,aAAauB,QAAU,kBAAML,GAAQ,QAGpE,+BACC,6BACC,cAAC,IAAD,CAAMd,GAAG,UAAT,SACC,iCACC,qBAAKiB,IAAI,mFAAmFC,IAAI,WAInG,6BACC,cAAC,IAAD,CAAMlB,GAAG,kBAAT,gCAED,6BACC,cAAC,IAAD,CAAMA,GAAG,eAAT,oBAED,qBAAIJ,UAAU,WAAd,UACC,oBAAGkF,cAAY,WAAf,iCACqB,cAAC,IAAD,OAEnBH,EAASI,OAAS,GACnB,oBAAInF,UAAU,gBAAd,SACE+E,EAASK,KAAI,SAACC,GAAD,OACb,6BACC,cAAC,IAAD,CAAMjF,GAAE,0BAAsBiF,EAAG5C,KAAjC,SAA2C4C,EAAGC,eADrCD,EAAG5C,gBAQlB,sBAAKzC,UAAU,YAAf,UACC,4DACA,qDACiB,kBAAfuE,EAAKrH,OACN,wBAAQ8C,UAAU,oBAAoBuB,QAAUH,EAAhD,kCAID,wBAAQpB,UAAU,wBAAwBuB,QAAUyD,EAApD,sCAKH,qBAAKhF,UAAU,WAAf,SACC,qBAAKA,UAAU,YAAf,SACC,cAAC,IAAD,CAAkBA,UAAU,aAAauB,QAAU,kBAAML,GAAQ,aCvE3DqE,EAAS,WACrB,OACC,qBAAKvF,UAAU,YAAf,SACC,sBAAKA,UAAU,YAAf,UACC,iCACC,qBAAKqB,IAAI,mFAAmFC,IAAI,OAEjG,+BACC,6BACC,cAAC,IAAD,CAAMlB,GAAG,IAAT,sBAED,6BACC,cAAC,IAAD,CAAMA,GAAG,YAAT,iCCZOoF,EAAY,uCAAG,WAAOjB,GAAP,mBAAAnH,EAAA,sEACRjB,EAAc,SAAD,OAAUoI,GAAQ,OADvB,cACrBlH,EADqB,gBAERA,EAAKC,OAFG,YAErBZ,EAFqB,QAGlBa,GAHkB,uBAIpBkI,EAAY/I,EAAKgJ,MAJG,kBAKnBD,GALmB,2CAAH,sDAQZtK,EAAW,uCAAG,WAAOsC,GAAP,mBAAAL,EAAA,sEACPjB,EAAc,cAAD,OAAesB,GAAM,OAD3B,cACpBJ,EADoB,gBAEPA,EAAKC,OAFE,YAEpBZ,EAFoB,QAGjBa,GAHiB,uBAInBoI,EAAUjJ,EAAKkJ,KAJI,kBAKlBD,GALkB,2CAAH,sDASXvK,EAAO,uCAAG,WAAOwK,GAAP,mBAAAxI,EAAA,sEACHP,EAAc,SAAU+I,EAAM,QAD3B,cAChBvI,EADgB,gBAEHA,EAAKC,OAFF,YAEhBZ,EAFgB,QAGba,GAHa,uBAIfsI,EAAcnJ,EAAKkJ,KAJJ,kBAKdC,GALc,2CAAH,sDASPC,EAAU,uCAAG,WAAOrI,EAAImI,GAAX,qBAAAxI,EAAA,sEACNP,EAAc,SAAD,OAAUY,GAAMmI,EAAM,OAD7B,cACnBvI,EADmB,gBAENA,EAAKC,OAFC,YAEnBZ,EAFmB,QAGhBa,GAHgB,wBAIlBwI,EAAcrJ,EAAKkJ,KACzB9H,IAAKC,KAAK,cAAY,iCAAkC,WALhC,kBAMjBgI,GANiB,QAQlBnI,EAAWlB,EAAKwF,MACtBpE,IAAKC,KAAK,QAASH,EAAU,SATL,4CAAH,wDAaVoI,EAAU,uCAAG,WAAOvI,GAAP,SAAAL,EAAA,sEACnBP,EAAc,SAAD,OAAUY,GAAM,GAAI,UADd,2CAAH,sDCLRwI,EAlCK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaN,EAAW,EAAXA,KACnC,EAAwB7G,qBAAxB,mBAAOoH,EAAP,KAAaC,EAAb,KACA,EAAoCrH,qBAApC,mBAAOsH,EAAP,KAAmBC,EAAnB,KAOA,OALAlC,qBAAU,WACTgC,EAAQ,IAAIG,KAAKX,EAAKY,WAAWC,kBACjCH,EAAc,IAAIC,KAAKX,EAAKc,WAAWD,oBACrC,CAACN,EAAMC,EAASR,IAGlB,mCACC,0BAAS5F,UAAU,iBAAnB,UACC,sBAAKA,UAAU,OAAf,UACC,6BAAM4F,EAAKvC,QACT8C,GAAQ,6DAA4B,iCAAUA,OAC9CE,GAAc,mEAA+B,iCAAUA,OACzD,oBAAGrG,UAAU,SAAb,0CAAgD,iCAAU4F,EAAKe,eAEhE,sBAAK3G,UAAU,YAAf,UACC,wBAAQA,UAAU,oBAAoBuB,QAAU,kBAAM2E,EAAYN,EAAKnD,MAAvE,4BAGA,cAAC,IAAD,CAAMzC,UAAU,wBAAwBI,GAAE,sCAAkCwF,EAAKnD,KAAjF,4BAGA,cAAC,IAAD,CAAMzC,UAAU,eAAeI,GAAE,uBAAmBwF,EAAKnD,KAAzD,kCCsDUmE,EA3EK,WACnB,IAAIC,EAAUC,uBACR5C,EAAYC,kBAAO,GACzB,EAA0BpF,qBAA1B,mBAAO2G,EAAP,KAAcqB,EAAd,KACQxC,EAAS3E,qBAAWtF,GAApBiK,KAGFyC,EAAU,uCAAG,4BAAA5J,EAAA,sEACEoI,EAAajB,EAAK9G,IADpB,OACZiI,EADY,OAElBqB,EAASrB,GAFS,2CAAH,qDAKhBtB,qBAAU,WACT,OAAO,WACNF,EAAUG,SAAU,KAEnB,IAEHD,qBAAU,WAIT,OAHIF,EAAUG,SACb2C,IAEM,WACN9C,EAAUG,SAAU,MAItB,IAAM4C,EAAS,uCAAG,4BAAA7J,EAAA,sEACKhC,EAAQ,CAAEiI,MAAO,wBAAsB6D,OAAQ3C,EAAK9G,KADzD,OACX0J,EADW,OAEjBN,EAAQO,KAAR,qCAA2CD,EAAQ1E,MAFlC,2CAAH,qDAKT4E,EAAgB,uCAAG,WAAO5J,GAAP,SAAAL,EAAA,sEAClB4I,EAAWvI,GADO,uBAElBuJ,IAFkB,2CAAH,sDAMhBd,EAAc,SAACzI,GACpBK,IAAKC,KAAK,CACTsF,MAAO,cACPC,KAAM,wCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,sBACnBC,iBAAkB,gBAChBrF,MAAK,SAACsF,GACJA,EAAOC,aACVuD,EAAiB5J,OAMpB,OACC,sBAAKA,GAAG,eAAR,UACC,mDACA,2EAA0C,wBAAQuC,UAAU,OAAlB,SAA2BuE,EAAK7G,OAA1E,mCACA,wBAAQsC,UAAU,sBAAsBuB,QAAU0F,EAAlD,yCAEM,OAALvB,QAAK,IAALA,OAAA,EAAAA,EAAOP,QAAS,EAChB,yBAASnF,UAAU,YAAnB,gBACE0F,QADF,IACEA,OADF,EACEA,EAAON,KAAI,SAACkC,GAAD,OACX,cAAC,EAAD,CAAapB,YAAcA,EAAcN,KAAO0B,GAAYA,EAAI7E,UAIlE,yBAASzC,UAAU,cAAnB,6C,yBClEJuH,KAAMC,OAAO,MACb,IAgFeC,GAhFF,WAAO,IAAD,UACZvD,EAAYC,kBAAO,GACjBuD,EAAWC,sBAAXD,OACJb,EAAUC,uBAEd,EAAwB/H,qBAAxB,mBAAO6G,EAAP,KAAagC,EAAb,KAEMC,EAAO,uCAAG,4BAAAzK,EAAA,sEACOjC,EAAYuM,GADnB,OACT/B,EADS,OAEfiC,EAAQjC,GAFO,2CAAH,qDAKbvB,qBAAU,WAIT,OAHIF,EAAUG,SACbwD,IAEM,WACN3D,EAAUG,SAAU,MAItB,IAkBMgD,EAAgB,uCAAG,WAAO5J,GAAP,SAAAL,EAAA,sEAClB4I,EAAWvI,GADO,OAExBoJ,EAAQO,KAAK,gBAFW,2CAAH,sDAMtB,OACC,0BAAS3J,GAAG,eAAZ,UACC,oCAAMmI,QAAN,IAAMA,OAAN,EAAMA,EAAMvC,SACN,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMY,YAAa,kDAAsBe,KAAK,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAMY,WAAWsB,OAAO,kBACnE,OAAJlC,QAAI,IAAJA,GAAA,UAAAA,EAAMmC,eAAN,eAAeC,MAAM7C,QAAS,GAC/B,wBAAQnF,UAAU,aAAlB,SACC,qBAAwCqB,IAAG,OAAGuE,QAAH,IAAGA,OAAH,EAAGA,EAAMmC,QAAQC,MAAM,GAAGA,MAAQ1G,IAAI,IAAjF,OAAWsE,QAAX,IAAWA,OAAX,EAAWA,EAAMmC,QAAQC,MAAM,GAAGvF,OAGpC,sBAAKzC,UAAU,YAAf,WACO,OAAJ4F,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,WAAY,oCAAMrC,QAAN,IAAMA,OAAN,EAAMA,EAAMqC,YAC1B,OAAJrC,QAAI,IAAJA,GAAA,UAAAA,EAAMmC,eAAN,mBAAezE,YAAf,eAAqB6B,QAAS,IAA9B,OACDS,QADC,IACDA,GADC,UACDA,EAAMmC,eADL,iBACD,EAAezE,YADd,aACD,EAAqB8B,KAAI,SAAC8C,EAAKC,GAAN,OACxB,qBAAKnI,UAAU,YAA4BoI,wBAA0BF,EAAIG,YAAxCH,EAAIzF,YAKxC,sBAAKzC,UAAU,YAAf,UACC,wBAAQA,UAAU,oBAAoBuB,QAAU,kBA3C9B9D,EA2C+C,OAACmI,QAAD,IAACA,OAAD,EAACA,EAAMnD,SA1C1E3E,IAAKC,KAAK,CACTsF,MAAO,cACPC,KAAM,wCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,sBACnBC,iBAAkB,gBAChBrF,MAAK,SAACsF,GACJA,EAAOC,cACVuD,EAAiB5J,GACjBK,IAAKC,KAAK,uBAAqB,2CAAyC,eAbvD,IAACN,GA2ClB,oBAGA,cAAC,IAAD,CAAMuC,UAAU,wBAAwBI,GAAE,6CAAkCwF,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMnD,KAAlF,oBAGA,cAAC,IAAD,CAAMzC,UAAU,qBAAqBI,GAAE,gBAAvC,mC,kBC/DWkI,GAhBG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAO5B,OACI,yBAAQtI,SALO,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OAClBkJ,EAAclJ,EAAOC,QAIrB,UACI,yBAAQA,MAAM,UAAUkJ,cAAY,EAApC,cAAwCF,GAAwB,yCAAhE,OACe,aAAdA,GAA4B,wBAAQhJ,MAAM,WAAd,sBACd,cAAdgJ,GAA6B,wBAAQhJ,MAAM,YAAd,2BCV7BmJ,GAAQ,uCAAG,WAAOV,EAAON,GAAd,qBAAAtK,EAAA,sEACJP,EAAc,UAAD,OAAW6K,GAAUM,EAAO,QADrC,cACjB3K,EADiB,gBAEJA,EAAKC,OAFD,YAEjBZ,EAFiB,QAGda,GAHc,wBAIhBoL,EAAejM,EAAKsL,MAJJ,kBAKfW,GALe,QAOhB/K,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,aAAWH,EAAU,SART,4CAAH,wDAYRgL,GAAW,uCAAG,WAAOnL,GAAP,mBAAAL,EAAA,sEACPP,EAAc,UAAD,OAAWY,GAAM,GAAI,UAD3B,cACpBJ,EADoB,gBAEPA,EAAKC,OAFE,QAEpBZ,EAFoB,QAGhBa,GAITO,IAAKC,KAAK,YAAU,iBAAkB,YAHhCH,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,aAAWH,EAAU,UALN,2CAAH,sDCFTiL,GAXA,SAAC,GAAiB,IAAf3J,EAAc,EAAdA,QACd,OACI,yBAASzB,GAAG,UAAUuC,UAAYd,EAAO,cAAzC,SACI,sBAAKc,UAAU,aAAf,UACI,wBACA,8BC0BD8I,GA5BE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAarB,EAAa,EAAbA,OAChC,EAA8C7I,IAAtCG,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,iBAAkBN,EAAlC,EAAkCA,QAC5B8J,EAAS,uCAAG,4BAAA5L,EAAA,sEACMsL,GAAS,CAAEV,MAAOhJ,EAAOgJ,OAASN,GADxC,OACXuB,EADW,OAEjBF,EAAY,QAASE,GAFJ,2CAAH,qDAKf,OACC,gCACC,qBAAKjJ,UAAU,aAAf,SACC,uBAAOlE,KAAK,OAAOkE,UAAU,aAAatC,KAAK,QAAQD,GAAG,QAAQyC,SAAWV,MAE7EN,EACA,cAAC,GAAD,CAAQA,SAAU,KAEZ,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQgJ,QACP,qCACC,qBAAKhI,UAAU,eAAeqB,IAAMrC,EAAOgJ,MAAQ1G,IAAI,KACvD,wBAAQtB,UAAU,cAAcuB,QAAU,kBAAMyH,KAAhD,mDCpBOE,GAAO,uCAAG,WAAO5F,EAAMoE,GAAb,qBAAAtK,EAAA,sEACHP,EAAc,SAAD,OAAU6K,GAAUpE,EAAM,QADpC,cAChBjG,EADgB,gBAEHA,EAAKC,OAFF,YAEhBZ,EAFgB,QAGba,GAHa,wBAIf4L,EAAczM,EAAK4G,KAJJ,kBAKd6F,GALc,QAOfvL,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,aAAWH,EAAU,SARV,4CAAH,wDAYPwL,GAAU,uCAAG,WAAO3L,GAAP,mBAAAL,EAAA,sEACNP,EAAc,SAAD,OAAUY,GAAM,GAAI,UAD3B,cACnBJ,EADmB,gBAENA,EAAKC,OAFC,QAEnBZ,EAFmB,QAGfa,GAITO,IAAKC,KAAK,YAAU,gBAAiB,YAH/BH,EAAWlB,EAAKmB,IACtBC,IAAKC,KAAK,aAAWH,EAAU,UALP,2CAAH,sD,oBCXjByL,I,MAAa,SAAbA,EAAc,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAA0BvK,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcgK,EAAd,KACMC,EAAWrF,iBAAO,MAuBxB,OAJAC,qBAAU,WACTkF,EAAS/J,MAIT,8BACC,qBAAKS,UAAU,cAAf,SACC,cAAC,KAAD,CAAYyJ,IAAMD,EAAWE,QAxBhB,CACfC,QAAS,CACRC,UAAW,CACV,CAAC,CAAEC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,CAAEC,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,CAAEC,MAAO,KACV,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,UAAY,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OACtE,CAAC,CAAEC,OAAQ,OAAS,CAAEA,OAAQ,UAC9B,CAAC,UAGHC,UAAW,CACVC,aAAa,IAWqCC,QAAUjB,EAAWiB,QAAUC,MAAM,OAAOhL,MAAQA,EAAQW,SAAWqJ,UAM5HF,GAAWiB,QAAU,CAAC,SAAU,OAAQ,SAAU,YAAa,SAAU,aAAc,OAAQ,SAAU,SAAU,OAAQ,QAAS,QAAS,SAAU,cAExIjB,UCAAmB,GAnCC,SAAC,GAA6B,IAA3BzB,EAA0B,EAA1BA,YAAarB,EAAa,EAAbA,OACzBxD,EAAYC,kBAAO,GACzB,EAA0BpF,qBAA1B,mBAAO0L,EAAP,KAAcnB,EAAd,KACA,EAA8BzK,IAAtBG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEVyL,EAAQ,uCAAG,4BAAAtN,EAAA,sEACM8L,GAAQlK,EAAQ0I,GADtB,OACViD,EADU,OAEhB5B,EAAY,OAAQ4B,GAFJ,2CAAH,qDAoBd,OAfAvG,qBAAU,WACT,OAAO,WACNF,EAAUG,SAAU,KAEnB,IAEHD,qBAAU,WACLF,EAAUG,SACbpF,EAAU,CACTqE,KAAMmH,EACNpC,WAAY,CAAEuC,OAAQH,OAGtB,CAACA,EAAOxL,IAGV,gCACC,cAAC,GAAD,CAAYqK,SAAWA,IACvB,wBAAQtJ,UAAU,cAAcuB,QAAU,kBAAMmJ,KAAhD,8CCOYG,GApCG,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,OAAQlC,EAAkB,EAAlBA,YAiB5D,OACI,qCACI,0GACA,yBAAQU,IAAMuB,EAAS9K,SAlBf,SAAC,GACb,OAD4B,EAAbZ,OACAC,OACX,IAAK,OACDwL,EAAc,QACd,MACJ,IAAK,QACDA,EAAc,SACd,MACJ,QACIA,EAAc,aAS0BrN,KAAK,UAAUyC,YAAY,eAAvE,UACI,wBAAQZ,MAAM,UAAUkJ,cAAY,EAApC,4BACA,wBAAQlJ,MAAM,OAAd,mBACA,wBAAQA,MAAM,QAAd,gCAIJ,0BAASS,UAAU,WAAnB,UACqB,YAAf8K,GAA4B,2DACb,SAAfA,GAAyB,cAAC,GAAD,CAAS/B,YAAcA,EAAcrB,OAASuD,IACxD,UAAfH,GAA0B,cAAC,GAAD,CAAU/B,YAAcA,EAAcrB,OAASuD,WClB5EC,GAdI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAY/L,EAAwB,EAAxBA,kBAC5C,OACI,yBAASW,UAAU,aAAnB,SACI,uBAAMA,UAAU,aAAaC,SAAWmL,EAAxC,UACI,uBAAOpH,QAAQ,QAAf,qCACA,uBAAOvG,GAAG,QAAQ3B,KAAK,OAAO4B,KAAK,QAAQwC,SAAWb,EAAoBc,YAAcgL,EAAa9H,QACrG,uBAAOW,QAAQ,WAAf,wCACA,uBAAOvG,GAAG,WAAW3B,KAAK,OAAO4B,KAAK,WAAWyC,YAAcgL,EAAalD,SAAW/H,SAAWb,IAClG,wBAAQW,UAAU,oBAAoBlE,KAAK,SAA3C,wCCkKDuP,GA3JO,WAClB,IAAIxE,EAAUC,uBACVwE,EAAS3D,uBACPqD,EAAS7G,mBAEf,EAAsCtF,IAA9BG,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,kBAChB,EAA4BN,qBAA5B,mBAAOkM,EAAP,KAAeM,EAAf,KAEA,EAAoCxM,mBAAS,WAA7C,mBAAO+L,EAAP,KAAmBC,EAAnB,KACA,EAAwChM,mBAAS,CAAEsE,MAAO,gBAAc4E,SAAU,GAAIF,QAAS,CAAEyD,OAAQ,GAAIxD,MAAO,GAAI1E,KAAM,GAAImI,MAAO,GAAIC,QAAS,MAAtJ,mBAAOP,EAAP,KAAqBQ,EAArB,KAEAvH,qBAAU,WACNmH,EAAUD,EAAO5D,QACjBkE,EAAgBN,EAAO5D,UACxB,CAAC4D,EAAO5D,SAIX,IAAMkE,EAAe,uCAAG,WAAOnO,GAAP,eAAAL,EAAA,sEACMjC,EAAYsC,GADlB,OACdoO,EADc,OAEpBF,EAAgBE,GAFI,2CAAH,sDA6CfC,EAAe,WACjBd,EAAO3G,QAAQ0H,cAAgB,EAC/BhB,EAAc,YASZ1D,EAAgB,uCAAG,WAAO5J,GAAP,SAAAL,EAAA,sEACf4I,EAAWvI,GADI,OAErBoJ,EAAQmF,SAFa,2CAAH,sDAKhBC,EAAgB,uCAAG,WAAOxO,EAAIsK,GAAX,SAAA3K,EAAA,sEACf0I,EAAWrI,EAAIsK,GADA,OAErBlB,EAAQmF,SAFa,2CAAH,wDAKhBE,EAAU,uCAAG,WAAOpQ,EAAM2B,GAAb,SAAAL,EAAA,2DACPtB,EADO,OAEN,SAFM,OAMN,UANM,uCAGDsN,GAAW3L,GAHV,cAIPkO,GAAgB,SAAAQ,GAAS,kCAAUA,GAAV,IAAqBpE,QAAQ,2BAAMoE,EAAUpE,SAAjB,IAA0BzE,KAAM6I,EAAUpE,QAAQzE,KAAK8I,QAAO,SAAA9I,GAAI,OAAIA,EAAKb,MAAQhF,YAJjI,4CAODmL,GAAYnL,GAPX,cAQPkO,GAAgB,SAAAQ,GAAS,kCAAUA,GAAV,IAAqBpE,QAAQ,2BAAMoE,EAAUpE,SAAjB,IAA0BC,MAAOmE,EAAUpE,QAAQC,MAAMoE,QAAO,SAAApE,GAAK,OAAIA,EAAMvF,MAAQhF,YARrI,qGAAH,wDAgBhB,OACI,0BAASA,GAAG,mBAAZ,UACI,0BAASuC,UAAU,iBAAnB,UACI,wDACA,wBAAQA,UAAU,wBAAwBuB,QAAU,kBAAM8F,EAAiB4D,IAA3E,4BACA,wBAAQjL,UAAU,oBAAoBuB,QAAU,kBAAM0K,EAAiBhB,EAAQE,IAA/E,6BACA,wBAAQnL,UAAU,cAAcuB,QAAU,WAnClDsF,EAAQmF,UAmCA,sBAEJ,0BAAShM,UAAU,YAAnB,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAWwI,cAvFL,SAAC7B,GACnBgF,EAAgB,2BAAKR,GAAN,IAAoBxE,OAAQA,MAsFY4B,UAAY4C,EAAaxE,SACpE,cAAC,GAAD,CAAYwE,aAAeQ,EAAkBtM,kBAAoBA,EAAoB+L,WAvDlF,SAACtL,GAChBA,EAAEC,iBACF4L,EAAgB,2BAAKR,GAAN,IAAoB9H,MAAOrE,EAAOqE,MAAO4E,SAAUjJ,EAAOiJ,eAsD7D,cAAC,GAAD,CAAW6C,WAAaA,EAAaC,cAAgBA,EAAgBC,OAASA,EAASC,OAASA,EAASlC,YArFrG,SAACjN,EAAMuQ,GACvB,OAAQvQ,GACJ,IAAK,OACD,GAAIqP,EAAapD,QAAQzE,KAAK6B,OAAS,EAAG,CACtC,IAAMmH,EAAW,uBAAOnB,EAAapD,QAAQzE,MAA5B,CAAkC+I,IACnDV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BzE,KAAMgJ,OAC7ER,QACG,CACH,IAAMQ,EAAc,CAACD,GACrBV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BzE,KAAMgJ,OAC7ER,IAEJ,MACJ,IAAK,QACD,GAAIX,EAAapD,QAAQC,MAAM7C,OAAS,EAAG,CACvC,IAAMmH,EAAW,uBAAOnB,EAAapD,QAAQC,OAA5B,CAAmCqE,IACpDV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BC,MAAOsE,OAC9ER,QACG,CACH,IAAMQ,EAAc,CAACD,GACrBV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BC,MAAOsE,OAC9ER,YAmEJ,sBAAK9L,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,gCAEQmL,EAAa9H,OAAS,6BAAM8H,EAAa9H,QAGzC8H,EAAalD,UAAY,6BAAMkD,EAAalD,gBAIxD,uBAEIkD,EAAapD,QAAQzE,KAAK6B,OAAS,GAAKgG,EAAapD,QAAQzE,KAAK8B,KAAI,SAAA9B,GAAI,OACtE,gCACI,qBAAK8E,wBAA0B9E,EAAK+E,aAEpC,wBAAQrI,UAAU,cAAcuB,QAAU,kBAAM2K,EAAW,OAAQ5I,EAAKb,MAAxE,sBAHOa,EAAKb,QASpB0I,EAAapD,QAAQC,MAAM7C,OAAS,GAAKgG,EAAapD,QAAQC,MAAM5C,KAAI,SAAA4C,GAAK,OACzE,gCACI,iCACI,qBAAK3G,IAAM2G,EAAMA,MAAQ1G,IAAI,OAEjC,wBAAQtB,UAAU,cAAcuB,QAAU,kBAAM2K,EAAW,QAASlE,EAAMvF,MAA1E,sBAJOuF,EAAMvF,kBCmB9B8J,GA9JQ,WACnB,IAAI1F,EAAUC,uBACVwE,EAAS3D,uBACPqD,EAAS7G,mBAEf,EAAsCtF,IAA9BG,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,kBAChB,EAA4BN,qBAA5B,mBAAOkM,EAAP,KAAeM,EAAf,KAEA,EAAoCxM,mBAAS,WAA7C,mBAAO+L,EAAP,KAAmBC,EAAnB,KACA,EAAwChM,mBAAS,CAAEsE,MAAO,gBAAc4E,SAAU,GAAIF,QAAS,CAAEyD,OAAQ,GAAIxD,MAAO,GAAI1E,KAAM,GAAImI,MAAO,GAAIC,QAAS,MAAtJ,mBAAOP,EAAP,KAAqBQ,EAArB,KAKAvH,qBAAU,WACNmH,EAAUD,EAAO5D,QACjBkE,EAAgBN,EAAO5D,UAExB,CAAC4D,EAAO5D,SAIX,IAAMkE,EAAe,uCAAG,WAAOnO,GAAP,eAAAL,EAAA,sEACMjC,EAAYsC,GADlB,OACdoO,EADc,OAEpBF,EAAgBE,GAFI,2CAAH,sDA8CfC,EAAe,WACjBd,EAAO3G,QAAQ0H,cAAgB,EAC/BhB,EAAc,YASZ1D,EAAgB,uCAAG,WAAO5J,GAAP,SAAAL,EAAA,sEACf4I,EAAWvI,GADI,OAErBoJ,EAAQmF,SAFa,2CAAH,sDAKhBC,EAAgB,uCAAG,WAAOxO,EAAIsK,GAAX,SAAA3K,EAAA,sEACf0I,EAAWrI,EAAIsK,GADA,OAErBlB,EAAQmF,SAFa,2CAAH,wDAKhBE,EAAU,uCAAG,WAAOpQ,EAAM2B,GAAb,SAAAL,EAAA,2DACPtB,EADO,OAEN,SAFM,OAMN,UANM,uCAGDsN,GAAW3L,GAHV,cAIPkO,GAAgB,SAAAQ,GAAS,kCAAUA,GAAV,IAAqBpE,QAAQ,2BAAMoE,EAAUpE,SAAjB,IAA0BzE,KAAM6I,EAAUpE,QAAQzE,KAAK8I,QAAO,SAAA9I,GAAI,OAAIA,EAAKb,MAAQhF,YAJjI,4CAODmL,GAAYnL,GAPX,cAQPkO,GAAgB,SAAAQ,GAAS,kCAAUA,GAAV,IAAqBpE,QAAQ,2BAAMoE,EAAUpE,SAAjB,IAA0BC,MAAOmE,EAAUpE,QAAQC,MAAMoE,QAAO,SAAApE,GAAK,OAAIA,EAAMvF,MAAQhF,YARrI,qGAAH,wDAgBhB,OACI,0BAASA,GAAG,mBAAZ,UACI,0BAASuC,UAAU,iBAAnB,UACI,mDAAuBmL,EAAa9H,SACpC,wBAAQrD,UAAU,wBAAwBuB,QAAU,kBAAM8F,EAAiB4D,IAA3E,4BACA,wBAAQjL,UAAU,oBAAoBuB,QAAU,kBAAM0K,EAAiBhB,EAAQE,IAA/E,6BACA,wBAAQnL,UAAU,cAAcuB,QAAU,WAnClDsF,EAAQmF,UAmCA,sBAEJ,0BAAShM,UAAU,YAAnB,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,GAAD,CAAWwI,cAvFL,SAAC7B,GACnBgF,EAAgB,2BAAKR,GAAN,IAAoBxE,OAAQA,MAsFY4B,UAAY4C,EAAaxE,SACpE,cAAC,GAAD,CAAYwE,aAAeQ,EAAkBtM,kBAAoBA,EAAoB+L,WAvDlF,SAACtL,GAChBA,EAAEC,iBACF4L,EAAgB,2BAAKR,GAAN,IAAoB9H,MAAOrE,EAAOqE,MAAO4E,SAAUjJ,EAAOiJ,eAsD7D,cAAC,GAAD,CAAW6C,WAAaA,EAAaC,cAAgBA,EAAgBC,OAASA,EAASC,OAASA,EAASlC,YArFrG,SAACjN,EAAMuQ,GACvB,OAAQvQ,GACJ,IAAK,OACD,GAAIqP,EAAapD,QAAQzE,KAAK6B,OAAS,EAAG,CACtC,IAAMmH,EAAW,uBAAOnB,EAAapD,QAAQzE,MAA5B,CAAkC+I,IACnDV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BzE,KAAMgJ,OAC7ER,QACG,CACH,IAAMQ,EAAc,CAACD,GACrBV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BzE,KAAMgJ,OAC7ER,IAEJ,MACJ,IAAK,QACD,GAAIX,EAAapD,QAAQC,MAAM7C,OAAS,EAAG,CACvC,IAAMmH,EAAW,uBAAOnB,EAAapD,QAAQC,OAA5B,CAAmCqE,IACpDV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BC,MAAOsE,OAC9ER,QACG,CACH,IAAMQ,EAAc,CAACD,GACrBV,EAAgB,2BAAKR,GAAN,IAAoBpD,QAAQ,2BAAMoD,EAAapD,SAApB,IAA6BC,MAAOsE,OAC9ER,YAkEJ,sBAAK9L,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,gCAEQmL,EAAa9H,OAAS,6BAAM8H,EAAa9H,QAGzC8H,EAAalD,UAAY,6BAAMkD,EAAalD,gBAIxD,uBAEIkD,EAAapD,QAAQzE,KAAK6B,OAAS,GAAKgG,EAAapD,QAAQzE,KAAK8B,KAAI,SAAA9B,GAAI,OACtE,gCACI,qBAAK8E,wBAA0B9E,EAAK+E,aAEpC,wBAAQrI,UAAU,cAAcuB,QAAU,kBAAM2K,EAAW,OAAQ5I,EAAKb,MAAxE,sBAHOa,EAAKb,QASpB0I,EAAapD,QAAQC,MAAM7C,OAAS,GAAKgG,EAAapD,QAAQC,MAAM5C,KAAI,SAAA4C,GAAK,OACzE,gCACI,iCACI,qBAAK3G,IAAM2G,EAAMA,MAAQ1G,IAAI,OAEjC,wBAAQtB,UAAU,cAAcuB,QAAU,kBAAM2K,EAAW,QAASlE,EAAMvF,MAA1E,sBAJOuF,EAAMvF,kBC9JhCnH,GAAU,uCAAG,WAAOkR,GAAP,iBAAApP,EAAA,sEACNP,EAAc,YAAa2P,EAAS,QAD9B,cACnBnP,EADmB,gBAENA,EAAKC,OAFC,cAEnBZ,EAFmB,yBAGlBA,EAAK8P,SAHa,2CAAH,sDAKVC,GAAa,uCAAG,WAAOD,EAAS/O,GAAhB,iBAAAL,EAAA,sEACtBP,EAAc,YAAD,OAAaY,GAAM+O,EAAS,OADnB,uBAETrQ,EAAc,YAFL,cAEtBkB,EAFsB,gBAGTA,EAAKC,OAHI,cAGtBZ,EAHsB,yBAIrBA,EAAKqI,UAJgB,2CAAH,wDAMbtJ,GAAa,uCAAG,WAAOgC,GAAP,iBAAAL,EAAA,sEACtBP,EAAc,YAAD,OAAaY,GAAM,GAAI,UADd,uBAETtB,EAAc,YAFL,cAEtBkB,EAFsB,gBAGTA,EAAKC,OAHI,cAGtBZ,EAHsB,yBAIrBA,EAAKqI,UAJgB,2CAAH,sDCVb2H,GAAmBC,IAAMC,MAAK,YAA6G,IAA1GnM,EAAyG,EAAzGA,UAAWC,EAA8F,EAA9FA,YAAaC,EAAiF,EAAjFA,UAAWC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,WAAoC,IAAxBC,iBAAwB,SACtJ,EAAwBjC,oBAAS,GAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAC5BE,EAAa,kBAAMF,GAAQ,IAEjC,OACC,qCACEJ,EACA,sBAAKd,UAAU,aAAf,UACEgB,EACA,gCACC,8BAAIJ,EAAJ,QAEA,iCACC,qBAAKS,IAAKP,EAAWQ,IAAKb,SAI5B,8BACEG,EADF,KACc,iCAASE,OAGxB,gCACC,wBAAQd,UAAU,wBAAwBuB,QAAS,kBAAMb,EAAYD,IAArE,oBAGA,wBAAQT,UAAU,cAAcuB,QAASH,EAAzC,0BAMF,sBAAKpB,UAAU,aAAf,UACC,8BACEY,EADF,KACc,iDAEd,wBAAQZ,UAAU,cAAcuB,QAASH,EAAzC,0BAMF,eAACI,EAAA,EAAD,CAAOxB,UAAU,YAAYiB,KAAMA,EAAMQ,OAAQN,EAAjD,UACC,cAACK,EAAA,EAAME,OAAP,UACC,cAACF,EAAA,EAAMG,MAAP,UAAcb,MAEf,cAACU,EAAA,EAAMI,KAAP,UACC,uBAAM5B,UAAU,YAAYC,SAAUc,EAAtC,UACC,uBAAOrD,KAAM+C,EAAW3E,KAAM6E,EAAWT,SAAUW,EAAYV,YAAaW,IAC5E,wBAAQd,UAAU,SAASlE,KAAK,SAASyF,QAASJ,EAAlD,0BAKF,cAACK,EAAA,EAAMK,OAAP,UACC,wBAAQ7B,UAAU,SAASuB,QAASJ,EAApC,+BCvDC0L,GAAqB,SAArBA,EAAsB,GAA0C,IAAxCvD,EAAuC,EAAvCA,SAAUwD,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACpD,EAA0BhO,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcgK,EAAd,KACMC,EAAWrF,iBAAO,MA2BxB,OALAC,qBAAU,WACTkF,EAAS/J,GACTwN,EArBO,CAAEnC,OAqBYrL,MACnB,CAACA,EAAO+J,EAAUyD,IAGpB,gCACC,qBAAK/M,UAAU,cAAf,SACC,cAAC,KAAD,CAAYyJ,IAAMD,EAAWE,QAxBhB,CACfC,QAAS,CACRC,UAAW,CACV,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAAEoD,KAAM,KACT,CAAC,CAAE,MAAS,CAAC,UAAW,YAAc,CAAE,WAAc,CAAC,UAAW,aAClE,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE/C,KAAM,WAAa,CAAEA,KAAM,UAAY,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OACtE,CAAC,UAGHE,UAAW,CACVC,aAAa,IAYqCC,QAAUuC,EAAmBvC,QAAUC,MAAM,OAAOhL,MAAQA,EAAQW,SAAWqJ,MAEjI,sBAAMtJ,SAAW6M,EAAjB,SACC,wBAAQhR,KAAK,SAASkE,UAAU,wBAAhC,iCAQJ6M,GAAmBvC,QAAU,CAAC,SAAU,OAAQ,SAAU,YAAa,SAAU,aAAc,OAAQ,SAAU,SAAU,OAAQ,QAAS,QAAS,SAAU,cAEhJuC,UCnCFI,GAAgB,WAC5B,IAAQ1I,EAAS3E,qBAAWtF,GAApBiK,KACR,EAAuC3E,qBAAWiF,GAA1CqI,EAAR,EAAQA,iBAAkBnI,EAA1B,EAA0BA,SAClBtH,EAAOkK,sBAAPlK,GACR,EAAmEoB,IAA3DG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWI,EAA3B,EAA2BA,kBAAmBG,EAA9C,EAA8CA,iBACtC6D,EAAkGrE,EAAlGqE,MAAOC,EAA2FtE,EAA3FsE,KAAM+E,EAAqFrJ,EAArFqJ,WAAYJ,EAAyEjJ,EAAzEiJ,SAAekF,EAA0DnO,EAA/DyD,IAAgB2K,EAA+CpO,EAA/CoO,YAAa1B,EAAkC1M,EAAlC0M,QAAS2B,EAAyBrO,EAAzBqO,SAAUC,EAAetO,EAAfsO,WACrFzG,EAAUC,uBACZyG,EAAcpJ,mBAClB,EAAgCpF,qBAAhC,mBAAOyO,EAAP,KAAiBC,EAAjB,KACA,EAA0B1O,qBAA1B,mBAAO0L,EAAP,KAAcnB,EAAd,KACA,EAA4BvK,qBAA5B,mBAAO2O,EAAP,KAAeX,EAAf,KAWA3I,qBAAU,WACLW,EAASI,OAAS,IACrBoI,EAAYlJ,QAAUU,EAAS4I,MAAK,SAACC,GAAD,OAAUA,EAAKnL,MAAQhF,KAC3DwB,EAAUsO,EAAYlJ,YAErB,CAAC5G,EAAIsH,EAAU9F,IAElB,IAAM4O,EAAa,SAACC,GACFC,SAASC,eAAeF,GAChCvO,MAAQ,IAoCZ0O,EAAmB,uCAAG,iCAAA7Q,EAAA,6DAASkC,EAAT,EAASA,OAC9BnB,EAAOmB,EAAOG,MAAM,GADC,SAETvB,EAAWC,GAFF,OAErB5B,EAFqB,OAI3BkR,EAAYlR,GAJe,2CAAH,sDAiEnB0G,EAAY,uCAAG,4BAAA7F,EAAA,6DACpByJ,EAAQO,KAAK,WADO,SAEO3L,GAAcgC,GAFrB,OAEdyQ,EAFc,OAGpBhB,EAAiB,CAAEpR,KAAMrB,EAAMgB,cAAeM,QAASmS,IAHnC,2CAAH,qDAMZxN,EAAW,uCAAG,WAAOwC,GAAP,SAAA9F,EAAA,sDACnB6B,EAAU,2BACND,GADK,kBAEPkE,EAAW,MAHM,2CAAH,sDAOXC,EAAe,SAACrD,GACrBA,EAAEC,kBAGGqD,EAAW,uCAAG,4BAAAhG,EAAA,sEACUqP,GAAczN,EAAQmO,GADhC,QACbgB,EADa,SAKlBrQ,IAAKC,KAAK,cAAY,iCAAkC,WACxDmP,EAAiB,CAAEpR,KAAMrB,EAAMe,cAAeO,QAASoS,IACvDtH,EAAQO,KAAK,YAJbtJ,IAAKC,KAAK,aAAW,4CAA0C,SAH7C,2CAAH,qDAWjB,OACC,mCACC,0BAASiC,UAAU,iBAAnB,UACC,6CACS,sCAAQhB,QAAR,IAAQA,OAAR,EAAQA,EAAQsG,iBAGzB,wBAAQtF,UAAU,cAAcuB,QAAU6B,EAA1C,6BAIiB,kBAAfmB,EAAKrH,OACN,wBAAQ8C,UAAU,wBAAwBuB,QAAU0B,EAApD,qCAKEI,GAAmB,KAAVA,IACX,cAACqJ,GAAD,CAAkBjM,UAAY,QAAUC,YAAcA,EAAcC,UAAU,OAAOC,UAAY,YAAWC,WAAaxB,EAAoByB,UAAS,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAQqE,MAAQtC,WAAaoC,IAErL8E,GACD,cAACyE,GAAD,CACCjM,UAAY,WACZC,YAAcA,EACdC,UAAU,OACVC,UAAY,eACZC,WAAaxB,EACbyB,UAAS,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAQiJ,SACpBlH,WAAaoC,IAGbiK,GACD,cAACV,GAAD,CACC1L,WAAY,EACZP,UAAY,cACZC,YAAcA,EACdC,UAAU,OACVC,UAAY,mBACZC,WAAarB,EACbsB,UAAS,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAQoO,YACpBrM,WAAaoC,KAIN,OAAPuI,QAAO,IAAPA,OAAA,EAAAA,EAASvG,QAAS,GACnB,sBAAKnF,UAAU,eAAf,UACC,qBAAKA,UAAU,UAAf,gBACG0L,QADH,IACGA,OADH,EACGA,EAAStG,KAAI,SAACgJ,EAASjG,GAAV,OACd,yBAAQnI,UAAU,eAAlB,UACC,qBAAKqB,IAAM+M,EAAU9M,IAAI,KACzB,cAAC,IAAD,CAAetB,UAAU,aAAauB,QAAU,kBAzHlC,SAAC4G,GACtB,IAAMkG,EAAW,aAAO3C,GACxB2C,EAAYC,OAAOnG,EAAK,GACxBlJ,EAAU,2BACND,GADK,IAER0M,QAAS2C,KAoHmDE,CAAcpG,QAF9BA,QAMzC,sBAAKnI,UAAU,oBAAf,UACC,uBAAOA,UAAU,aAAalE,KAAK,OAAOoE,SAAW+N,EAAsB9N,YAAc,iBAAgBzC,KAAK,YAC9G,wBAAQ6D,QA9IW,SAACzB,GACzBA,EAAEC,iBACG2L,GAKM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAS8C,SAAShB,KAC7BvO,EAAU,2BACND,GADK,IAER0M,QAAQ,GAAD,oBAAMA,GAAN,CAAe8B,OAPvBvO,EAAU,2BACND,GADK,IAER0M,QAAS,CAAC8B,OAyI8BxN,UAAU,cAA/C,8BAOO,OAARqN,QAAQ,IAARA,OAAA,EAAAA,EAAUlI,QAAS,GACpB,sBAAKnF,UAAU,gBAAf,UACC,qBAAKA,UAAU,WAAf,gBACGqN,QADH,IACGA,OADH,EACGA,EAAUjI,KAAI,SAACqJ,EAAItG,GAAL,OACf,sBAAKnI,UAAU,YAAf,UACEyO,EACD,cAAC,IAAD,CAAelN,QAAU,kBAlMX,SAAC4G,GACtB,IAAMuG,EAAQ,aAAOrB,GACrBqB,EAASJ,OAAOnG,EAAK,GACrBlJ,EAAU,2BACND,GADK,IAERqO,SAAUqB,KA6L2BC,CAAcxG,QAFbsG,QAMnC,sBAAKzO,UAAU,qBAAf,UACC,uBAAOlE,KAAK,OAAO2B,GAAG,oBAAoByC,SA9LpB,SAACJ,GAC5B2N,EAAY3N,EAAER,OAAOC,QA6L2DY,YAAc,8BAA0BzC,KAAK,aACxH,wBAAQ6D,QA3LW,SAACzB,GACzBA,EAAEC,iBACGsN,GAMM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAUmB,SAAShB,MAC9BvO,EAAU,2BACND,GADK,IAERqO,SAAS,GAAD,oBAAMA,GAAN,CAAgBG,OAEzBK,EAAW,uBAVX5O,EAAU,2BACND,GADK,IAERqO,SAAU,CAACG,MAEZK,EAAW,sBAQZA,EAAW,sBA4K+B7N,UAAU,cAA/C,8BAMS,OAAVsN,QAAU,IAAVA,OAAA,EAAAA,EAAYnI,QAAS,GACtB,sBAAKnF,UAAU,gBAAf,UACC,qBAAKA,UAAU,WAAf,gBACGsN,QADH,IACGA,OADH,EACGA,EAAYlI,KAAI,SAACwJ,EAAKzG,GAAN,OACjB,sBAAKnI,UAAU,YAAf,UACE4O,EACD,cAAC,IAAD,CAAerN,QAAU,kBApJT,SAAC4G,GACxB,IAAM0G,EAAS,aAAOvB,GACtBuB,EAAUP,OAAOnG,EAAK,GACtBlJ,EAAU,2BACND,GADK,IAERsO,WAAYuB,KA+IyBC,CAAgB3G,QAFfyG,QAMnC,sBAAK5O,UAAU,qBAAf,UACC,uBAAOlE,KAAK,OAAO2B,GAAG,kBAAkByC,SAhJhB,SAACJ,GAC9B2N,EAAY3N,EAAER,OAAOC,QA+I2DY,YAAc,kBAAiBzC,KAAK,eAC/G,wBAAQ6D,QA7Ia,SAACzB,GAC3BA,EAAEC,iBACGuN,GAMM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAYkB,SAAShB,MAChCvO,EAAU,2BACND,GADK,IAERsO,WAAW,GAAD,oBAAMA,GAAN,CAAkBE,OAE7BK,EAAW,qBAVX5O,EAAU,2BACND,GADK,IAERsO,WAAY,CAACE,MAEdK,EAAW,oBAQZA,EAAW,oBA8HiC7N,UAAU,cAAjD,6BAMDsD,GACD,qCACC,0BAAStD,UAAU,+BAAnB,UACC,uCACA,qBAAKoI,wBAA0BC,OAEhC,cAAC,GAAD,CAAoBiB,SAAWA,EAAWwD,YA5P3B,SAAChN,GACpBA,EAAEC,iBACFd,EAAU,2BACND,GADK,IAERsE,KAAMmH,EACNpC,WAAYqF,MAuP6DX,UAAYA,aC5Q3EgC,GAAa,SAAC,GAAqB,IAAnB5N,EAAkB,EAAlBA,YACpB+L,EAAqBtN,qBAAWiF,GAAhCqI,iBACR,EAAgCnO,qBAAhC,mBAAOyO,EAAP,KAAiBC,EAAjB,KACA,EAA0B1O,qBAA1B,mBAAO0L,EAAP,KAAcnB,EAAd,KACA,EAA4BvK,qBAA5B,mBAAO2O,EAAP,KAAeX,EAAf,KAEA,EAAmElO,IAA3DG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWI,EAA3B,EAA2BA,kBAAmBG,EAA9C,EAA8CA,iBACtC4N,EAA+CpO,EAA/CoO,YAAa1B,EAAkC1M,EAAlC0M,QAAS2B,EAAyBrO,EAAzBqO,SAAUC,EAAetO,EAAfsO,WAWlCO,EAAa,SAACC,GACFC,SAASC,eAAeF,GAChCvO,MAAQ,IAiEZ0O,EAAmB,uCAAG,iCAAA7Q,EAAA,6DAASkC,EAAT,EAASA,OAC9BnB,EAAOmB,EAAOG,MAAM,GADC,SAETvB,EAAWC,GAFF,OAErB5B,EAFqB,OAI3BkR,EAAYlR,GAJe,2CAAH,sDA+BnB4G,EAAY,uCAAG,WAAOrD,GAAP,eAAA1C,EAAA,6DACpB0C,EAAEC,iBADkB,SAEKzE,GAAW0D,GAFhB,QAEdgQ,EAFc,SAMnBlR,IAAKC,KAAK,cAAY,iCAAkC,WACxDmP,EAAiB,CAAEpR,KAAMrB,EAAMa,WAAYS,QAASiT,KAHpDlR,IAAKC,KAAK,aAAW,4CAA0C,SAKhEoD,IAToB,2CAAH,sDAYlB,OACC,qCACC,0BAASnB,UAAU,eAAnB,UACC,sBAAKA,UAAU,YAAf,UACC,0DAAgC,OAANhB,QAAM,IAANA,OAAA,EAAAA,EAAQiQ,cAAe,cAAC,IAAD,OACjD,yBAAQ/O,SAAWb,EAAoB3B,KAAK,cAAcwR,UAAQ,EAAlE,UACC,wBAAQ3P,MAAM,UAAUkJ,cAAY,EAApC,wBAGA,wBAAQlJ,MAAM,MAAd,uBACA,wBAAQA,MAAM,SAAd,sBACA,wBAAQA,MAAM,SAAd,uBAGD,+DAAqC,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQsG,cAAe,cAAC,IAAD,OACtD,uBAAOxJ,KAAK,OAAOoE,SAAWb,EAAoB3B,KAAK,cAAcyR,aAAa,MAAMhP,YAAY,0BAAuB+O,UAAQ,IAEnI,gDAAsB,OAANlQ,QAAM,IAANA,OAAA,EAAAA,EAAQqE,QAAS,cAAC,IAAD,OACjC,uBAAOvH,KAAK,OAAOoE,SAAWb,EAAoB8P,aAAa,MAAMzR,KAAK,QAAQyC,YAAY,YAAS+O,UAAQ,IAE/G,kDACA,uBAAOpT,KAAK,OAAOoE,SAAWb,EAAoB8P,aAAa,MAAMzR,KAAK,WAAWyC,YAAY,iBAEjG,qDACEiN,GACD,wBAAQpN,UAAU,eAAlB,SACC,qBAAKqB,IAAM+L,EAAc9L,IAAI,OAI/B,uBAAOtB,UAAU,aAAalE,KAAK,OAAOoE,SAAWV,EAAmB9B,KAAK,gBAC7E,uBAAOsG,QAAQ,GAAf,uCACA,qBAAKhE,UAAU,UAAf,gBACG0L,QADH,IACGA,OADH,EACGA,EAAStG,KAAI,SAACgJ,EAASjG,GAAV,OACd,yBAAQnI,UAAU,eAAlB,UACC,qBAAKqB,IAAM+M,EAAU9M,IAAI,KACzB,cAAC,IAAD,CAAetB,UAAU,aAAauB,QAAU,kBAzDjC,SAAC4G,GACtB,IAAMkG,EAAW,aAAO3C,GACxB2C,EAAYC,OAAOnG,EAAK,GACxBlJ,EAAU,2BACND,GADK,IAER0M,QAAS2C,KAoDkDE,CAAcpG,QAF9BA,QAOzC,sBAAKnI,UAAU,oBAAf,UACC,uBAAOA,UAAU,aAAalE,KAAK,OAAOoE,SAAW+N,EAAsB9N,YAAc,iBAAgBzC,KAAK,YAC9G,wBAAQ6D,QA/EY,SAACzB,GACzBA,EAAEC,iBACG2L,GAKM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAS8C,SAAShB,KAC7BvO,EAAU,2BACND,GADK,IAER0M,QAAQ,GAAD,oBAAMA,GAAN,CAAe8B,OAPvBvO,EAAU,2BACND,GADK,IAER0M,QAAS,CAAC8B,OA0E6BxN,UAAU,oBAA/C,6BAMF,sBAAKA,UAAU,aAAf,UACC,2CACA,cAAC,GAAD,CAAoBsJ,SAAWA,EAAWwD,YA1K1B,SAAChN,GACpBA,EAAEC,iBACFd,EAAU,2BACND,GADK,IAERsE,KAAMmH,EACNpC,WAAYqF,MAqK4DX,UAAYA,IAElF,uBAAO/I,QAAQ,GAAf,gCACA,qBAAKhE,UAAU,WAAf,gBACGqN,QADH,IACGA,OADH,EACGA,EAAUjI,KAAI,SAACqJ,EAAItG,GAAL,OACf,sBAAKnI,UAAU,YAAf,UACEyO,EACD,cAAC,IAAD,CAAelN,QAAU,kBApIV,SAAC4G,GACtB,IAAMuG,EAAQ,aAAOrB,GACrBqB,EAASJ,OAAOnG,EAAK,GACrBlJ,EAAU,2BACND,GADK,IAERqO,SAAUqB,KA+H0BC,CAAcxG,QAFbsG,QAMnC,sBAAKzO,UAAU,qBAAf,UACC,uBAAOlE,KAAK,OAAO2B,GAAG,4BAA4ByC,SAhI3B,SAACJ,GAC5B2N,EAAY3N,EAAER,OAAOC,QA+HkEY,YAAc,8BAA0BzC,KAAK,aAChI,wBAAQ6D,QA7HY,SAACzB,GACzBA,EAAEC,iBACGsN,GAMM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAUmB,SAAShB,MAC9BvO,EAAU,2BACND,GADK,IAERqO,SAAS,GAAD,oBAAMA,GAAN,CAAgBG,OAEzBK,EAAW,+BAVX5O,EAAU,2BACND,GADK,IAERqO,SAAU,CAACG,MAEZK,EAAW,8BAQZA,EAAW,8BA8G8B7N,UAAU,oBAA/C,0BAKD,0DACA,qBAAKA,UAAU,WAAf,gBACGsN,QADH,IACGA,OADH,EACGA,EAAYlI,KAAI,SAACwJ,EAAKzG,GAAN,OACjB,sBAAKnI,UAAU,YAAf,UACE4O,EACD,cAAC,IAAD,CAAerN,QAAU,kBAnLR,SAAC4G,GACxB,IAAM0G,EAAS,aAAOvB,GACtBuB,EAAUP,OAAOnG,EAAK,GACtBlJ,EAAU,2BACND,GADK,IAERsO,WAAYuB,KA8KwBC,CAAgB3G,QAFfyG,QAMnC,sBAAK5O,UAAU,qBAAf,UACC,uBAAOlE,KAAK,OAAO2B,GAAG,0BAA0ByC,SA/KvB,SAACJ,GAC9B2N,EAAY3N,EAAER,OAAOC,QA8KkEY,YAAc,kBAAiBzC,KAAK,eACvH,wBAAQ6D,QA5Kc,SAACzB,GAC3BA,EAAEC,iBACGuN,GAMM,OAACA,QAAD,IAACA,OAAD,EAACA,EAAYkB,SAAShB,MAChCvO,EAAU,2BACND,GADK,IAERsO,WAAW,GAAD,oBAAMA,GAAN,CAAkBE,OAE7BK,EAAW,6BAVX5O,EAAU,2BACND,GADK,IAERsO,WAAY,CAACE,MAEdK,EAAW,4BAQZA,EAAW,4BA6JgC7N,UAAU,oBAAjD,gCAOH,sBAAMA,UAAU,eAAeC,SAAWkD,EAA1C,SACC,wBAAQnD,UAAU,cAAclE,KAAK,SAArC,iCChOSsT,GAAkB,WAAyB,IAAxBxT,EAAuB,uDAAf,GAAIC,EAAW,uCACtD,OAAQA,EAAOC,MACd,KAAKrB,EAAMc,YACV,OAAOM,EAAOE,QAEf,KAAKtB,EAAMa,WACV,MAAM,GAAN,oBAAWM,GAAX,CAAkBC,EAAOE,UAE1B,KAAKtB,EAAMgB,cACV,OAAOI,EAAOE,QAEf,KAAKtB,EAAMiB,WACV,OAAO,eAAKG,EAAOE,SAEpB,KAAKtB,EAAMe,cACV,OAAOK,EAAOE,QAEf,QACC,OAAOH,IC4FKyT,GAzFG,WACjB,IAAMnL,EAAYC,kBAAO,GACjBI,EAAS3E,qBAAWtF,GAApBiK,KACR,EAAmC+K,qBAAW9K,EAAgB,IAA9D,mBAAO1C,EAAP,KAAgBQ,EAAhB,KACA,EAAqCgN,qBAAWF,GAAiB,IAAjE,mBAAOrK,EAAP,KAAiBmI,EAAjB,KAEA9I,qBAAU,WACT,OAAO,WACNF,EAAUG,SAAU,MAItBD,qBAAU,WACLF,EAAUG,UACblI,EAAc,YACZoC,MAAK,SAAClC,GAAD,OAAUA,EAAKiB,UACpBiB,MAAK,SAAClC,GAAD,OAAU6Q,EAAiB,CAAEpR,KAAMrB,EAAMc,YAAaQ,QAASM,EAAK0I,cACzEtG,OAAM,SAACC,GAAD,OAAS,IAAI6Q,MAAM7Q,MAC3BvC,EAAc,aACZoC,MAAK,SAAClC,GAAD,OAAUA,EAAKiB,UACpBiB,MAAK,SAAClC,GAAD,OAAUiG,EAAgB,CAAExG,KAAMrB,EAAMK,WAAYiB,QAASM,EAAKyF,QAAQ,QAC/ErD,OAAM,SAACC,GAAD,OAAS,IAAI6Q,MAAM7Q,SAE1B,IAEH,MAAwBK,oBAAS,GAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAIlC,OACC,cAAC,IAAD,UACC,8BACGqD,EAAKzH,MACN,cAACsF,EAAeoN,SAAhB,CAAyBjQ,MAAQ,CAAEuC,UAASQ,mBAA5C,SACC,cAACuC,EAAe2K,SAAhB,CAAyBjQ,MAAQ,CAAEwF,WAAUmI,oBAA7C,SAEC,sBAAKlN,UAAU,sBAAf,UACC,cAAC,EAAD,CAAcoB,WAXF,kBAAMF,GAAQ,MAa1B,iCACC,eAAC,SAAD,WACC,cAAC,QAAD,CAAOuO,OAAK,EAACC,KAAK,UAAUC,UAAYrL,IACxC,cAAC,QAAD,CAAOmL,OAAK,EAACC,KAAK,kBAAkBC,UAAY1L,IAChD,cAAC,QAAD,CAAOwL,OAAK,EAACC,KAAK,eAAeC,UAAY/I,IAC7C,cAAC,QAAD,CAAO6I,OAAK,EAACC,KAAK,qCAAqCC,UAAYtE,KACnE,cAAC,QAAD,CAAOoE,OAAK,EAACC,KAAK,uBAAuBC,UAAYlI,KACrD,cAAC,QAAD,CAAOgI,OAAK,EAACC,KAAK,sCAAsCC,UAAYpD,KACpE,cAAC,QAAD,CAAOkD,OAAK,EAACC,KAAK,sBAAsBC,UAAY,SAACC,GAAD,OAAW,cAAC,GAAD,eAAoBA,OACnF,cAAC,WAAD,CAAUxP,GAAG,eAGd,eAACoB,EAAA,EAAD,CAAOqO,gBAAgB,cAAcC,UAAQ,EAAC9P,UAAU,YAAYiB,KAAOA,EAAOQ,OAASN,EAA3F,UACC,cAACK,EAAA,EAAME,OAAP,UACC,iEAED,cAACF,EAAA,EAAMI,KAAP,UACC,cAAC,GAAD,CAAYT,YAAcA,MAG3B,cAACK,EAAA,EAAMK,OAAP,UACC,wBAAQ7B,UAAU,wBAAwBuB,QAAUJ,EAApD,mCAUN,qCACC,cAAC,EAAD,IACA,uBAAMnB,UAAU,YAAhB,UACC,eAAC,SAAD,WACC,cAAC,QAAD,CAAOyP,OAAK,EAACC,KAAK,IAAIC,UAAYjQ,IAClC,cAAC,QAAD,CAAOgQ,KAAK,YAAYC,UAAYtP,IACpC,cAAC,WAAD,CAAUD,GAAG,SAEd,4DACA,gECzFD2P,GAAO,WACZ,OAAOpT,KAAKqT,MAAMjT,aAAaC,QAAQ,iBAAmB,CAAEhB,QAAQ,IA6BtDiU,GAzBH,WACX,IAAM/L,EAAYC,kBAAO,GACzB,EAAyBmL,qBAAW3T,EAAa,GAAIoU,IAArD,mBAAOxL,EAAP,KAAa5E,EAAb,KAcA,OAbAyE,qBAAU,WACT,OAAO,WACNF,EAAUG,SAAU,KAEnB,IAEHD,qBAAU,WACLF,EAAUG,SACbtH,aAAaY,QAAQ,cAAehB,KAAKC,UAAU2H,MAElD,CAACA,IAIH,mCACC,cAACjK,EAAYkV,SAAb,CAAsBjQ,MAAQ,CAAEgF,OAAM5E,YAAtC,SACC,cAAC,GAAD,SClCJuQ,IAASC,OAAO,cAAC,GAAD,IAASpC,SAASC,eAAe,U","file":"static/js/main.ffc51495.chunk.js","sourcesContent":["const { createContext } = require('react')\n\nexport const AuthContext = createContext()\n","export const types = {\n\tlogin: '[auth] login',\n\tsignup: '[auth] signup',\n\tlogout: '[auth] logout',\n\thasToken: '[auth] hastoken',\n\n\tgetCompany: '[company] getCompany',\n\taddCompany: '[company] addCompany',\n\tcompanyUpdate: '[company] companyUpdate',\n\tcompanyDelete: '[company] companyDelete',\n\n\tgetPosts: '[post] getPosts',\n\tgetThisPost: '[post] getThisPost',\n\taddPost: '[post] addPost',\n\tpostUpdate: '[post] postUpdate',\n\n\taddSection: '[Section] addSection',\n\tgetSections: '[Section] getSections',\n\tsectionUpdate: '[Section] sectionUpdate',\n\tdeleteSection: '[Section] deleteSection',\n\tupdateThis: '[Section] updateThis',\n}\n","import { types } from '../../types/types'\n\nexport const AuthReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.login:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.signup:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.hasToken:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.logout:\n\t\t\treturn {\n\t\t\t\tlogged: false,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tif (method === 'GET') {\n\t\treturn fetch(url)\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tconst token = localStorage.getItem('bratic-token') || ''\n\tif (method === 'GET') {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n","import { fetchSinToken } from '../helpers/fetch'\nimport Swal from 'sweetalert2'\n\nexport const startLogin = async (email, password) => {\n\tconst resp = await fetchSinToken('auth/login', { email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst loggedUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\tlogged: true,\n\t\t\ttoken: body.token,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(loggedUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn loggedUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const startSignup = async (name, email, password) => {\n\tconst resp = await fetchSinToken('auth/signup', { name, email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst signedupUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\ttoken: body.token,\n\t\t\tlogged: true,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(signedupUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn signedupUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\n","export const fileUpload = async (file) => {\n\tconst cloudUrl = 'https://api.cloudinary.com/v1_1/bratic-app/upload'\n\tconst formData = new FormData()\n\tformData.append('upload_preset', 'bratic-app')\n\tformData.append('file', file)\n\tformData.append('folder', process.env.REACT_APP_CLOUDINARY_FOLDER)\n\tlet url\n\n\tawait fetch(cloudUrl, { method: 'POST', body: formData })\n\t\t.then((data) => data.json())\n\t\t.then((data) => (url = data.secure_url))\n\t\t.catch((err) => console.log(err))\n\treturn url\n}\n","import { useState } from 'react'\nimport { fileUpload } from '../helpers/uploadFiles'\n\nconst useForm = (initialState = {}) => {\n\tconst [values, setValues] = useState(initialState)\n\tconst [loading, setLoading] = useState(false)\n\n\tconst resetForm = () => {\n\t\tsetValues(initialState)\n\t}\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t}\n\n\tconst handleFileChange = async ({ target }) => {\n\t\tsetLoading(true)\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tawait setValues({\n\t\t\t...values,\n\t\t\t[target.name]: url,\n\t\t})\n\t\tsetLoading(false)\n\t}\n\n\treturn { values, setValues, handleInputChange, handleFileChange, resetForm, loading }\n}\n\nexport default useForm\n","import React, { useContext } from 'react'\nimport { startLogin } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst LoginScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { email, password } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault()\n\t\tconst loggedUser = await startLogin(email, password)\n\n\t\tdispatch({ type: types.login, payload: loggedUser })\n\t}\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿No tienes cuenta? Crea una <Link to='/registro'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useContext } from 'react'\nimport Swal from 'sweetalert2'\nimport { startSignup } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst SignupScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { name, email, password, password2 } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleSignup = async (e) => {\n\t\te.preventDefault()\n\t\tif (password === password2) {\n\t\t\tconst signedupUser = await startSignup(name, email, password)\n\n\t\t\tdispatch({ type: types.signup, payload: signedupUser })\n\t\t} else {\n\t\t\tSwal.fire('Error', 'Las contraseñas deben coincidir', 'error')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleSignup}>\n\t\t\t\t\t<label>Nombre</label>\n\t\t\t\t\t<input type='text' onChange={handleInputChange} placeholder='Tu nombre' name='name' />\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<label>Repite Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Repite Contraseña' name='password2' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tRegistro\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿Ya estás registrado? Entra <Link to='/'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default SignupScreen\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroup = ({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{editLabel}: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={editValue} alt={nameValue} />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel}: <strong>{editValue}</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={() => deleteField(nameValue)}>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{editLabel}: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<Modal className='edit-modal my-modals' show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{editValue}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={submitEdit}>\n\t\t\t\t\t\t<input name={nameValue} type={inputType} onChange={editAction} placeholder={editValue} />\n\t\t\t\t\t\t<button className='my-btn' type='submit' onClick={handleClose}>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn' onClick={handleClose}>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../helpers/fetch'\n\nexport const addCompany = async (company) => {\n\tconst resp = await fetchConToken(`companies/`, company, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst companyCreated = body.company\n\t\treturn companyCreated\n\t}\n}\nexport const updateCompany = async (id, company) => {\n\tconst resp = await fetchConToken(`companies/${id}`, company, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedCompany = body.company\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\n\t\treturn updatedCompany\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deleteCompany = async (id) => {\n\tawait fetchConToken(`companies/${id}`, {}, 'DELETE')\n}\n","const { createContext } = require('react')\n\nexport const CompanyContext = createContext()\n","import React, { useContext } from 'react'\nimport { EditGroup } from './EditGroup'\nimport useForm from './../../hooks/useForm'\nimport { deleteCompany, updateCompany } from './../../actions/company.action'\nimport { types } from '../../types/types'\nimport { CompanyContext } from '../../reducers/CompanyContext'\nimport Swal from 'sweetalert2'\n\nexport const UpdateCompany = () => {\n\tconst { company, dispatchCompany } = useContext(CompanyContext)\n\n\tconst { name, phone, address, _id: id, mainEmail, mainLogo, secondaryLogo, linkedin, facebook, twitter, instagram } = company\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm(company)\n\n\tconst handleDelete = async () => {\n\t\tawait deleteCompany(id)\n\t\tdispatchCompany({ type: types.companyDelete })\n\t}\n\tconst askIfDelete = () => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, no habrá datos de empresa',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Empresa!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDelete()\n\t\t\t\tSwal.fire('¡Empresa borrada!', 'Esta empresa se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tconst payload = {\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t}\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t\tdispatchCompany({ type: types.updateCompany, payload })\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tdispatchCompany({ type: types.updateCompany, payload: values })\n\t}\n\n\tconst saveChanges = async () => {\n\t\tawait updateCompany(id, company)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Datos de empresa</h1>\n\t\t\t<button className='my-btn mini' onClick={saveChanges}>\n\t\t\t\tGuardar Cambios\n\t\t\t</button>\n\t\t\t<button className='my-btn secondary mini' onClick={askIfDelete}>\n\t\t\t\tBorrar esta empresa\n\t\t\t</button>\n\n\t\t\t<div className='editing'>\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'name'} inputType={'text'} editLabel={'Nombre de empresa'} editAction={handleInputChange} editValue={name} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'address'} inputType={'text'} editLabel={'Dirección'} editAction={handleInputChange} editValue={address} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'phone'} inputType={'text'} editLabel={'Teléfono principal'} editAction={handleInputChange} editValue={phone} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'mainEmail'} inputType={'email'} editLabel={'Email principal'} editAction={handleInputChange} editValue={mainEmail} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={deleteField}\n\t\t\t\t\tnameValue={'mainLogo'}\n\t\t\t\t\timageEdit={true}\n\t\t\t\t\tinputType={'file'}\n\t\t\t\t\teditLabel={'Logo Principal'}\n\t\t\t\t\teditAction={handleFileChange}\n\t\t\t\t\teditValue={mainLogo}\n\t\t\t\t\tsubmitEdit={handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={deleteField}\n\t\t\t\t\tnameValue={'secondaryLogo'}\n\t\t\t\t\timageEdit={true}\n\t\t\t\t\tinputType={'file'}\n\t\t\t\t\teditLabel={'Logo BN'}\n\t\t\t\t\teditAction={handleFileChange}\n\t\t\t\t\teditValue={secondaryLogo}\n\t\t\t\t\tsubmitEdit={handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'twitter'} inputType={'text'} editLabel={'Twitter Url'} editAction={handleInputChange} editValue={twitter} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'facebook'} inputType={'text'} editLabel={'Facebook url'} editAction={handleInputChange} editValue={facebook} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'instagram'} inputType={'text'} editLabel={'Instagram Url'} editAction={handleInputChange} editValue={instagram} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'linkedin'} inputType={'text'} editLabel={'Linkedin Url'} editAction={handleInputChange} editValue={linkedin} submitEdit={handleSubmit} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { addCompany } from './../../actions/company.action'\nimport useForm from '../../hooks/useForm'\n\nconst AddCompany = () => {\n\tconst { values, handleInputChange, handleFileChange } = useForm({})\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tawait addCompany(values)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<form className='add-form' onSubmit={handleSubmit}>\n\t\t\t\t<input type='text' name='name' placeholder='Nombre de la empresa' onChange={handleInputChange} />\n\t\t\t\t<input type='email' name='mainEmail' placeholder='Correo Principal' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='phone' placeholder='Teléfono principal' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='address' placeholder='Dirección' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='linkedin' placeholder='URL Linkedin' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='facebook' placeholder='URL Facebook' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='instagram' placeholder='URL Instagram' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='twitter' placeholder='URL Twitter' onChange={handleInputChange} />\n\t\t\t\t<div className='input-images'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='mainLogo'>Logo principal</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='mainLogo' id='mainLogo' placeholder='Logo Principal' onChange={handleFileChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='secondaryLogo'>Logo en BN</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='secondaryLogo' id='secondaryLogo' placeholder='Logo Secundario' onChange={handleFileChange} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tCrear empresa\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n","import React, { useEffect, useRef, useContext } from 'react'\nimport { UpdateCompany } from './company/UpdateCompany'\nimport AddCompany from './company/AddCompany'\nimport { CompanyContext } from '../reducers/CompanyContext'\n\nconst CompanyScreen = () => {\n\tconst isMounted = useRef(true)\n\tconst { company } = useContext(CompanyContext)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\treturn <>{company._id ? <UpdateCompany /> : <AddCompany />}</>\n}\n\nexport default CompanyScreen\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../reducers/auth/AuthContext'\n\nconst DashboardScreen = () => {\n\tconst { user } = useContext(AuthContext)\n\treturn (\n\t\t<section id=\"dashboard-screen\">\n\t\t\t<h3>¡Bienvenid@ { user.name }!</h3>\n\t\t</section>\n\t)\n}\n\nexport default DashboardScreen\n","import { types } from '../types/types'\n\nexport const CompanyReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getCompany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.addCompnany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.companyUpdate:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.deleteProperty:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.maquinasCategoriesUpdate:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaquinasCategories: action.payload,\n\t\t\t}\n\t\tcase types.companyDelete:\n\t\t\treturn {}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const { createContext } = require('react')\n\nexport const SectionContext = createContext()\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { types } from '../types/types'\nimport { CgArrowBottomLeftR, CgArrowTopRightR } from \"react-icons/cg\";\nimport { SectionContext } from '../reducers/sections/sectionsContext';\nimport { FaChevronDown } from 'react-icons/fa';\n\nexport const DashboardNav = ({ handleShow }) => {\n\tconst { dispatch, user } = useContext(AuthContext)\n\tconst [show, setShow] = useState(true)\n\tconst { sections } = useContext(SectionContext)\n\n\n\tconst handleLogout = async () => {\n\t\tawait dispatch({ type: types.logout })\n\t\tlocalStorage.removeItem('bratic-token')\n\t\tlocalStorage.removeItem('bratic-user')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tshow ? (\n\t\t\t\t\t<nav className='dash-nav open'>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"close-nav\">\n\t\t\t\t\t\t\t\t<CgArrowBottomLeftR className='close-icon' onClick={ () => setShow(false) } />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/bratic'>\n\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/bratic/empresa'>Datos de empresa</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Link to='/bratic/blog'>Blog</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='dropdown'>\n\t\t\t\t\t\t\t\t\t<p data-toggle='dropdown'>\n\t\t\t\t\t\t\t\t\t\tSecciones de la web <FaChevronDown />\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t{ sections.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t<ul className='dropdown-menu'>\n\t\t\t\t\t\t\t\t\t\t\t{sections.map((st) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={ st._id }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={ `/bratic/seccion/${st._id}` }>{ st.sectionName }</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t\t\t\t\t<button className='my-btn third mini' onClick={ handleShow }>\n\t\t\t\t\t\t\t\t\t\tAñadir Sección\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<button className='my-btn secondary mini' onClick={ handleLogout }>Cerrar Sesión</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</nav>\n\t\t\t\t) : (\n\t\t\t\t\t<nav className='dash-nav'>\n\t\t\t\t\t\t<div className=\"close-nav\">\n\t\t\t\t\t\t\t<CgArrowTopRightR className='close-icon' onClick={ () => setShow(true) } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</nav>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n\treturn (\n\t\t<nav className='login-nav'>\n\t\t\t<div className='container'>\n\t\t\t\t<figure>\n\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t</figure>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/'>Entrar</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/registro'>Registro</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getUserPosts = async (user) => {\n\tconst resp = await fetchSinToken(`posts/${user}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst userPosts = body.posts\n\t\treturn userPosts\n\t}\n}\nexport const getThisPost = async (id) => {\n\tconst resp = await fetchSinToken(`posts/post/${id}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst thePost = body.post\n\t\treturn thePost\n\t}\n}\n\nexport const addPost = async (post) => {\n\tconst resp = await fetchConToken(`posts/`, post, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst postCreated = body.post\n\t\treturn postCreated\n\t}\n}\n\nexport const updatePost = async (id, post) => {\n\tconst resp = await fetchConToken(`posts/${id}`, post, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedPost = body.post\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\treturn updatedPost\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deletePost = async (id) => {\n\tawait fetchConToken(`posts/${id}`, {}, 'DELETE')\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst PostElement = ({ askIfDelete, post }) => {\n\tconst [date, setDate] = useState()\n\tconst [updateDate, setUpdateDate] = useState()\n\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.createdAt).toLocaleString())\n\t\tsetUpdateDate(new Date(post.updatedAt).toLocaleString())\n\t}, [date, setDate, post])\n\n\treturn (\n\t\t<>\n\t\t\t<article className='each-post-prev'>\n\t\t\t\t<div className='info'>\n\t\t\t\t\t<h5>{ post.title }</h5>\n\t\t\t\t\t{ date && <p>Fecha de la publicación: <strong>{ date }</strong></p> }\n\t\t\t\t\t{ updateDate && <p>Fecha de la última edición: <strong>{ updateDate }</strong></p> }\n\t\t\t\t\t<p className=\"status\">Estado de la publicación: <strong>{ post.status }</strong></p>\n\t\t\t\t</div>\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post._id) }>\n\t\t\t\t\t\tBorrar Entrada\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post._id}` }>\n\t\t\t\t\t\tEditar Entrada\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='my-btn mini ' to={ `/bratic/blog/${post._id}` }>\n\t\t\t\t\t\tVer Muestra\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</article>\n\t\t</>\n\t)\n}\n\nexport default PostElement\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nimport { addPost, deletePost, getUserPosts } from '../actions/posts.action'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport PostElement from './posts/content/_ui/PostElement'\n\nconst PostsScreen = () => {\n\tlet history = useHistory();\n\tconst isMounted = useRef(true)\n\tconst [posts, setPosts] = useState()\n\tconst { user } = useContext(AuthContext)\n\n\n\tconst allMyPosts = async () => {\n\t\tconst posts = await getUserPosts(user.id)\n\t\tsetPosts(posts)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tallMyPosts()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst handleAdd = async () => {\n\t\tconst newPost = await addPost({ title: 'Entrada Sin Título', author: user.id })\n\t\thistory.push(`/bratic/blog/nueva-entrada/${newPost._id}`)\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\tawait allMyPosts()\n\t}\n\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\t// Swal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"posts-screen\">\n\t\t\t<h2>Entradas del Blog</h2>\n\t\t\t<p>Estás viendo las entradas del blog que <strong className=\"user\">{ user.name }</strong> (tú, señor@) ha creado</p>\n\t\t\t<button className=\"my-btn primary mini\" onClick={ handleAdd }>Añadir entrada del blog</button>\n\n\t\t\t{posts?.length > 0 ? (\n\t\t\t\t<section className='all-posts'>\n\t\t\t\t\t{posts?.map((elm) => (\n\t\t\t\t\t\t<PostElement askIfDelete={ askIfDelete } post={ elm } key={ elm._id } />\n\t\t\t\t\t)) }\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<article className='empty-posts'>No tienes entradas del blog</article>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default PostsScreen\n","\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\n\nimport { deletePost, getThisPost } from '../../actions/posts.action'\n//Swiper\nimport Swal from 'sweetalert2'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/es' // load on demand\n\ndayjs.locale('es')\nconst Post = () => {\n\tconst isMounted = useRef(true)\n\tconst { postID } = useParams()\n\tlet history = useHistory();\n\n\tconst [post, setPost] = useState()\n\n\tconst getPost = async () => {\n\t\tconst thePost = await getThisPost(postID)\n\t\tsetPost(thePost)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tgetPost()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\tSwal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\thistory.push('/bratic/blog')\n\t}\n\n\n\treturn (\n\t\t<section id=\"post-preview\">\n\t\t\t<h1>{ post?.title }</h1>\n\t\t\t{ post?.createdAt && <small>Publicada el { dayjs(post?.createdAt).format('DD/MM/YYYY') }</small> }\n\t\t\t{ post?.content?.image.length > 0 && (\n\t\t\t\t<figure className=\"main-image\">\n\t\t\t\t\t<img key={ post?.content.image[0]._id } src={ post?.content.image[0].image } alt='' />\n\t\t\t\t</figure>\n\t\t\t) }\n\t\t\t<div className=\"container\">\n\t\t\t\t{ post?.subtitle && <h2>{ post?.subtitle }</h2> }\n\t\t\t\t{ post?.content?.text?.length > 0 && (\n\t\t\t\t\tpost?.content?.text?.map((txt, idx) => (\n\t\t\t\t\t\t<div className='post-text' key={ txt._id } dangerouslySetInnerHTML={ txt.parsedText }></div>\n\t\t\t\t\t))\n\t\t\t\t) }\n\n\t\t\t</div>\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post?._id) }>\n\t\t\t\t\tBorrar\n\t\t\t\t</button>\n\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post?._id}` }>\n\t\t\t\t\tEditar\n\t\t\t\t</Link>\n\t\t\t\t<Link className='my-btn mini thirsd' to={ `/bratic/blog/` }>\n\t\t\t\t\tVolver al blog\n\t\t\t\t</Link>\n\n\t\t\t</div>\n\n\t\t</section>\n\t)\n}\n\nexport default Post\n","import React from 'react'\n\nconst PostState = ({ postState, savePostState }) => {\n\n\n    const selectThis = ({ target }) => {\n        savePostState(target.value)\n    }\n\n    return (\n        <select onChange={ selectThis }>\n            <option value='default' defaultValue> { postState ? postState : 'Cambiar Estado de la publicación...' } </option>\n            {postState !== 'borrador' && <option value=\"borrador\">Borrador</option> }\n            {postState !== 'publicado' && <option value=\"publicado\">Publicada</option> }\n        </select>\n    )\n}\n\nexport default PostState\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addImage = async (image, postID) => {\n\tconst resp = await fetchConToken(`images/${postID}`, image, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst imageCreated = body.image\n\t\treturn imageCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteImage = async (id) => {\n\tconst resp = await fetchConToken(`images/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Imagen Borrada', 'success')\n\t}\n}\n\nexport const findImageAndUpdate = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findImageAndUpdateReturn = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import React from 'react'\n\nconst Loader = ({ loading }) => {\n    return (\n        <section id=\"loading\" className={ loading ? `show` : `hide` }>\n            <div className=\"lds-ripple\">\n                <div></div>\n                <div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { addImage } from '../../../actions/post-content/image.action'\nimport useForm from '../../../hooks/useForm'\nimport Loader from '../../../ui/Loader'\n\nconst AddImage = ({ saveElement, postID }) => {\n\tconst { values, handleFileChange, loading } = useForm()\n\tconst saveImage = async () => {\n\t\tconst theImage = await addImage({ image: values.image }, postID)\n\t\tsaveElement('image', theImage)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='file-group'>\n\t\t\t\t<input type='file' className='file-input' name='image' id='image' onChange={ handleFileChange } />\n\t\t\t</div>\n\t\t\t{loading ? (\n\t\t\t\t<Loader loading={ true } />\n\t\t\t) : (\n\t\t\t\tvalues?.image && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<img className='unique-image' src={ values.image } alt='' />\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ () => saveImage() }> Añadir Imagen a la Entrada</button>\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\t)\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default AddImage\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addText = async (text, postID) => {\n\tconst resp = await fetchConToken(`texts/${postID}`, text, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst textCreated = body.text\n\t\treturn textCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteText = async (id) => {\n\tconst resp = await fetchConToken(`texts/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Texto borrado', 'success')\n\t}\n}\n\nexport const findTextAndUpdate = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findTextAndUpdateReturn = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditor = ({ setQuill }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ color: [] }, { background: [] }],\n\t\t\t\t[{ align: [] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t[{ script: 'sub' }, { script: 'super' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditor.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nTextEditor.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditor\n","import React, { useEffect, useRef, useState } from 'react'\nimport { addText } from '../../../actions/post-content/text.action'\nimport useForm from '../../../hooks/useForm'\nimport TextEditor from '../../../ui/TextEditor'\n\nconst AddText = ({ saveElement, postID }) => {\n\tconst isMounted = useRef(true)\n\tconst [quill, setQuill] = useState()\n\tconst { values, setValues } = useForm()\n\n\tconst saveText = async () => {\n\t\tconst theText = await addText(values, postID)\n\t\tsaveElement('text', theText)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tsetValues({\n\t\t\t\ttext: quill,\n\t\t\t\tparsedText: { __html: quill },\n\t\t\t})\n\t\t}\n\t}, [quill, setValues])\n\n\treturn (\n\t\t<div>\n\t\t\t<TextEditor setQuill={ setQuill } />\n\t\t\t<button className='my-btn mini' onClick={ () => saveText() }>\n\t\t\t\tAñadir Texto a la entrada\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default AddText\n","import React from 'react'\nimport AddImage from '../AddImage'\nimport AddText from '../AddText'\n\nconst WhatToAdd = ({ auxContent, setAuxContent, select, postId, saveElement }) => {\n\n    const addThis = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setAuxContent('text')\n                break\n            case 'image':\n                setAuxContent('image')\n                break\n            default:\n                setAuxContent('default')\n                break\n        }\n    }\n\n\n    return (\n        <>\n            <h6>Tienes que añadir obligatoriamente, por lo menos, una imagen única</h6>\n            <select ref={ select } onChange={ addThis } name='content' placeholder='Añadir...'>\n                <option value='default' defaultValue> Añadir... </option>\n                <option value='text'>Texto</option>\n                <option value='image'>Imagen única</option>\n            </select>\n\n\n            <article className='add-post'>\n                { auxContent === 'default' && <p>Añadir elemento al post</p> }\n                { auxContent === 'text' && <AddText saveElement={ saveElement } postID={ postId } /> }\n                { auxContent === 'image' && <AddImage saveElement={ saveElement } postID={ postId } /> }\n            </article>\n        </>\n    )\n}\n\nexport default WhatToAdd\n","import React from 'react'\n\nconst TitlesArea = ({ selectedPost, saveTitles, handleInputChange }) => {\n    return (\n        <article className=\"title-area\">\n            <form className='form-title' onSubmit={ saveTitles }>\n                <label htmlFor='title'>Título de la Entrada</label>\n                <input id='title' type='text' name='title' onChange={ handleInputChange } placeholder={ selectedPost.title } />\n                <label htmlFor='subtitle'>Subtítulo de la Entrada</label>\n                <input id='subtitle' type='text' name='subtitle' placeholder={ selectedPost.subtitle } onChange={ handleInputChange } />\n                <button className='my-btn mini third' type='submit'> Guardar títulos </button>\n            </form>\n        </article>\n    )\n}\n\nexport default TitlesArea\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useForm from '../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../actions/posts.action'\n\n//Componentes\nimport PostState from './content/_ui/PostState';\nimport WhatToAdd from './content/_ui/WhatToAdd';\nimport TitlesArea from './content/_ui/TitlesArea';\nimport { deleteText } from '../../actions/post-content/text.action';\nimport { deleteImage } from '../../actions/post-content/image.action';\n\n\nconst AddPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n    }, [params.postID])\n\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <article className=\"post-btn-group\">\n                <h3>Nueva entrada del blog</h3>\n                <button className=\"my-btn mini secondary\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini\" onClick={ () => handleExit() }>Salir</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                </div>\n\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                        </div>\n                    </div>\n                    <hr />\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('text', text._id) }>Borrar</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('image', image._id) }>Borrar</button>\n                            </div>\n                        ))\n                    }\n                </div>\n\n            </section>\n        </section>\n\n    )\n}\n\nexport default AddPostScreen\n","import React, { useEffect, useRef, useState } from 'react'\n//Hooks\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useForm from '../../hooks/useForm';\n\n//Actions\nimport { deletePost, getThisPost, updatePost } from '../../actions/posts.action'\n\n//Componentes\nimport PostState from './content/_ui/PostState';\nimport WhatToAdd from './content/_ui/WhatToAdd';\nimport TitlesArea from './content/_ui/TitlesArea';\nimport { deleteText } from '../../actions/post-content/text.action';\nimport { deleteImage } from '../../actions/post-content/image.action';\n\n\nconst EditPostScreen = () => {\n    let history = useHistory();\n    let params = useParams()\n    const select = useRef()\n\n    const { values, handleInputChange } = useForm()\n    const [postId, setPostId] = useState()\n\n    const [auxContent, setAuxContent] = useState('default')\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n    //Edit Methods\n\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n\n    }, [params.postID])\n\n\n    //Post Methods\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Select Methods\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n\n    //Buttons Methods\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, text: prevState.content.text.filter(text => text._id !== id) } }))\n                break\n            case 'image':\n                await deleteImage(id)\n                setSelectedPost(prevState => ({ ...prevState, content: { ...prevState.content, image: prevState.content.image.filter(image => image._id !== id) } }))\n                break\n            default:\n                break\n        }\n    }\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <article className=\"post-btn-group\">\n                <h3>Editar entrada : { selectedPost.title }</h3>\n                <button className=\"my-btn mini secondary\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini\" onClick={ () => handleExit() }>Salir</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <TitlesArea selectedPost={ setSelectedPost } handleInputChange={ handleInputChange } saveTitles={ saveTitles } />\n                    <WhatToAdd auxContent={ auxContent } setAuxContent={ setAuxContent } select={ select } postId={ postId } saveElement={ saveElement } />\n                </div>\n                <div className=\"view-area\">\n                    <div className=\"titles-btn\">\n                        <div>\n                            {\n                                selectedPost.title && <h1>{ selectedPost.title }</h1>\n                            }\n                            {\n                                selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                            }\n                        </div>\n                    </div>\n                    <hr />\n                    {\n                        selectedPost.content.text.length > 0 && selectedPost.content.text.map(text => (\n                            <div key={ text._id } >\n                                <div dangerouslySetInnerHTML={ text.parsedText } >\n                                </div>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('text', text._id) }>Borrar</button>\n                            </div>\n\n                        ))\n                    }\n                    {\n                        selectedPost.content.image.length > 0 && selectedPost.content.image.map(image => (\n                            <div key={ image._id } >\n                                <figure>\n                                    <img src={ image.image } alt=\"\" />\n                                </figure>\n                                <button className=\"my-btn mini\" onClick={ () => deleteThis('image', image._id) }>Borrar</button>\n                            </div>\n                        ))\n                    }\n                </div>\n            </section>\n        </section>\n\n    )\n}\n\nexport default EditPostScreen\n","import { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const addSection = async (section) => {\n\tconst resp = await fetchConToken(`sections/`, section, 'POST')\n\tconst body = await resp.json()\n\treturn body.section\n}\nexport const updateSection = async (section, id) => {\n\tawait fetchConToken(`sections/${id}`, section, 'PUT')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\nexport const deleteSection = async (id) => {\n\tawait fetchConToken(`sections/${id}`, {}, 'DELETE')\n\tconst resp = await fetchSinToken(`sections`)\n\tconst body = await resp.json()\n\treturn body.sections\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroupSection = React.memo(({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{editLabel}: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={editValue} alt={nameValue} />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel}: <strong>{editValue}</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={() => deleteField(nameValue)}>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{editLabel}: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<Modal className='my-modals' show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{editValue}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={submitEdit}>\n\t\t\t\t\t\t<input name={nameValue} type={inputType} onChange={editAction} placeholder={editValue} />\n\t\t\t\t\t\t<button className='my-btn' type='submit' onClick={handleClose}>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn' onClick={handleClose}>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditorSections = ({ setQuill, handleQuill, setParsed }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst createHTLM = (text) => {\n\t\treturn { __html: text }\n\t}\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ font: [] }],\n\t\t\t\t[{ 'color': ['#dd4124', '#f38b2e'] }, { 'background': ['#dd4124', '#f38b2e'] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t\tsetParsed(createHTLM(value))\n\t}, [value, setQuill, setParsed])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditorSections.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t\t<form onSubmit={ handleQuill }>\n\t\t\t\t<button type='submit' className='my-btn mini secondary'>\n\t\t\t\t\tGuardar texto\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nTextEditorSections.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditorSections\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { deleteSection, updateSection } from '../actions/sections.action'\nimport useForm from '../hooks/useForm'\nimport Swal from 'sweetalert2'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { types } from '../types/types'\nimport { EditGroupSection } from './sections/EditGroupSection'\nimport { SectionContext } from '../reducers/sections/sectionsContext'\nimport { FaTimesCircle } from \"react-icons/fa\";\n\nimport { fileUpload } from '../helpers/uploadFiles'\nimport TextEditorSections from '../ui/TextEditorSections'\n\nexport const SectionScreen = () => {\n\tconst { user } = useContext(AuthContext)\n\tconst { dispatchSections, sections } = useContext(SectionContext)\n\tconst { id } = useParams()\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { title, text, parsedText, subtitle, _id: idSection, uniqueImage, gallery, features, formInputs } = values\n\tconst history = useHistory()\n\tlet thisSection = useRef()\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (sections.length > 0) {\n\t\t\tthisSection.current = sections.find((sect) => sect._id === id)\n\t\t\tsetValues(thisSection.current)\n\t\t}\n\t}, [id, sections, setValues])\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\t//Features\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-features')\n\t\t}\n\t\tclearInput('to-reset-features')\n\t}\n\n\t//Galeria\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\t//Form inputs\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-inputs')\n\t\t}\n\t\tclearInput('to-reset-inputs')\n\t}\n\n\t//Borrar propiedades\n\n\tconst handleDelete = async () => {\n\t\thistory.push('/bratic')\n\t\tconst sectionGroup = await deleteSection(id)\n\t\tdispatchSections({ type: types.deleteSection, payload: sectionGroup })\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t}\n\n\tconst saveChanges = async () => {\n\t\tconst sectionUpdated = await updateSection(values, idSection)\n\t\tif (!sectionUpdated) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.sectionUpdate, payload: sectionUpdated })\n\t\t\thistory.push('/bratic')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-screen'>\n\t\t\t\t<h1>\n\t\t\t\t\tSección <span>{ values?.sectionName }</span>\n\t\t\t\t</h1>\n\n\t\t\t\t<button className='my-btn mini' onClick={ saveChanges }>\n\t\t\t\t\tGuardar Cambios\n\t\t\t\t</button>\n\n\t\t\t\t{ user.email === 'admin@yai.com' && (\n\t\t\t\t\t<button className='my-btn secondary mini' onClick={ handleDelete }>\n\t\t\t\t\t\tBorrar esta sección\n\t\t\t\t\t</button>\n\t\t\t\t) }\n\n\t\t\t\t{ (title || title === '') && (\n\t\t\t\t\t<EditGroupSection nameValue={ 'title' } deleteField={ deleteField } inputType='text' editLabel={ 'Título' } editAction={ handleInputChange } editValue={ values?.title } submitEdit={ handleSubmit } />\n\t\t\t\t) }\n\t\t\t\t{ subtitle && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\tnameValue={ 'subtitle' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='text'\n\t\t\t\t\t\teditLabel={ 'Subtítulo' }\n\t\t\t\t\t\teditAction={ handleInputChange }\n\t\t\t\t\t\teditValue={ values?.subtitle }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t<EditGroupSection\n\t\t\t\t\t\timageEdit={ true }\n\t\t\t\t\t\tnameValue={ 'uniqueImage' }\n\t\t\t\t\t\tdeleteField={ deleteField }\n\t\t\t\t\t\tinputType='file'\n\t\t\t\t\t\teditLabel={ 'Imagen principal' }\n\t\t\t\t\t\teditAction={ handleFileChange }\n\t\t\t\t\t\teditValue={ values?.uniqueImage }\n\t\t\t\t\t\tsubmitEdit={ handleSubmit }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ gallery?.length > 0 && (\n\t\t\t\t\t<div className='edit-gallery'>\n\t\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t{ features?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ formInputs?.length > 0 && (\n\t\t\t\t\t<div className='edit-features'>\n\t\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t\t<input type='text' id='to-reset-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini'>\n\t\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t{ text && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<section className='edit-group text-editor-group'>\n\t\t\t\t\t\t\t<p>Texto:</p>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={ parsedText }></div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</section>\n\t\t</>\n\t)\n}\n","import React, { useContext, useState } from 'react'\nimport { fileUpload } from '../../helpers/uploadFiles'\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport useForm from '../../hooks/useForm'\nimport { addSection } from '../../actions/sections.action'\nimport { SectionContext } from '../../reducers/sections/sectionsContext'\nimport { types } from '../../types/types'\nimport Swal from 'sweetalert2'\nimport TextEditorSections from '../../ui/TextEditorSections';\n\nexport const AddSection = ({ handleClose }) => {\n\tconst { dispatchSections } = useContext(SectionContext)\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [quill, setQuill] = useState()\n\tconst [parsed, setParsed] = useState()\n\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm()\n\tconst { uniqueImage, gallery, features, formInputs } = values\n\n\tconst handleQuill = (e) => {\n\t\te.preventDefault()\n\t\tsetValues({\n\t\t\t...values,\n\t\t\ttext: quill,\n\t\t\tparsedText: parsed,\n\t\t})\n\t}\n\n\tconst clearInput = (input) => {\n\t\tconst theinput = document.getElementById(input)\n\t\ttheinput.value = ''\n\t}\n\n\tconst deleteFormInput = (idx) => {\n\t\tconst inputCopy = [...formInputs]\n\t\tinputCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tformInputs: inputCopy,\n\t\t})\n\t}\n\n\tconst handleChangeFormInput = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFormInput = (e) => {\n\t\te.preventDefault()\n\t\tif (!formInputs) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t} else if (!formInputs?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tformInputs: [...formInputs, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-inputs')\n\t\t}\n\t\tclearInput('to-reset-section-inputs')\n\t}\n\n\tconst deleteFeature = (idx) => {\n\t\tconst featCopy = [...features]\n\t\tfeatCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tfeatures: featCopy,\n\t\t})\n\t}\n\n\tconst handleFeatureChange = (e) => {\n\t\tsetAuxValue(e.target.value)\n\t}\n\n\tconst handleAddFeature = (e) => {\n\t\te.preventDefault()\n\t\tif (!features) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t} else if (!features?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tfeatures: [...features, auxValue],\n\t\t\t})\n\t\t\tclearInput('to-reset-section-features')\n\t\t}\n\t\tclearInput('to-reset-section-features')\n\t}\n\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (!gallery) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [auxValue],\n\t\t\t})\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tgallery: [...gallery, auxValue],\n\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tgallery: galleryCopy,\n\t\t})\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tconst newSection = await addSection(values)\n\t\tif (!newSection) {\n\t\t\tSwal.fire('¡Oh-oh!', 'Ha habido un error, inténtalo de nuevo', 'error')\n\t\t} else {\n\t\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\t\tdispatchSections({ type: types.addSection, payload: newSection })\n\t\t}\n\t\thandleClose()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='section-form'>\n\t\t\t\t<div className='left-side'>\n\t\t\t\t\t<label>Tipo de sección* { values?.sectionType && <FaCheckCircle /> }</label>\n\t\t\t\t\t<select onChange={ handleInputChange } name='sectionType' required>\n\t\t\t\t\t\t<option value='section' defaultValue>\n\t\t\t\t\t\t\tSección\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value='nav'>Navegador</option>\n\t\t\t\t\t\t<option value='header'>Cabecera</option>\n\t\t\t\t\t\t<option value='footer'>Footer</option>\n\t\t\t\t\t</select>\n\n\t\t\t\t\t<label>Nombre de la sección* { values?.sectionName && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } name='sectionName' autoComplete='off' placeholder='Nombre de la sección' required />\n\n\t\t\t\t\t<label>Título { values?.title && <FaCheckCircle /> }</label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='title' placeholder='Título' required />\n\n\t\t\t\t\t<label>Subtítulo </label>\n\t\t\t\t\t<input type='text' onChange={ handleInputChange } autoComplete='off' name='subtitle' placeholder='Subtítulo' />\n\n\t\t\t\t\t<label>Imagen principal</label>\n\t\t\t\t\t{ uniqueImage && (\n\t\t\t\t\t\t<figure className='unique-image'>\n\t\t\t\t\t\t\t<img src={ uniqueImage } alt='' />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<input className='file-input' type='file' onChange={ handleFileChange } name='uniqueImage' />\n\t\t\t\t\t<label htmlFor=''>Galería de imágenes</label>\n\t\t\t\t\t<div className='gallery'>\n\t\t\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t<FaTimesCircle className='close-icon' onClick={ () => deletePicture(idx) } />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='button-file-group'>\n\t\t\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t\t\t<button onClick={ handleAddGallery } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='right-side'>\n\t\t\t\t\t<label>Texto </label>\n\t\t\t\t\t<TextEditorSections setQuill={ setQuill } handleQuill={ handleQuill } setParsed={ setParsed } />\n\n\t\t\t\t\t<label htmlFor=''>Características</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ features?.map((ft, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ ft }>\n\t\t\t\t\t\t\t\t{ft }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFeature(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-features' onChange={ handleFeatureChange } placeholder={ 'Añadir Característica' } name='features' />\n\t\t\t\t\t\t<button onClick={ handleAddFeature } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<label>Inputs del formulario</label>\n\t\t\t\t\t<div className='features'>\n\t\t\t\t\t\t{ formInputs?.map((inp, idx) => (\n\t\t\t\t\t\t\t<div className='each-feat' key={ inp }>\n\t\t\t\t\t\t\t\t{inp }\n\t\t\t\t\t\t\t\t<FaTimesCircle onClick={ () => deleteFormInput(idx) } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='button-input-group'>\n\t\t\t\t\t\t<input type='text' id='to-reset-section-inputs' onChange={ handleChangeFormInput } placeholder={ 'Añadir Input' } name='formInputs' />\n\t\t\t\t\t\t<button onClick={ handleAddFormInput } className='my-btn mini third'>\n\t\t\t\t\t\t\tAñadir\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<form className='section-form' onSubmit={ handleSubmit }>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tGuardar Datos\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n","import { types } from '../../types/types'\n\nexport const SectionsReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getSections:\n\t\t\treturn action.payload\n\n\t\tcase types.addSection:\n\t\t\treturn [...state, action.payload]\n\n\t\tcase types.deleteSection:\n\t\t\treturn action.payload\n\n\t\tcase types.updateThis:\n\t\t\treturn { ...action.payload }\n\n\t\tcase types.sectionUpdate:\n\t\t\treturn action.payload\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import React, { useContext, useEffect, useReducer, useRef, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport SignupScreen from '../components/auth/SignupScreen'\nimport CompanyScreen from '../components/CompanyScreen'\nimport DashboardScreen from '../components/DashboardScreen'\nimport { fetchSinToken } from '../helpers/fetch'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { CompanyContext } from '../reducers/CompanyContext'\nimport { CompanyReducer } from '../reducers/CompanyReducer'\nimport { DashboardNav } from '../ui/DashboardNav'\nimport { Navbar } from '../ui/Navbar'\nimport { types } from '../types/types'\nimport PostsScreen from '../components/PostsScreen'\nimport Post from '../components/posts/Post'\nimport AddPostScreen from '../components/posts/AddPostScreen'\nimport EditPostScreen from '../components/posts/EditPostScreen'\nimport { SectionScreen } from '../components/SectionScreen'\nimport { Modal } from 'react-bootstrap'\nimport { AddSection } from '../components/sections/AddSection'\nimport { SectionContext } from '../reducers/sections/sectionsContext'\nimport { SectionsReducer } from '../reducers/sections/SectionsReducer'\n\nconst AppRouter = () => {\n\tconst isMounted = useRef(true)\n\tconst { user } = useContext(AuthContext)\n\tconst [company, dispatchCompany] = useReducer(CompanyReducer, {})\n\tconst [sections, dispatchSections] = useReducer(SectionsReducer, {})\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tfetchSinToken(`sections`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchSections({ type: types.getSections, payload: data.sections }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t\tfetchSinToken(`companies`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchCompany({ type: types.getCompany, payload: data.company[0] }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t}\n\t}, [])\n\n\tconst [show, setShow] = useState(false)\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t{ user.token ? (\n\t\t\t\t\t<CompanyContext.Provider value={ { company, dispatchCompany } }>\n\t\t\t\t\t\t<SectionContext.Provider value={ { sections, dispatchSections } }>\n\n\t\t\t\t\t\t\t<div className='dashboard-container'>\n\t\t\t\t\t\t\t\t<DashboardNav handleShow={ handleShow } />\n\n\t\t\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic' component={ DashboardScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/empresa' component={ CompanyScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog' component={ PostsScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/nueva-entrada/:postID' component={ AddPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/:postID' component={ Post } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/editar-entrada/:postID' component={ EditPostScreen } />\n\t\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/seccion/:id' component={ (props) => <SectionScreen { ...props } /> } />\n\t\t\t\t\t\t\t\t\t\t<Redirect to='/bratic' />\n\t\t\t\t\t\t\t\t\t</Switch>\n\n\t\t\t\t\t\t\t\t\t<Modal dialogClassName='modal-width' centered className='my-modals' show={ show } onHide={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t\t\t\t\t<h4>Añadir Sección a la web</h4>\n\t\t\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t\t\t<AddSection handleClose={ handleClose } />\n\t\t\t\t\t\t\t\t\t\t</Modal.Body>\n\n\t\t\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={ handleClose }>\n\t\t\t\t\t\t\t\t\t\t\t\tcerrar\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</SectionContext.Provider>\n\t\t\t\t\t</CompanyContext.Provider>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={ LoginScreen } />\n\t\t\t\t\t\t\t\t<Route path='/registro' component={ SignupScreen } />\n\t\t\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import { useEffect, useReducer, useRef } from 'react'\nimport { AuthContext } from './reducers/auth/AuthContext'\nimport { AuthReducer } from './reducers/auth/authReducer'\n// Import Swiper styles\nimport 'swiper/swiper.scss'\nimport 'swiper/components/pagination/pagination.scss'\n//Photoswipe\nimport 'react-photoswiper/lib/photoswipe.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss'\n\nimport AppRouter from './routers/AppRouter'\n\nconst init = () => {\n\treturn JSON.parse(localStorage.getItem('bratic-user')) || { logged: false }\n}\n\n\nconst App = () => {\n\tconst isMounted = useRef(true)\n\tconst [user, dispatch] = useReducer(AuthReducer, {}, init)\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tlocalStorage.setItem('bratic-user', JSON.stringify(user))\n\t\t}\n\t}, [user])\n\n\n\treturn (\n\t\t<>\n\t\t\t<AuthContext.Provider value={ { user, dispatch } }>\n\t\t\t\t<AppRouter />\n\t\t\t</AuthContext.Provider>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}