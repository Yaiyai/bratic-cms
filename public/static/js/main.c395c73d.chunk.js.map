{"version":3,"sources":["reducers/auth/AuthContext.js","types/types.js","reducers/auth/authReducer.js","helpers/fetch.js","actions/auth.action.js","helpers/uploadFiles.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/SignupScreen.jsx","components/company/EditGroup.jsx","actions/company.action.js","reducers/CompanyContext.js","components/company/UpdateCompany.jsx","components/company/AddCompany.jsx","components/CompanyScreen.jsx","components/DashboardScreen.jsx","reducers/CompanyReducer.js","ui/DashboardNav.jsx","ui/Navbar.jsx","actions/posts.action.js","components/posts/PostElement.jsx","components/PostsScreen.jsx","components/posts/Post.jsx","actions/post-content/video.action.js","actions/post-content/image.action.js","actions/post-content/text.action.js","actions/post-content/slider.action.js","actions/post-content/gallery.action.js","ui/TextEditor.jsx","components/posts/content/AddText.jsx","components/posts/content/AddImage.jsx","components/posts/content/AddGallery.jsx","components/posts/content/AddVideo.jsx","components/posts/content/AddSlider.jsx","hooks/useCounter.js","components/posts/content/RenderContentByType.jsx","components/posts/content/PostState.jsx","components/posts/AddPostScreen.jsx","components/posts/EditPostScreen.jsx","routers/AppRouter.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","require","types","login","signup","logout","hasToken","getCompany","addCompany","companyUpdate","companyDelete","getPosts","getThisPost","addPost","postUpdate","AuthReducer","state","action","type","payload","logged","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","startLogin","email","password","a","resp","json","ok","loggedUser","id","name","setItem","errorMsg","msg","Swal","fire","startSignup","signedupUser","fileUpload","file","formData","FormData","append","then","secure_url","catch","err","console","log","useForm","initialState","useState","values","setValues","resetForm","handleInputChange","target","value","handleFileChange","files","LoginScreen","dispatch","useContext","handleLogin","e","preventDefault","className","onSubmit","onChange","placeholder","to","SignupScreen","password2","handleSignup","EditGroup","nameValue","deleteField","inputType","editLabel","editAction","editValue","submitEdit","imageEdit","show","setShow","handleClose","handleShow","src","alt","onClick","Modal","onHide","Header","Title","Body","Footer","company","companyCreated","updateCompany","updatedCompany","error","deleteCompany","CompanyContext","UpdateCompany","dispatchCompany","phone","address","_id","mainEmail","mainLogo","secondaryLogo","linkedin","facebook","twitter","instagram","handleDelete","property","handleSubmit","saveChanges","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","AddCompany","htmlFor","CompanyScreen","isMounted","useRef","useEffect","current","DashboardScreen","user","CompanyReducer","addCompnany","deleteProperty","maquinasCategoriesUpdate","maquinasCategories","DashboardNav","handleLogout","removeItem","Navbar","getUserPosts","userPosts","posts","thePost","post","postCreated","updatePost","updatedPost","deletePost","PostElement","askIfDelete","date","setDate","Date","createdAt","toLocaleString","PostsScreen","history","useHistory","setPosts","allMyPosts","handleAdd","author","newPost","push","handleDeletePost","length","map","elm","SwiperCore","use","Autoplay","Pagination","Post","postID","useParams","setPost","items","setItems","setContent","orderPreviousContent","content","currentPost","postContent","aux","forEach","sort","b","order","getPost","gallery","gal","thumbnail","getThumbnails","w","h","str","splitStr","split","subtitle","image","txt","idx","dangerouslySetInnerHTML","parsedText","video","vid","controls","muted","thumbnailContent","item","slider","sld","spaceBetween","autoplay","delay","slidesPerView","pagination","clickable","slides","picture","addVideo","videoCreated","deleteVideo","findVideoAndUpdate","findVideoAndUpdateReturn","addImage","imageCreated","deleteImage","findImageAndUpdate","findImageAndUpdateReturn","addText","textCreated","deleteText","findTextAndUpdate","findTextAndUpdateReturn","addSlider","sliderCreated","deleteSlider","findSliderAndUpdate","findSliderAndUpdateReturn","addGallery","galleryCreated","deleteGallery","findGalleryAndUpdate","findGalleryAndUpdateReturn","TextEditor","setQuill","setValue","quillRef","ref","modules","toolbar","container","header","color","background","align","list","indent","script","clipboard","matchVisual","formats","theme","AddText","saveElement","increment","quill","saveText","theText","__html","AddImage","saveImage","theImage","AddGallery","auxValue","setAuxValue","setGallery","showButton","setShowButton","handleGalleryChange","saveGallery","theGallery","includes","galleryCopy","splice","deletePicture","AddVideo","saveVideo","theVideo","AddSlider","setSlider","saveSlider","theSlider","sliderCopy","useCounter","counter","setCounter","factor","decrement","reset","RenderContentByType","dragOver","dragStart","newContent","setNewContent","updatedContent","filteredArray","filter","deleteThis","contentType","posttype","onDragStart","onDragOver","draggable","renderByContentType","postType","PostState","postState","savePostState","defaultValue","AddPostScreen","params","postId","setPostId","select","auxContent","setAuxContent","selectedPost","setSelectedPost","findCurrentPost","goBack","handleUpdatePost","setToDefault","selectedIndex","element","contentCopy","c","drop","tag","dataTransfer","getData","card","document","getElementById","cardType","style","display","appendChild","spaceId","parentElement","orderedNew","updatedText","updatedImage","updatedGallery","updatedVideo","updatedSlider","dragOverReceptor","status","setData","attributes","setTimeout","stopPropagation","Array","onDrop","EditPostScreen","AppRouter","useReducer","Error","Provider","exact","path","component","library","add","fab","faTimesCircle","faChevronDown","faChevronUp","faCheckCircle","init","parse","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.c395c73d.chunk.js","sourcesContent":["const { createContext } = require('react')\n\nexport const AuthContext = createContext()\n","export const types = {\n\tlogin: '[auth] login',\n\tsignup: '[auth] signup',\n\tlogout: '[auth] logout',\n\thasToken: '[auth] hastoken',\n\n\tgetCompany: '[company] getCompany',\n\taddCompany: '[company] addCompany',\n\tcompanyUpdate: '[company] companyUpdate',\n\tcompanyDelete: '[company] companyDelete',\n\n\tgetPosts: '[post] getPosts',\n\tgetThisPost: '[post] getThisPost',\n\taddPost: '[post] addPost',\n\tpostUpdate: '[post] postUpdate',\n}\n","import { types } from '../../types/types'\n\nexport const AuthReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.login:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.signup:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.hasToken:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.logout:\n\t\t\treturn {\n\t\t\t\tlogged: false,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tif (method === 'GET') {\n\t\treturn fetch(url)\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tconst token = localStorage.getItem('bratic-token') || ''\n\tif (method === 'GET') {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n","import { fetchSinToken } from '../helpers/fetch'\nimport Swal from 'sweetalert2'\n\nexport const startLogin = async (email, password) => {\n\tconst resp = await fetchSinToken('auth/login', { email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst loggedUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\tlogged: true,\n\t\t\ttoken: body.token,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(loggedUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn loggedUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const startSignup = async (name, email, password) => {\n\tconst resp = await fetchSinToken('auth/signup', { name, email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst signedupUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\ttoken: body.token,\n\t\t\tlogged: true,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(signedupUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn signedupUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\n","export const fileUpload = async (file) => {\n\tconst cloudUrl = 'https://api.cloudinary.com/v1_1/bratic-app/upload'\n\tconst formData = new FormData()\n\tformData.append('upload_preset', 'bratic-app')\n\tformData.append('file', file)\n\tformData.append('folder', 'pre')\n\tlet url\n\n\tawait fetch(cloudUrl, { method: 'POST', body: formData })\n\t\t.then((data) => data.json())\n\t\t.then((data) => (url = data.secure_url))\n\t\t.catch((err) => console.log(err))\n\treturn url\n}\n","import { useState } from 'react'\nimport { fileUpload } from '../helpers/uploadFiles'\n\nconst useForm = (initialState = {}) => {\n\tconst [values, setValues] = useState(initialState)\n\n\tconst resetForm = () => {\n\t\tsetValues(initialState)\n\t}\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t}\n\tconst handleFileChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tawait setValues({\n\t\t\t...values,\n\t\t\t[target.name]: url,\n\t\t})\n\t}\n\n\treturn { values, setValues, handleInputChange, handleFileChange, resetForm }\n}\n\nexport default useForm\n","import React, { useContext } from 'react'\nimport { startLogin } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst LoginScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { email, password } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault()\n\t\tconst loggedUser = await startLogin(email, password)\n\n\t\tdispatch({ type: types.login, payload: loggedUser })\n\t}\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿No tienes cuenta? Crea una <Link to='/registro'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useContext } from 'react'\nimport Swal from 'sweetalert2'\nimport { startSignup } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst SignupScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { name, email, password, password2 } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleSignup = async (e) => {\n\t\te.preventDefault()\n\t\tif (password === password2) {\n\t\t\tconst signedupUser = await startSignup(name, email, password)\n\n\t\t\tdispatch({ type: types.signup, payload: signedupUser })\n\t\t} else {\n\t\t\tSwal.fire('Error', 'Las contraseñas deben coincidir', 'error')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleSignup}>\n\t\t\t\t\t<label>Nombre</label>\n\t\t\t\t\t<input type='text' onChange={handleInputChange} placeholder='Tu nombre' name='name' />\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<label>Repite Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Repite Contraseña' name='password2' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tRegistro\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿Ya estás registrado? Entra <Link to='/'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default SignupScreen\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nexport const EditGroup = ({ nameValue, deleteField, inputType, editLabel, editAction, editValue, submitEdit, imageEdit = false }) => {\n\tconst [show, setShow] = useState(false)\n\n\tconst handleClose = () => setShow(false)\n\tconst handleShow = () => setShow(true)\n\n\treturn (\n\t\t<>\n\t\t\t{editValue ? (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t{imageEdit ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{editLabel}: </p>\n\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src={editValue} alt={nameValue} />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{editLabel}: <strong>{editValue}</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className='my-btn mini secondary' onClick={() => deleteField(nameValue)}>\n\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className='edit-group'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{editLabel}: <small>Sin datos</small>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='my-btn mini' onClick={handleShow}>\n\t\t\t\t\t\tAñadir\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<Modal className='edit-modal my-modals' show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{editValue}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className='edit-form' onSubmit={submitEdit}>\n\t\t\t\t\t\t<input name={nameValue} type={inputType} onChange={editAction} placeholder={editValue} />\n\t\t\t\t\t\t<button className='my-btn' type='submit' onClick={handleClose}>\n\t\t\t\t\t\t\tGuardar\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className='my-btn' onClick={handleClose}>\n\t\t\t\t\t\tcerrar\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../helpers/fetch'\n\nexport const addCompany = async (company) => {\n\tconst resp = await fetchConToken(`companies/`, company, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst companyCreated = body.company\n\t\treturn companyCreated\n\t}\n}\nexport const updateCompany = async (id, company) => {\n\tconst resp = await fetchConToken(`companies/${id}`, company, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedCompany = body.company\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\n\t\treturn updatedCompany\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deleteCompany = async (id) => {\n\tawait fetchConToken(`companies/${id}`, {}, 'DELETE')\n}\n","const { createContext } = require('react')\n\nexport const CompanyContext = createContext()\n","import React, { useContext } from 'react'\nimport { EditGroup } from './EditGroup'\nimport useForm from './../../hooks/useForm'\nimport { deleteCompany, updateCompany } from './../../actions/company.action'\nimport { types } from '../../types/types'\nimport { CompanyContext } from '../../reducers/CompanyContext'\nimport Swal from 'sweetalert2'\n\nexport const UpdateCompany = () => {\n\tconst { company, dispatchCompany } = useContext(CompanyContext)\n\n\tconst { name, phone, address, _id: id, mainEmail, mainLogo, secondaryLogo, linkedin, facebook, twitter, instagram } = company\n\tconst { values, setValues, handleInputChange, handleFileChange } = useForm(company)\n\n\tconst handleDelete = async () => {\n\t\tawait deleteCompany(id)\n\t\tdispatchCompany({ type: types.companyDelete })\n\t}\n\tconst askIfDelete = () => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, no habrá datos de empresa',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Empresa!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDelete()\n\t\t\t\tSwal.fire('¡Empresa borrada!', 'Esta empresa se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\tconst deleteField = async (property) => {\n\t\tconst payload = {\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t}\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[property]: '',\n\t\t})\n\t\tdispatchCompany({ type: types.updateCompany, payload })\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tdispatchCompany({ type: types.updateCompany, payload: values })\n\t}\n\n\tconst saveChanges = async () => {\n\t\tawait updateCompany(id, company)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Datos de empresa</h1>\n\t\t\t<button className='my-btn mini' onClick={saveChanges}>\n\t\t\t\tGuardar Cambios\n\t\t\t</button>\n\t\t\t<button className='my-btn secondary mini' onClick={askIfDelete}>\n\t\t\t\tBorrar esta empresa\n\t\t\t</button>\n\n\t\t\t<div className='editing'>\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'name'} inputType={'text'} editLabel={'Nombre de empresa'} editAction={handleInputChange} editValue={name} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'address'} inputType={'text'} editLabel={'Dirección'} editAction={handleInputChange} editValue={address} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'phone'} inputType={'text'} editLabel={'Teléfono principal'} editAction={handleInputChange} editValue={phone} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'mainEmail'} inputType={'email'} editLabel={'Email principal'} editAction={handleInputChange} editValue={mainEmail} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={deleteField}\n\t\t\t\t\tnameValue={'mainLogo'}\n\t\t\t\t\timageEdit={true}\n\t\t\t\t\tinputType={'file'}\n\t\t\t\t\teditLabel={'Logo Principal'}\n\t\t\t\t\teditAction={handleFileChange}\n\t\t\t\t\teditValue={mainLogo}\n\t\t\t\t\tsubmitEdit={handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EditGroup\n\t\t\t\t\tdeleteField={deleteField}\n\t\t\t\t\tnameValue={'secondaryLogo'}\n\t\t\t\t\timageEdit={true}\n\t\t\t\t\tinputType={'file'}\n\t\t\t\t\teditLabel={'Logo BN'}\n\t\t\t\t\teditAction={handleFileChange}\n\t\t\t\t\teditValue={secondaryLogo}\n\t\t\t\t\tsubmitEdit={handleSubmit}\n\t\t\t\t/>\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'twitter'} inputType={'text'} editLabel={'Twitter Url'} editAction={handleInputChange} editValue={twitter} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'facebook'} inputType={'text'} editLabel={'Facebook url'} editAction={handleInputChange} editValue={facebook} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'instagram'} inputType={'text'} editLabel={'Instagram Url'} editAction={handleInputChange} editValue={instagram} submitEdit={handleSubmit} />\n\t\t\t\t<EditGroup deleteField={deleteField} nameValue={'linkedin'} inputType={'text'} editLabel={'Linkedin Url'} editAction={handleInputChange} editValue={linkedin} submitEdit={handleSubmit} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { addCompany } from './../../actions/company.action'\nimport useForm from '../../hooks/useForm'\n\nconst AddCompany = () => {\n\tconst { values, handleInputChange, handleFileChange } = useForm({})\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tawait addCompany(values)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<form className='add-form' onSubmit={handleSubmit}>\n\t\t\t\t<input type='text' name='name' placeholder='Nombre de la empresa' onChange={handleInputChange} />\n\t\t\t\t<input type='email' name='mainEmail' placeholder='Correo Principal' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='phone' placeholder='Teléfono principal' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='address' placeholder='Dirección' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='linkedin' placeholder='URL Linkedin' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='facebook' placeholder='URL Facebook' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='instagram' placeholder='URL Instagram' onChange={handleInputChange} />\n\t\t\t\t<input type='text' name='twitter' placeholder='URL Twitter' onChange={handleInputChange} />\n\t\t\t\t<div className='input-images'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='mainLogo'>Logo principal</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='mainLogo' id='mainLogo' placeholder='Logo Principal' onChange={handleFileChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='secondaryLogo'>Logo en BN</label>\n\t\t\t\t\t\t<input type='file' className='file-input' name='secondaryLogo' id='secondaryLogo' placeholder='Logo Secundario' onChange={handleFileChange} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className='my-btn mini' type='submit'>\n\t\t\t\t\tCrear empresa\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n","import React, { useEffect, useRef, useContext } from 'react'\nimport { UpdateCompany } from './company/UpdateCompany'\nimport AddCompany from './company/AddCompany'\nimport { CompanyContext } from '../reducers/CompanyContext'\n\nconst CompanyScreen = () => {\n\tconst isMounted = useRef(true)\n\tconst { company } = useContext(CompanyContext)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\treturn <>{company._id ? <UpdateCompany /> : <AddCompany />}</>\n}\n\nexport default CompanyScreen\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../reducers/auth/AuthContext'\n\nconst DashboardScreen = () => {\n\tconst { user } = useContext(AuthContext)\n\treturn (\n\t\t<div>\n\t\t\t<h1>¡Bienvenid@ {user.name}!</h1>\n\t\t</div>\n\t)\n}\n\nexport default DashboardScreen\n","import { types } from '../types/types'\n\nexport const CompanyReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase types.getCompany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.addCompnany:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.companyUpdate:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.deleteProperty:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.maquinasCategoriesUpdate:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaquinasCategories: action.payload,\n\t\t\t}\n\t\tcase types.companyDelete:\n\t\t\treturn {}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { types } from '../types/types'\n\nexport const DashboardNav = () => {\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogout = async () => {\n\t\tawait dispatch({ type: types.logout })\n\t\tlocalStorage.removeItem('bratic-token')\n\t\tlocalStorage.removeItem('bratic-user')\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<nav className='dash-nav'>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic'>\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/empresa'>Datos de empresa</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/bratic/blog'>Blog</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t<button className='my-btn secondary mini' onClick={handleLogout}>\n\t\t\t\t\t\tCerrar Sesión\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n\treturn (\n\t\t<nav className='login-nav'>\n\t\t\t<div className='container'>\n\t\t\t\t<figure>\n\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t</figure>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/'>Entrar</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/registro'>Registro</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch'\n\nexport const getUserPosts = async (user) => {\n\tconst resp = await fetchSinToken(`posts/${user}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst userPosts = body.posts\n\t\treturn userPosts\n\t}\n}\nexport const getThisPost = async (id) => {\n\tconst resp = await fetchSinToken(`posts/post/${id}`, 'GET')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst thePost = body.post\n\t\treturn thePost\n\t}\n}\n\nexport const addPost = async (post) => {\n\tconst resp = await fetchConToken(`posts/`, post, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst postCreated = body.post\n\t\treturn postCreated\n\t}\n}\n\nexport const updatePost = async (id, post) => {\n\tconst resp = await fetchConToken(`posts/${id}`, post, 'PUT')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst updatedPost = body.post\n\t\tSwal.fire('¡Chachi!', 'Los cambios han sido guardados', 'success')\n\t\treturn updatedPost\n\t} else {\n\t\tconst errorMsg = body.error\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const deletePost = async (id) => {\n\tawait fetchConToken(`posts/${id}`, {}, 'DELETE')\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\n\nconst PostElement = ({ askIfDelete, post }) => {\n\tconst [date, setDate] = useState()\n\tuseEffect(() => {\n\t\tsetDate(new Date(post.createdAt).toLocaleString())\n\t}, [date, setDate, post])\n\n\treturn (\n\t\t<>\n\t\t\t<article className='each-post-prev'>\n\t\t\t\t<div className='info'>\n\t\t\t\t\t<h6>{ post.title }</h6>\n\t\t\t\t\t{ date && <small>{ date }</small> }\n\t\t\t\t</div>\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post._id) }>\n\t\t\t\t\t\tBorrar\n\t\t\t\t\t</button>\n\t\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post._id}` }>\n\t\t\t\t\t\tEditar\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='my-btn mini ' to={ `/bratic/blog/${post._id}` }>\n\t\t\t\t\t\tVer\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</article>\n\t\t</>\n\t)\n}\n\nexport default PostElement\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nimport { addPost, deletePost, getUserPosts } from '../actions/posts.action'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport PostElement from './posts/PostElement'\n\nconst PostsScreen = () => {\n\tlet history = useHistory();\n\tconst isMounted = useRef(true)\n\tconst [posts, setPosts] = useState()\n\tconst { user } = useContext(AuthContext)\n\n\n\tconst allMyPosts = async () => {\n\t\tconst posts = await getUserPosts(user.id)\n\t\tsetPosts(posts)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tallMyPosts()\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tconst handleAdd = async () => {\n\t\tconst newPost = await addPost({ title: 'Entrada Sin Título', author: user.id })\n\t\thistory.push(`/bratic/blog/nueva-entrada/${newPost._id}`)\n\t}\n\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\tawait allMyPosts()\n\t}\n\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\t// Swal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"posts-screen\">\n\t\t\t<h2>Entradas del Blog</h2>\n\t\t\t<button onClick={ handleAdd }>Añadir entrada del blog</button>\n\n\t\t\t{posts?.length > 0 ? (\n\t\t\t\t<section className='all-posts'>\n\t\t\t\t\t{posts?.map((elm) => (\n\t\t\t\t\t\t<PostElement askIfDelete={ askIfDelete } post={ elm } key={ elm._id } />\n\t\t\t\t\t)) }\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<article className='empty-posts'>No tienes entradas del blog</article>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default PostsScreen\n","import Swal from 'sweetalert2'\n//Photoswipe\nimport { PhotoSwipeGallery } from 'react-photoswiper'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { deletePost, getThisPost } from '../../actions/posts.action'\n\n//Swiper\nimport SwiperCore, { Autoplay, Pagination } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nSwiperCore.use([Autoplay, Pagination])\n\n\n\nconst Post = () => {\n\tconst isMounted = useRef(true)\n\tconst { postID } = useParams()\n\tlet history = useHistory();\n\n\tconst [post, setPost] = useState()\n\tconst [items, setItems] = useState()\n\n\tconst [content, setContent] = useState([])\n\n\n\tconst orderPreviousContent = async (id) => {\n\t\tconst currentPost = await getThisPost(id)\n\t\tconst postContent = currentPost.content\n\t\tlet aux = []\n\t\tfor (const content in postContent) {\n\t\t\tpostContent[content].forEach(elm => aux.push(elm))\n\t\t}\n\t\taux.sort((a, b) => a.order - b.order)\n\t\tsetContent(aux)\n\t}\n\n\tconst getPost = async () => {\n\t\tconst thePost = await getThisPost(postID)\n\t\tsetPost(thePost)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tgetPost()\n\t\t\torderPreviousContent(postID)\n\t\t}\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tsetItems(\n\t\t\tpost?.content.gallery.map((elm) => {\n\t\t\t\treturn elm.gallery.map((gal) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsrc: gal,\n\t\t\t\t\t\tthumbnail: getThumbnails(gal),\n\t\t\t\t\t\tw: 1200,\n\t\t\t\t\t\th: 900,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t)\n\t}, [post])\n\n\n\tconst getThumbnails = (str) => {\n\t\tlet splitStr = str.split('upload/')\n\t\tlet newStr = 'upload/w_200/'\n\t\treturn `${splitStr[0]}${newStr}${splitStr[1]}`\n\t}\n\n\tconst getThumbnailContent = (item) => {\n\t\titem.map(elm => {\n\t\t\treturn (\n\t\t\t\t<img src={ elm.thumbnail } alt='' />\n\t\t\t)\n\t\t})\n\t}\n\n\tconst askIfDelete = (id) => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Seguro?',\n\t\t\ttext: 'Si borras esto, la entrada desaparece',\n\t\t\ticon: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n\t\t\tconfirmButtonText: '¡Borrar Entrada!',\n\t\t\tcancelButtonText: '¡Uy, no!',\n\t\t}).then((result) => {\n\t\t\tif (result.isConfirmed) {\n\t\t\t\thandleDeletePost(id)\n\t\t\t\t// Swal.fire('¡Entrada borrada!', 'Esta entrada se marchó para no volver', 'success')\n\t\t\t}\n\t\t})\n\t}\n\tconst handleDeletePost = async (id) => {\n\t\tawait deletePost(id)\n\t\thistory.push('/bratic/blog')\n\t}\n\n\n\treturn (\n\t\t<section id=\"post-preview\">\n\t\t\t<div className=\"btn-group\">\n\t\t\t\t<button className='my-btn mini third' onClick={ () => askIfDelete(post?._id) }>\n\t\t\t\t\tBorrar\n\t\t\t\t</button>\n\t\t\t\t<Link className='my-btn mini secondary' to={ `/bratic/blog/editar-entrada/${post?._id}` }>\n\t\t\t\t\tEditar\n\t\t\t\t</Link>\n\t\t\t\t<Link className='my-btn mini thirsd' to={ `/bratic/blog/` }>\n\t\t\t\t\tVolver al blog\n\t\t\t\t</Link>\n\n\t\t\t</div>\n\t\t\t<h1>{ post?.title }</h1>\n\t\t\t{ post?.subtitle && <h2>{ post?.subtitle }</h2> }\n\t\t\t{ post?.createdAt && <small className=\"date\">{ post?.createdAt }</small> }\n\t\t\t{ post?.content.image.length > 0 && (\n\t\t\t\t<figure className=\"main-image\">\n\t\t\t\t\t<img key={ post?.content.image[0]._id } src={ post?.content.image[0].image } alt='' />\n\t\t\t\t</figure>\n\t\t\t) }\n\t\t\t<div className=\"container\">\n\t\t\t\t{ post?.content.text.length > 0 && (\n\t\t\t\t\tpost?.content.text.map((txt, idx) => (\n\t\t\t\t\t\t<div className='post-text' key={ txt._id } dangerouslySetInnerHTML={ txt.parsedText }></div>\n\t\t\t\t\t))\n\t\t\t\t) }\n\n\t\t\t\t{ post?.content.video.length > 0 && (\n\t\t\t\t\tpost?.content.video.map((vid, idx) => (\n\t\t\t\t\t\t<video className='video-preview' src={ vid.video } controls muted />\n\t\t\t\t\t))\n\t\t\t\t) }\n\t\t\t\t{ items?.length > 0 && (\n\t\t\t\t\t<PhotoSwipeGallery items={ items } thumbnailContent={ getThumbnailContent } />\n\t\t\t\t) }\n\n\t\t\t\t{ post?.content.slider?.length > 0 && (\n\t\t\t\t\t<div className='preview'>\n\t\t\t\t\t\t<h6>Slider de fotos</h6>\n\t\t\t\t\t\t{post?.content.slider.map((sld, idx) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Swiper\n\t\t\t\t\t\t\t\t\tspaceBetween={ 0 }\n\t\t\t\t\t\t\t\t\tautoplay={ {\n\t\t\t\t\t\t\t\t\t\tdelay: 2500,\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tslidesPerView={ 1 }\n\t\t\t\t\t\t\t\t\tpagination={ { clickable: true } }>\n\t\t\t\t\t\t\t\t\t{ sld.slides.map((picture, idx) => (\n\t\t\t\t\t\t\t\t\t\t<SwiperSlide key={ idx }>\n\t\t\t\t\t\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t</Swiper>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t</div>\n\n\n\t\t</section>\n\t)\n}\n\nexport default Post\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addVideo = async (video, postID) => {\n\tconst resp = await fetchConToken(`videos/${postID}`, video, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst videoCreated = body.video\n\t\treturn videoCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteVideo = async (id) => {\n\tconst resp = await fetchConToken(`videos/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findVideoAndUpdate = async (id, video) => {\n\tconst resp = await fetchConToken(`videos/${id}`, video, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findVideoAndUpdateReturn = async (id, video) => {\n\tconst resp = await fetchConToken(`videos/${id}`, video, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addImage = async (image, postID) => {\n\tconst resp = await fetchConToken(`images/${postID}`, image, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst imageCreated = body.image\n\t\treturn imageCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteImage = async (id) => {\n\tconst resp = await fetchConToken(`images/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Imagen Borrada', 'success')\n\t}\n}\n\nexport const findImageAndUpdate = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findImageAndUpdateReturn = async (id, image) => {\n\tconst resp = await fetchConToken(`images/${id}`, image, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addText = async (text, postID) => {\n\tconst resp = await fetchConToken(`texts/${postID}`, text, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst textCreated = body.text\n\t\treturn textCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteText = async (id) => {\n\tconst resp = await fetchConToken(`texts/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\tSwal.fire('¡Bien!', 'Texto borrado', 'success')\n\t}\n}\n\nexport const findTextAndUpdate = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findTextAndUpdateReturn = async (id, text) => {\n\tconst resp = await fetchConToken(`texts/${id}`, text, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addSlider = async (slider, postID) => {\n\tconst resp = await fetchConToken(`sliders/${postID}`, slider, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst sliderCreated = body.slider\n\t\treturn sliderCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\nexport const deleteSlider = async (id) => {\n\tconst resp = await fetchConToken(`sliders/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\nexport const findSliderAndUpdate = async (id, slider) => {\n\tconst resp = await fetchConToken(`sliders/${id}`, slider, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findSliderAndUpdateReturn = async (id, slider) => {\n\tconst resp = await fetchConToken(`sliders/${id}`, slider, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import Swal from 'sweetalert2'\nimport { fetchConToken } from '../../helpers/fetch'\n\nexport const addGallery = async (gallery, postID) => {\n\tconst resp = await fetchConToken(`galleries/${postID}`, gallery, 'POST')\n\tconst body = await resp.json()\n\tif (body.ok) {\n\t\tconst galleryCreated = body.gallery\n\t\treturn galleryCreated\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const deleteGallery = async (id) => {\n\tconst resp = await fetchConToken(`galleries/${id}`, {}, 'DELETE')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findGalleryAndUpdate = async (id, gallery) => {\n\tconst resp = await fetchConToken(`galleries/${id}`, gallery, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t}\n}\n\nexport const findGalleryAndUpdateReturn = async (id, gallery) => {\n\tconst resp = await fetchConToken(`galleries/${id}`, gallery, 'PUT')\n\tconst body = await resp.json()\n\tif (!body.ok) {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('¡Oh-oh!', errorMsg, 'error')\n\t} else {\n\t\treturn body\n\t}\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\n\nconst TextEditor = ({ setQuill }) => {\n\tconst [value, setValue] = useState('')\n\tconst quillRef = useRef(null)\n\n\tconst modules = {\n\t\ttoolbar: {\n\t\t\tcontainer: [\n\t\t\t\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t\t\t\t[{ color: [] }, { background: [] }],\n\t\t\t\t[{ align: [] }],\n\t\t\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t\t\t[{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n\t\t\t\t[{ script: 'sub' }, { script: 'super' }],\n\t\t\t\t['link'],\n\t\t\t],\n\t\t},\n\t\tclipboard: {\n\t\t\tmatchVisual: false,\n\t\t},\n\t}\n\n\tuseEffect(() => {\n\t\tsetQuill(value)\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-editor'>\n\t\t\t\t<ReactQuill ref={ quillRef } modules={ modules } formats={ TextEditor.formats } theme='snow' value={ value } onChange={ setValue } />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nTextEditor.formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'align', 'color', 'script', 'background']\n\nexport default TextEditor\n","import React, { useEffect, useRef, useState } from 'react'\nimport { addText } from '../../../actions/post-content/text.action'\nimport useForm from '../../../hooks/useForm'\nimport TextEditor from '../../../ui/TextEditor'\n\nconst AddText = ({ saveElement, postID, increment }) => {\n\tconst isMounted = useRef(true)\n\tconst [quill, setQuill] = useState()\n\tconst { values, setValues } = useForm()\n\n\tconst saveText = async () => {\n\t\tconst theText = await addText(values, postID)\n\t\tsaveElement('text', theText)\n\t\tincrement()\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\ttext: quill,\n\t\t\t\tparsedText: { __html: quill },\n\t\t\t})\n\t\t}\n\t}, [quill, setValues])\n\n\treturn (\n\t\t<div>\n\t\t\t<TextEditor setQuill={ setQuill } />\n\t\t\t<button className='my-btn mini' onClick={ () => saveText() }>\n\t\t\t\tAñadir Texto a la entrada\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default AddText\n","import React from 'react'\nimport { addImage } from '../../../actions/post-content/image.action'\nimport useForm from '../../../hooks/useForm'\n\nconst AddImage = ({ saveElement, postID, increment }) => {\n\tconst { values, handleFileChange } = useForm()\n\tconst saveImage = async () => {\n\t\tconst theImage = await addImage({ image: values.image }, postID)\n\t\tsaveElement('image', theImage)\n\t\tincrement()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='file-group'>\n\t\t\t\t<input type='file' className='file-input' name='image' id='image' onChange={ handleFileChange } />\n\t\t\t</div>\n\t\t\t{values?.image && (\n\t\t\t\t<>\n\t\t\t\t\t<img className='unique-image' src={ values.image } alt='' />\n\t\t\t\t\t<button className='my-btn mini' onClick={ () => saveImage() }> Añadir Imagen a la Entrada</button>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default AddImage\n","import React, { useState } from 'react'\nimport { fileUpload } from '../../../helpers/uploadFiles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { addGallery } from '../../../actions/post-content/gallery.action'\n\nconst AddGallery = ({ saveElement, postID, increment }) => {\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [gallery, setGallery] = useState([])\n\tconst [showButton, setShowButton] = useState(false)\n\n\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tsetShowButton(true)\n\n\t\tsetAuxValue(url)\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst galleryCopy = [...gallery]\n\t\tgalleryCopy.splice(idx, 1)\n\t\tsetGallery(galleryCopy)\n\t}\n\n\tconst handleAddGallery = (e) => {\n\t\te.preventDefault()\n\t\tif (gallery.length === 0) {\n\t\t\tsetGallery([auxValue])\n\t\t} else if (!gallery?.includes(auxValue)) {\n\t\t\tsetGallery([...gallery, auxValue])\n\t\t}\n\t\tsetShowButton(false)\n\n\t}\n\tconst saveGallery = async () => {\n\t\tconst theGallery = await addGallery({ gallery: gallery }, postID)\n\t\tsaveElement('gallery', theGallery)\n\t\tincrement()\n\t}\n\n\treturn (\n\t\t<section id=\"add-gallery\">\n\t\t\t<div className='file-group'>\n\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } placeholder={ 'Añadir Foto' } name='gallery' />\n\t\t\t\t{ showButton && <button onClick={ handleAddGallery } className='my-btn mini third'>Añadir Imagen</button> }\n\t\t\t</div>\n\t\t\t<div className='gallery'>\n\t\t\t\t{ gallery?.map((picture, idx) => (\n\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t<FontAwesomeIcon className='close-icon' onClick={ () => deletePicture(idx) } icon='times-circle' />\n\t\t\t\t\t</figure>\n\t\t\t\t)) }\n\t\t\t</div>\n\t\t\t{gallery.length > 0 && <button className='my-btn mini' onClick={ () => saveGallery() }> Añadir Galería a la entrada </button> }\n\t\t</section>\n\t)\n}\n\nexport default AddGallery\n","import React from 'react'\nimport { addVideo } from '../../../actions/post-content/video.action'\nimport useForm from '../../../hooks/useForm'\n\nconst AddVideo = ({ saveElement, postID, increment }) => {\n\tconst { values, handleFileChange } = useForm()\n\n\tconst saveVideo = async () => {\n\t\tconst theVideo = await addVideo({ video: values.video }, postID)\n\t\tsaveElement('video', theVideo)\n\t\tincrement()\n\t}\n\n\treturn (\n\t\t<section id=\"add-video\">\n\t\t\t<div className='file-group'>\n\t\t\t\t<input type='file' className='file-input' name='video' id='video' onChange={ handleFileChange } />\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tvalues.video && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<figure className=\"video-preview\">\n\t\t\t\t\t\t\t<video className='video-preview' src={ values.video } controls muted />\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t<button className='my-btn mini' onClick={ () => saveVideo() }> Añadir Vídeo a la entrada </button>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\n\t\t</section>\n\t)\n}\n\nexport default AddVideo\n","import React, { useState } from 'react'\nimport { fileUpload } from '../../../helpers/uploadFiles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { addSlider } from '../../../actions/post-content/slider.action'\n\nconst AddSlider = ({ saveElement, postID, increment }) => {\n\tconst [auxValue, setAuxValue] = useState()\n\tconst [slider, setSlider] = useState([])\n\tconst [showButton, setShowButton] = useState(false)\n\n\tconst handleGalleryChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tsetShowButton(true)\n\t\tsetAuxValue(url)\n\t}\n\n\tconst deletePicture = (idx) => {\n\t\tconst sliderCopy = [...slider]\n\t\tsliderCopy.splice(idx, 1)\n\t\tsetSlider(sliderCopy)\n\t}\n\n\tconst handleAddSlider = (e) => {\n\t\te.preventDefault()\n\t\tif (slider.length === 0) {\n\t\t\tsetSlider([auxValue])\n\t\t} else if (!slider?.includes(auxValue)) {\n\t\t\tsetSlider([...slider, auxValue])\n\t\t}\n\t\tsetShowButton(false)\n\t}\n\tconst saveSlider = async () => {\n\t\tconst theSlider = await addSlider({ slides: slider }, postID)\n\t\tsaveElement('slider', theSlider)\n\t\tincrement()\n\t}\n\n\treturn (\n\t\t<section id=\"add-slider\">\n\t\t\t<div className='file-group'>\n\t\t\t\t<input className='file-input' type='file' onChange={ handleGalleryChange } name='slider' />\n\t\t\t\t{\n\t\t\t\t\tshowButton && <button onClick={ handleAddSlider } className='my-btn mini third'> Añadir Imagen al Slider </button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className='slider-gallery'>\n\t\t\t\t{ slider?.map((picture, idx) => (\n\t\t\t\t\t<figure className='each-picture' key={ idx }>\n\t\t\t\t\t\t<img src={ picture } alt='' />\n\t\t\t\t\t\t<FontAwesomeIcon className='close-icon' onClick={ () => deletePicture(idx) } icon='times-circle' />\n\t\t\t\t\t</figure>\n\t\t\t\t)) }\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tslider.length > 0 && <button className='my-btn mini' onClick={ () => saveSlider() }>Añadir Slider a la Entrada </button>\n\t\t\t}\n\t\t</section>\n\t)\n}\n\nexport default AddSlider\n","import { useState } from 'react'\n\nconst useCounter = (initialState = 0) => {\n\tconst [counter, setCounter] = useState(initialState)\n\n\tconst increment = (factor = 1) => {\n\t\tsetCounter(counter + factor)\n\t}\n\n\tconst decrement = (factor = 1) => {\n\t\tsetCounter(counter - factor)\n\t}\n\n\tconst reset = () => {\n\t\tsetCounter(initialState)\n\t}\n\n\treturn {\n\t\tcounter,\n\t\tincrement,\n\t\tdecrement,\n\t\treset,\n\t\tsetCounter,\n\t}\n}\n\nexport default useCounter\n","import React, { useState } from 'react'\nimport { deleteGallery } from '../../../actions/post-content/gallery.action';\nimport { deleteText } from '../../../actions/post-content/text.action';\nimport { deleteSlider } from '../../../actions/post-content/slider.action';\nimport { deleteVideo } from '../../../actions/post-content/video.action';\nimport { deleteImage } from '../../../actions/post-content/image.action';\n\nconst RenderContentByType = ({ content, dragOver, dragStart, decrement }) => {\n\n    const [newContent, setNewContent] = useState(content)\n\n    const updatedContent = (id) => {\n        let filteredArray = newContent.filter(elm => elm._id !== id)\n        setNewContent(filteredArray)\n    }\n\n    const deleteThis = async (type, id) => {\n        switch (type) {\n            case 'text':\n                await deleteText(id)\n                updatedContent(id)\n                break\n            case 'image':\n                await deleteImage(id)\n                updatedContent(id)\n                break\n            case 'video':\n                await deleteVideo(id)\n                updatedContent(id)\n                break\n            case 'slider':\n                await deleteSlider(id)\n                updatedContent(id)\n                break\n            case 'gallery':\n                await deleteGallery(id)\n                updatedContent(id)\n                break\n\n            default:\n                break;\n        }\n    }\n    const renderByContentType = (contentType, content) => {\n        switch (contentType) {\n            case 'texto':\n                return (\n                    <div key={ content._id } posttype=\"text\" className=\"preview post-text\" id={ content._id } onDragStart={ dragStart } onDragOver={ dragOver } draggable='true'>\n                        <p><strong>Tipo de contenido:</strong> Texto</p>\n                        {content.order && <p><strong>Orden de aparición:</strong> { content.order }</p> }\n                        <hr />\n                        <div dangerouslySetInnerHTML={ content.parsedText }></div>\n                        <button className='my-btn mini underlined' onClick={ () => deleteThis('text', content._id) }>Borrar</button>\n                    </div>\n                )\n            case 'imagen':\n                return (\n                    <div key={ content._id } posttype=\"imagen\" className='preview post-simple-image' id={ content._id } onDragStart={ dragStart } onDragOver={ dragOver } draggable='true'>\n                        <p><strong>Tipo de contenido:</strong> Imagen simple</p>\n                        {content.order && <p><strong>Orden de aparición:</strong> { content.order }</p> }\n                        <hr />\n                        <img draggable='false' className='unique-image' src={ content.image } alt='' />\n                        <button className='my-btn mini underlined' onClick={ () => deleteThis('image', content._id) }>Borrar</button>\n                    </div>\n                )\n            case 'video':\n                return (\n                    <div key={ content._id } posttype=\"video\" className='preview post-video' id={ content._id } onDragStart={ dragStart } onDragOver={ dragOver } draggable='true'>\n                        <p><strong>Tipo de contenido:</strong> Vídeo</p>\n                        {content.order && <p><strong>Orden de aparición:</strong> { content.order }</p> }\n                        <hr />\n                        <video draggable='false' className='video-preview' src={ content.video } controls muted />\n                        <button className='my-btn mini underlined' onClick={ () => deleteThis('video', content._id) }>Borrar</button>\n                    </div>\n                )\n            case 'slider':\n                return (\n                    <div key={ content._id } posttype=\"slider\" className='preview post-slider' onDragStart={ dragStart } onDragOver={ dragOver } draggable='true'>\n                        <p><strong>Tipo de contenido:</strong> Slider</p>\n                        {content.order && <p><strong>Orden de aparición:</strong> { content.order }</p> }\n                        <hr />\n                        <div className='gallery'>\n                            { content.slides.map((picture, idx) => (\n                                <figure draggable='false' className='each-picture' key={ idx }>\n                                    <img draggable='false' src={ picture } alt='' />\n                                </figure>\n                            )) }\n                        </div>\n                        <button className='my-btn mini underlined' onClick={ () => deleteThis('slider', content._id) }>Borrar</button>\n                    </div>\n                )\n            case 'galeria':\n                return (\n                    <div key={ content._id } posttype=\"galeria\" className='preview post-gallery' id={ content._id } onDragStart={ dragStart } onDragOver={ dragOver } draggable='true'>\n                        <p><strong>GTipo de contenido:</strong> alería</p>\n                        {content.order && <p><strong>Orden de aparición:</strong> { content.order }</p> }\n                        <hr />>\n                        <div className='gallery'>\n                            { content.gallery.map((picture, idx) => (\n                                <figure draggable='false' className='each-picture' key={ idx }>\n                                    <img draggable='false' src={ picture } alt='' />\n                                </figure>\n                            )) }\n                        </div>\n                        <button className='my-btn mini underlined' onClick={ () => deleteThis('gallery', content._id) }>Borrar</button>\n                    </div>\n                )\n            default:\n                break\n        }\n    }\n\n    return (\n        <>\n            {newContent.length > 0 && newContent.map(content => renderByContentType(content.postType, content)) }\n        </>\n    )\n}\n\nexport default RenderContentByType\n","import React from 'react'\n\nconst PostState = ({ postState, savePostState }) => {\n\n\n    const selectThis = ({ target }) => {\n        savePostState(target.value)\n    }\n\n    return (\n        <select onChange={ selectThis }>\n            <option value='default' defaultValue> { postState ? postState : 'Cambiar Estado de la publicación...' } </option>\n            {postState !== 'borrador' && <option value=\"borrador\">Borrador</option> }\n            {postState !== 'publicado' && <option value=\"publicado\">Publicada</option> }\n        </select>\n    )\n}\n\nexport default PostState\n","import React, { useEffect, useRef, useState } from 'react'\nimport { deletePost, getThisPost, updatePost } from '../../actions/posts.action'\nimport { useHistory } from \"react-router-dom\";\nimport useForm from '../../hooks/useForm';\nimport { findVideoAndUpdate, findVideoAndUpdateReturn } from '../../actions/post-content/video.action';\nimport { findImageAndUpdate, findImageAndUpdateReturn } from '../../actions/post-content/image.action';\nimport { findTextAndUpdate, findTextAndUpdateReturn } from '../../actions/post-content/text.action';\nimport { findSliderAndUpdate, findSliderAndUpdateReturn } from '../../actions/post-content/slider.action';\nimport { findGalleryAndUpdate, findGalleryAndUpdateReturn } from '../../actions/post-content/gallery.action';\nimport AddText from './content/AddText';\nimport AddImage from './content/AddImage';\nimport AddGallery from './content/AddGallery';\nimport AddVideo from './content/AddVideo';\nimport AddSlider from './content/AddSlider';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useCounter from '../../hooks/useCounter';\nimport RenderContentByType from './content/RenderContentByType';\nimport PostState from './content/PostState';\n\nconst AddPostScreen = () => {\n    let history = useHistory();\n    const { counter, increment, decrement, } = useCounter(1)\n    let params = useParams()\n    const [postId, setPostId] = useState()\n    const select = useRef()\n    const [auxContent, setAuxContent] = useState('default')\n    const { values, handleInputChange } = useForm()\n\n    const [content, setContent] = useState([])\n\n\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n    }, [params.postID])\n\n    const addThis = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setAuxContent('text')\n                break\n            case 'image':\n                setAuxContent('image')\n                break\n            case 'gallery':\n                setAuxContent('gallery')\n                break\n            case 'video':\n                setAuxContent('video')\n                break\n            case 'slider':\n                setAuxContent('slider')\n                break\n            default:\n                setAuxContent('default')\n                break\n        }\n    }\n\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'gallery':\n                if (selectedPost.content.gallery.length > 0) {\n                    const contentCopy = [...selectedPost.content.gallery, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, gallery: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, gallery: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'video':\n                if (selectedPost.content.video.length > 0) {\n                    const contentCopy = [...selectedPost.content.video, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, video: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, video: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'slider':\n                if (selectedPost.content.slider.length > 0) {\n                    const contentCopy = [...selectedPost.content.slider, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, slider: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, slider: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Drag and Drop Methods\n    const drop = async (e) => {\n        e.preventDefault()\n        const tag = e.dataTransfer.getData('card_id')\n        const card = document.getElementById(tag)\n        const cardType = (e.dataTransfer.getData('card_type'));\n\n        card.style.display = 'block'\n        card.className = 'preview'\n\n        e.target.appendChild(card)\n        const spaceId = card.parentElement.id\n        let filteredArray = []\n        let orderedNew = []\n\n        switch (cardType) {\n            case 'text':\n                await findTextAndUpdate(tag, { order: spaceId })\n                const updatedText = await findTextAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedText.text].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'imagen':\n                await findImageAndUpdate(tag, { order: spaceId })\n                const updatedImage = await findImageAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedImage.image].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'gallery':\n                await findGalleryAndUpdate(tag, { order: spaceId })\n                const updatedGallery = await findGalleryAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedGallery.gallery].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'video':\n                await findVideoAndUpdate(tag, { order: spaceId })\n                const updatedVideo = await findVideoAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedVideo.video].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'slider':\n                await findSliderAndUpdate(tag, { order: spaceId })\n                const updatedSlider = await findSliderAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedSlider.slider].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            default:\n                break;\n        }\n\n\n\n    }\n\n    const dragOverReceptor = (e) => {\n        e.preventDefault()\n    }\n\n    const dragStart = (e) => {\n        const target = e.target\n        e.dataTransfer.setData('card_id', target.id)\n        e.dataTransfer.setData('card_type', target.attributes.posttype.value)\n\n        setTimeout(() => {\n            target.style.display = 'none'\n            target.className = 'preview'\n        }, 0)\n    }\n\n    const dragOver = (e) => {\n        e.stopPropagation()\n    }\n\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <article className=\"post-btn-group\">\n                <p>¿Qué hacemos con éste post?</p>\n                <button className=\"my-btn mini secondary\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini\" onClick={ () => handleExit() }>Salir</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <article className=\"title-area\">\n                        <form className='form-title' onSubmit={ saveTitles }>\n                            <label htmlFor='title'>Título de la Entrada</label>\n                            <input id='title' type='text' name='title' onChange={ handleInputChange } placeholder={ selectedPost.title } />\n                            <label htmlFor='subtitle'>Subtítulo de la Entrada</label>\n                            <input id='subtitle' type='text' name='subtitle' placeholder={ selectedPost.subtitle } onChange={ handleInputChange } />\n                            <button className='my-btn mini secondary' type='submit'>\n                                Guardar títulos\n                        </button>\n                        </form>\n                    </article>\n\n                    <select ref={ select } onChange={ addThis } name='content' placeholder='Añadir...'>\n                        <option value='default' defaultValue> Añadir... </option>\n                        <option value='text'>Texto</option>\n                        <option value='image'>Imagen única</option>\n                        <option value='gallery'>Galería de imágenes</option>\n                        <option value='slider'>Slider</option>\n                        <option value='video'>Vídeo</option>\n                    </select>\n\n\n                    <article className='add-post'>\n                        { auxContent === 'default' && <p>Añadir elemento al post</p> }\n                        { auxContent === 'text' && <AddText saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'image' && <AddImage saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'gallery' && <AddGallery saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'video' && <AddVideo saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'slider' && <AddSlider saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                    </article>\n                    <article className=\"content-to-order\">\n                        <h6>Contenido generado para ordenar</h6>\n                        {\n                            content.length > 0 && <RenderContentByType content={ content } dragStart={ dragStart } dragOver={ dragOver } decrement={ decrement } />\n                        }\n                    </article>\n                </div>\n                <div className=\"view-area\">\n                    {\n                        selectedPost.title && <h1>{ selectedPost.title }</h1>\n                    }\n                    {\n                        selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                    }\n                    <h6>Orden de aparicion de los elementos</h6>\n                    { [...Array(counter)].map((elm, idx) => (\n                        idx !== 0 && (\n                            <div onDrop={ drop } onDragOver={ dragOverReceptor } id={ idx } key={ `contenedor-${idx}` } className=\"receiving-container\">\n                                <p className=\"container-number\">\n                                    { idx }\n                                </p>\n                            </div>\n                        )\n                    ))\n                    }\n\n                </div>\n            </section>\n        </section>\n\n    )\n}\n\nexport default AddPostScreen\n","import React, { useEffect, useRef, useState } from 'react'\nimport { deletePost, getThisPost, updatePost } from '../../actions/posts.action'\nimport { useHistory } from \"react-router-dom\";\nimport useForm from '../../hooks/useForm';\nimport { findVideoAndUpdate, findVideoAndUpdateReturn } from '../../actions/post-content/video.action';\nimport { findImageAndUpdate, findImageAndUpdateReturn } from '../../actions/post-content/image.action';\nimport { findTextAndUpdate, findTextAndUpdateReturn } from '../../actions/post-content/text.action';\nimport { findSliderAndUpdate, findSliderAndUpdateReturn } from '../../actions/post-content/slider.action';\nimport { findGalleryAndUpdate, findGalleryAndUpdateReturn } from '../../actions/post-content/gallery.action';\nimport AddText from './content/AddText';\nimport AddImage from './content/AddImage';\nimport AddGallery from './content/AddGallery';\nimport AddVideo from './content/AddVideo';\nimport AddSlider from './content/AddSlider';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useCounter from '../../hooks/useCounter';\nimport RenderContentByType from './content/RenderContentByType';\nimport PostState from './content/PostState';\n\nconst EditPostScreen = () => {\n    let history = useHistory();\n    const { counter, increment, decrement, setCounter } = useCounter(1)\n    let params = useParams()\n    const [postId, setPostId] = useState()\n    const select = useRef()\n    const [auxContent, setAuxContent] = useState('default')\n    const { values, handleInputChange } = useForm()\n\n    const [content, setContent] = useState([])\n\n\n    const [selectedPost, setSelectedPost] = useState({ title: 'Sin título', subtitle: '', content: { slider: [], image: [], text: [], video: [], gallery: [] } })\n\n\n    const findCurrentPost = async (id) => {\n        const currentPost = await getThisPost(id)\n        setSelectedPost(currentPost)\n    }\n\n    const handleExit = (id) => {\n        history.goBack()\n    }\n\n    const handleDeletePost = async (id) => {\n        await deletePost(id)\n        history.goBack()\n    }\n    const handleUpdatePost = async (id, content) => {\n        await updatePost(id, content)\n        history.goBack()\n    }\n\n    const orderPreviousContent = async (id) => {\n        const currentPost = await getThisPost(id)\n        const postContent = currentPost.content\n        let aux = []\n        for (const content in postContent) {\n            postContent[content].forEach(elm => aux.push(elm))\n        }\n        aux.sort((a, b) => a.order - b.order)\n        setContent(aux)\n        setCounter(aux.length + 1)\n    }\n\n    useEffect(() => {\n        setPostId(params.postID)\n        findCurrentPost(params.postID)\n        orderPreviousContent(params.postID)\n    }, [params.postID])\n\n    const addThis = ({ target }) => {\n        switch (target.value) {\n            case 'text':\n                setAuxContent('text')\n                break\n            case 'image':\n                setAuxContent('image')\n                break\n            case 'gallery':\n                setAuxContent('gallery')\n                break\n            case 'video':\n                setAuxContent('video')\n                break\n            case 'slider':\n                setAuxContent('slider')\n                break\n            default:\n                setAuxContent('default')\n                break\n        }\n    }\n\n    const setToDefault = () => {\n        select.current.selectedIndex = 0\n        setAuxContent('default')\n    }\n\n    const savePostState = (status) => {\n        setSelectedPost({ ...selectedPost, status: status })\n    }\n\n    const saveElement = (type, element) => {\n        switch (type) {\n            case 'text':\n                if (selectedPost.content.text.length > 0) {\n                    const contentCopy = [...selectedPost.content.text, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, text: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'image':\n                if (selectedPost.content.image.length > 0) {\n                    const contentCopy = [...selectedPost.content.image, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, image: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'gallery':\n                if (selectedPost.content.gallery.length > 0) {\n                    const contentCopy = [...selectedPost.content.gallery, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, gallery: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, gallery: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'video':\n                if (selectedPost.content.video.length > 0) {\n                    const contentCopy = [...selectedPost.content.video, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, video: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, video: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            case 'slider':\n                if (selectedPost.content.slider.length > 0) {\n                    const contentCopy = [...selectedPost.content.slider, element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, slider: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                } else {\n                    const contentCopy = [element]\n                    setSelectedPost({ ...selectedPost, content: { ...selectedPost.content, slider: contentCopy } })\n                    setContent(c => [...c, element])\n                    setToDefault()\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    const saveTitles = (e) => {\n        e.preventDefault()\n        setSelectedPost({ ...selectedPost, title: values.title, subtitle: values.subtitle })\n    }\n\n\n    //Drag and Drop Methods\n    const drop = async (e) => {\n        e.preventDefault()\n        const tag = e.dataTransfer.getData('card_id')\n        const card = document.getElementById(tag)\n        const cardType = (e.dataTransfer.getData('card_type'));\n\n        card.style.display = 'block'\n        card.className = 'preview'\n\n        e.target.appendChild(card)\n        const spaceId = card.parentElement.id\n        let filteredArray = []\n        let orderedNew = []\n\n        switch (cardType) {\n            case 'text':\n                await findTextAndUpdate(tag, { order: spaceId })\n                const updatedText = await findTextAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedText.text].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'imagen':\n                await findImageAndUpdate(tag, { order: spaceId })\n                const updatedImage = await findImageAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedImage.image].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'gallery':\n                await findGalleryAndUpdate(tag, { order: spaceId })\n                const updatedGallery = await findGalleryAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedGallery.gallery].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'video':\n                await findVideoAndUpdate(tag, { order: spaceId })\n                const updatedVideo = await findVideoAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedVideo.video].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            case 'slider':\n                await findSliderAndUpdate(tag, { order: spaceId })\n                const updatedSlider = await findSliderAndUpdateReturn(tag, { order: spaceId })\n                filteredArray = content.filter(elm => elm._id !== tag)\n                orderedNew = [...filteredArray, updatedSlider.slider].sort((a, b) => a.order - b.order)\n                setContent(orderedNew)\n\n                break;\n            default:\n                break;\n        }\n\n\n\n    }\n\n    const dragOverReceptor = (e) => {\n        e.preventDefault()\n    }\n\n    const dragStart = (e) => {\n        const target = e.target\n        e.dataTransfer.setData('card_id', target.id)\n        e.dataTransfer.setData('card_type', target.attributes.posttype.value)\n\n        setTimeout(() => {\n            target.style.display = 'none'\n            target.className = 'preview'\n        }, 0)\n    }\n\n    const dragOver = (e) => {\n        e.stopPropagation()\n    }\n\n\n\n    return (\n        <section id=\"add-posts-screen\">\n            <article className=\"post-btn-group\">\n                <p>¿Qué hacemos con éste post?</p>\n                <button className=\"my-btn mini secondary\" onClick={ () => handleDeletePost(postId) }>Borrar Entrada</button>\n                <button className=\"my-btn mini third\" onClick={ () => handleUpdatePost(postId, selectedPost) }>Guardar Entrada</button>\n                <button className=\"my-btn mini\" onClick={ () => handleExit() }>Salir</button>\n            </article>\n            <section className=\"edit-post\">\n                <div className=\"edit-area\">\n                    <PostState savePostState={ savePostState } postState={ selectedPost.status } />\n                    <article className=\"title-area\">\n                        <form className='form-title' onSubmit={ saveTitles }>\n                            <label htmlFor='title'>Título de la Entrada</label>\n                            <input id='title' type='text' name='title' onChange={ handleInputChange } placeholder={ selectedPost.title } />\n                            <label htmlFor='subtitle'>Subtítulo de la Entrada</label>\n                            <input id='subtitle' type='text' name='subtitle' placeholder={ selectedPost.subtitle } onChange={ handleInputChange } />\n                            <button className='my-btn mini secondary' type='submit'>\n                                Guardar títulos\n                        </button>\n                        </form>\n                    </article>\n\n                    <select ref={ select } onChange={ addThis } name='content' placeholder='Añadir...'>\n                        <option value='default' defaultValue> Añadir... </option>\n                        <option value='text'>Texto</option>\n                        <option value='image'>Imagen única</option>\n                        <option value='gallery'>Galería de imágenes</option>\n                        <option value='slider'>Slider</option>\n                        <option value='video'>Vídeo</option>\n                    </select>\n\n\n                    <article className='add-post'>\n                        { auxContent === 'default' && <p>Añadir elemento al post</p> }\n                        { auxContent === 'text' && <AddText saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'image' && <AddImage saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'gallery' && <AddGallery saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'video' && <AddVideo saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                        { auxContent === 'slider' && <AddSlider saveElement={ saveElement } postID={ postId } increment={ increment } /> }\n                    </article>\n                    <article className=\"content-to-order\">\n                        <h6>Contenido generado para ordenar</h6>\n                        {\n                            content.length > 0 && <RenderContentByType content={ content } dragStart={ dragStart } dragOver={ dragOver } decrement={ decrement } />\n                        }\n                    </article>\n                </div>\n                <div className=\"view-area\">\n                    {\n                        selectedPost.title && <h1>{ selectedPost.title }</h1>\n                    }\n                    {\n                        selectedPost.subtitle && <h2>{ selectedPost.subtitle }</h2>\n                    }\n                    <h6>Orden de aparicion de los elementos</h6>\n                    { [...Array(counter)].map((elm, idx) => (\n                        idx !== 0 && (\n                            <div onDrop={ drop } onDragOver={ dragOverReceptor } id={ idx } key={ `contenedor-${idx}` } className=\"receiving-container\">\n                                <p className=\"container-number\">\n                                    { idx }\n                                </p>\n                            </div>\n                        )\n                    ))\n                    }\n\n                </div>\n            </section>\n        </section>\n\n    )\n}\n\nexport default EditPostScreen\n","import React, { useContext, useEffect, useReducer, useRef } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport SignupScreen from '../components/auth/SignupScreen'\nimport CompanyScreen from '../components/CompanyScreen'\nimport DashboardScreen from '../components/DashboardScreen'\nimport { fetchSinToken } from '../helpers/fetch'\nimport { AuthContext } from '../reducers/auth/AuthContext'\nimport { CompanyContext } from '../reducers/CompanyContext'\nimport { CompanyReducer } from '../reducers/CompanyReducer'\nimport { DashboardNav } from '../ui/DashboardNav'\nimport { Navbar } from '../ui/Navbar'\nimport { types } from '../types/types'\nimport PostsScreen from '../components/PostsScreen'\nimport Post from '../components/posts/Post'\nimport AddPostScreen from '../components/posts/AddPostScreen'\nimport EditPostScreen from '../components/posts/EditPostScreen'\n\nconst AppRouter = () => {\n\tconst isMounted = useRef(true)\n\tconst { user } = useContext(AuthContext)\n\tconst [company, dispatchCompany] = useReducer(CompanyReducer, {})\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tfetchSinToken(`companies`)\n\t\t\t\t.then((data) => data.json())\n\t\t\t\t.then((data) => dispatchCompany({ type: types.getCompany, payload: data.company[0] }))\n\t\t\t\t.catch((err) => new Error(err))\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t{ user.token ? (\n\t\t\t\t\t<CompanyContext.Provider value={ { company, dispatchCompany } }>\n\t\t\t\t\t\t<div className='dashboard-container'>\n\t\t\t\t\t\t\t<DashboardNav />\n\n\t\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic' component={ DashboardScreen } />\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/empresa' component={ CompanyScreen } />\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog' component={ PostsScreen } />\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/nueva-entrada/:postID' component={ AddPostScreen } />\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/:postID' component={ Post } />\n\t\t\t\t\t\t\t\t\t<Route exact path='/bratic/blog/editar-entrada/:postID' component={ EditPostScreen } />\n\t\t\t\t\t\t\t\t\t<Redirect to='/bratic' />\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</main>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CompanyContext.Provider>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={ LoginScreen } />\n\t\t\t\t\t\t\t\t<Route path='/registro' component={ SignupScreen } />\n\t\t\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import { useEffect, useReducer, useRef } from 'react'\nimport { AuthContext } from './reducers/auth/AuthContext'\nimport { AuthReducer } from './reducers/auth/authReducer'\n// Import Swiper styles\nimport 'swiper/swiper.scss'\nimport 'swiper/components/pagination/pagination.scss'\n//Photoswipe\nimport 'react-photoswiper/lib/photoswipe.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faTimesCircle, faChevronDown, faChevronUp, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport AppRouter from './routers/AppRouter'\nlibrary.add(fab, faTimesCircle, faChevronDown, faChevronUp, faCheckCircle)\n\nconst init = () => {\n\treturn JSON.parse(localStorage.getItem('bratic-user')) || { logged: false }\n}\n\nconst App = () => {\n\tconst isMounted = useRef(true)\n\tconst [user, dispatch] = useReducer(AuthReducer, {}, init)\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tlocalStorage.setItem('bratic-user', JSON.stringify(user))\n\t\t}\n\t}, [user])\n\n\treturn (\n\t\t<>\n\t\t\t<AuthContext.Provider value={{ user, dispatch }}>\n\t\t\t\t<AppRouter />\n\t\t\t</AuthContext.Provider>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}