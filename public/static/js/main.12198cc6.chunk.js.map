{"version":3,"sources":["reducers/auth/AuthContext.js","types/types.js","reducers/auth/authReducer.js","helpers/fetch.js","actions/auth.action.js","helpers/uploadFiles.js","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/SignupScreen.jsx","ui/Navbar.jsx","routers/AppRouter.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","require","types","AuthReducer","state","action","type","payload","logged","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","startLogin","email","password","a","resp","json","ok","loggedUser","id","name","token","localStorage","setItem","errorMsg","msg","Swal","fire","startSignup","signedupUser","fileUpload","file","formData","FormData","append","then","secure_url","catch","err","console","log","useForm","initialState","useState","values","setValues","resetForm","handleInputChange","target","value","handleFileChange","files","LoginScreen","dispatch","useContext","handleLogin","e","preventDefault","className","onSubmit","onChange","placeholder","to","SignupScreen","password2","handleSignup","Navbar","src","alt","AppRouter","exact","path","component","library","add","fab","faTimesCircle","faChevronDown","faChevronUp","faCheckCircle","init","parse","getItem","App","isMounted","useRef","useReducer","user","useEffect","current","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12198cc6.chunk.js","sourcesContent":["const { createContext } = require('react')\n\nexport const AuthContext = createContext()\n","export const types = {\n\tlogin: '[auth] login',\n\tsignup: '[auth] signup',\n\tlogout: '[auth] logout',\n\thasToken: '[auth] hastoken',\n\n}\n","import { types } from '../../types/types'\n\nexport const AuthReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase types.login:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.signup:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.hasToken:\n\t\t\treturn {\n\t\t\t\t...action.payload,\n\t\t\t}\n\t\tcase types.logout:\n\t\t\treturn {\n\t\t\t\tlogged: false,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const fetchSinToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tif (method === 'GET') {\n\t\treturn fetch(url)\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n\nexport const fetchConToken = (endpoint, data = {}, method = 'GET') => {\n\tconst url = `${baseURL}/${endpoint}`\n\tconst token = localStorage.getItem('mbr-token') || ''\n\tif (method === 'GET') {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t'x-token': token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t}\n}\n","import { fetchSinToken } from '../helpers/fetch'\nimport Swal from 'sweetalert2'\n\nexport const startLogin = async (email, password) => {\n\tconst resp = await fetchSinToken('auth/login', { email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst loggedUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\tlogged: true,\n\t\t\ttoken: body.token,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(loggedUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn loggedUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\nexport const startSignup = async (name, email, password) => {\n\tconst resp = await fetchSinToken('auth/signup', { name, email, password }, 'POST')\n\tconst body = await resp.json()\n\n\tif (body.ok) {\n\t\tconst signedupUser = {\n\t\t\tid: body.id,\n\t\t\tname: body.name,\n\t\t\temail: body.email,\n\t\t\ttoken: body.token,\n\t\t\tlogged: true,\n\t\t}\n\t\tlocalStorage.setItem('bratic-user', JSON.stringify(signedupUser))\n\t\tlocalStorage.setItem('bratic-token', body.token)\n\n\t\treturn signedupUser\n\t} else {\n\t\tconst errorMsg = body.msg\n\t\tSwal.fire('Error', errorMsg, 'error')\n\t}\n}\n\n","export const fileUpload = async (file) => {\n\tconst cloudUrl = 'https://api.cloudinary.com/v1_1/bratic-app/upload'\n\tconst formData = new FormData()\n\tformData.append('upload_preset', 'bratic-app')\n\tformData.append('file', file)\n\tlet url\n\n\tawait fetch(cloudUrl, { method: 'POST', body: formData })\n\t\t.then((data) => data.json())\n\t\t.then((data) => (url = data.secure_url))\n\t\t.catch((err) => console.log(err))\n\treturn url\n}\n","import { useState } from 'react'\nimport { fileUpload } from '../helpers/uploadFiles'\n\nconst useForm = (initialState = {}) => {\n\tconst [values, setValues] = useState(initialState)\n\n\tconst resetForm = () => {\n\t\tsetValues(initialState)\n\t}\n\n\tconst handleInputChange = ({ target }) => {\n\t\tsetValues({\n\t\t\t...values,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t}\n\tconst handleFileChange = async ({ target }) => {\n\t\tconst file = target.files[0]\n\t\tconst url = await fileUpload(file)\n\t\tawait setValues({\n\t\t\t...values,\n\t\t\t[target.name]: url,\n\t\t})\n\t}\n\n\treturn { values, setValues, handleInputChange, handleFileChange, resetForm }\n}\n\nexport default useForm\n","import React, { useContext } from 'react'\nimport { startLogin } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst LoginScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { email, password } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault()\n\t\tconst loggedUser = await startLogin(email, password)\n\n\t\tdispatch({ type: types.login, payload: loggedUser })\n\t}\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tEntrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿No tienes cuenta? Crea una <Link to='/registro'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default LoginScreen\n","import React, { useContext } from 'react'\nimport Swal from 'sweetalert2'\nimport { startSignup } from '../../actions/auth.action'\nimport { AuthContext } from './../../reducers/auth/AuthContext'\nimport useForm from '../../hooks/useForm'\nimport { Link } from 'react-router-dom'\nimport { types } from '../../types/types'\n\nconst SignupScreen = () => {\n\tconst { values, handleInputChange } = useForm({})\n\tconst { name, email, password, password2 } = values\n\tconst { dispatch } = useContext(AuthContext)\n\n\tconst handleSignup = async (e) => {\n\t\te.preventDefault()\n\t\tif (password === password2) {\n\t\t\tconst signedupUser = await startSignup(name, email, password)\n\n\t\t\tdispatch({ type: types.signup, payload: signedupUser })\n\t\t} else {\n\t\t\tSwal.fire('Error', 'Las contraseñas deben coincidir', 'error')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<section className='login'>\n\t\t\t\t<form onSubmit={handleSignup}>\n\t\t\t\t\t<label>Nombre</label>\n\t\t\t\t\t<input type='text' onChange={handleInputChange} placeholder='Tu nombre' name='name' />\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input type='email' onChange={handleInputChange} placeholder='Tu email' name='email' />\n\t\t\t\t\t<label>Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Contraseña' name='password' />\n\t\t\t\t\t<label>Repite Contraseña</label>\n\t\t\t\t\t<input type='password' onChange={handleInputChange} placeholder='Repite Contraseña' name='password2' />\n\t\t\t\t\t<button type='submit' className='my-btn mini'>\n\t\t\t\t\t\tRegistro\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<small>\n\t\t\t\t\t¿Ya estás registrado? Entra <Link to='/'>aquí</Link>{' '}\n\t\t\t\t</small>\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nexport default SignupScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n\treturn (\n\t\t<nav className='login-nav'>\n\t\t\t<div className='container'>\n\t\t\t\t<figure>\n\t\t\t\t\t<img src='https://res.cloudinary.com/bratic-app/image/upload/v1609866461/logoBN_ujpbti.svg' alt='' />\n\t\t\t\t</figure>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/'>Entrar</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to='/registro'>Registro</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport SignupScreen from '../components/auth/SignupScreen'\nimport { Navbar } from '../ui/Navbar'\n\nconst AppRouter = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t<main className='container'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={LoginScreen} />\n\t\t\t\t\t\t<Route path='/registro' component={SignupScreen} />\n\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<small>Made with &hearts; by Yai</small>\n\t\t\t\t\t<small>&copy; Bratic S.L.</small>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default AppRouter\n","import { useEffect, useReducer, useRef } from 'react'\nimport { AuthContext } from './reducers/auth/AuthContext'\nimport { AuthReducer } from './reducers/auth/authReducer'\nimport './global.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faTimesCircle, faChevronDown, faChevronUp, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport AppRouter from './routers/AppRouter'\nlibrary.add(fab, faTimesCircle, faChevronDown, faChevronUp, faCheckCircle)\n\nconst init = () => {\n\treturn JSON.parse(localStorage.getItem('bratic-user')) || { logged: false }\n}\n\nconst App = () => {\n\tconst isMounted = useRef(true)\n\tconst [user, dispatch] = useReducer(AuthReducer, {}, init)\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (isMounted.current) {\n\t\t\tlocalStorage.setItem('bratic-user', JSON.stringify(user))\n\t\t}\n\t}, [user])\n\n\treturn (\n\t\t<>\n\t\t\t<AuthContext.Provider value={{ user, dispatch }}>\n\t\t\t\t<AppRouter />\n\t\t\t</AuthContext.Provider>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}